version: '3'
services:
  nginx:
    image: nginx:latest
    container_name: nginx # container 이름은 proxy
    ports:
      - "80:80"
    env_file: .env
    depends_on:
      - 'db_postgres'
    volumes:
      - ./proxy/nginx.conf:/etc/nginx/nginx.conf
    restart: "unless-stopped" # 내부에서 에러로 인해 container가 죽을 경우 restart

  server:
    build:
      context: ./  # 빌드할 Dockerfile이 위치한 경로
    container_name: server
    expose:
      - "3000"
    depends_on:
      - 'db_postgres'
    volumes:
      - ./app:/app
    env_file: .env
    restart: "unless-stopped"

  db_postgres:
    image: postgres
    container_name: db_postgres
    env_file: .env
    volumes:
      - db_volume:/var/lib/postgresql/data
      - ./app/react_p/src/images:/images

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    ports:
      - "8088:8088"
    depends_on:
      - 'db_postgres'
    env_file: .env
    volumes:
      - pgadmin_volume:/var/lib/pgadmin
      - ./servers.json:/pgadmin4/servers.json

volumes:
  db_volume:
  pgadmin_volume:
