[{"/Users/jinkim/bye_blackhole/client/src/index.tsx":"1","/Users/jinkim/bye_blackhole/client/src/reportWebVitals.js":"2","/Users/jinkim/bye_blackhole/client/src/App.tsx":"3","/Users/jinkim/bye_blackhole/client/src/Chat/Chat.tsx":"4","/Users/jinkim/bye_blackhole/client/src/Lobby/Lobby.tsx":"5","/Users/jinkim/bye_blackhole/client/src/Chat/ChatInput.tsx":"6","/Users/jinkim/bye_blackhole/client/src/Chat/UserList.tsx":"7","/Users/jinkim/bye_blackhole/client/src/Chat/ChatLog.tsx":"8","/Users/jinkim/bye_blackhole/client/src/Chat/Loading.tsx":"9","/Users/jinkim/bye_blackhole/client/src/Lobby/ChatListModal.tsx":"10","/Users/jinkim/bye_blackhole/client/src/Lobby/GameListModal.tsx":"11","/Users/jinkim/bye_blackhole/client/src/Chat/UserListModal.tsx":"12","/Users/jinkim/bye_blackhole/client/src/Images/Images.tsx":"13","/Users/jinkim/bye_blackhole/client/src/Login/Login.tsx":"14","/Users/jinkim/bye_blackhole/client/src/Lobby/ChatList.tsx":"15","/Users/jinkim/bye_blackhole/client/src/Lobby/GameList.tsx":"16","/Users/jinkim/bye_blackhole/client/src/Admin/Admin.tsx":"17","/Users/jinkim/bye_blackhole/client/src/SideBar/SideBar.tsx":"18","/Users/jinkim/bye_blackhole/client/src/SideBar/UserInfoModal.tsx":"19","/Users/jinkim/bye_blackhole/client/src/Lobby/PwdCheckModal.tsx":"20","/Users/jinkim/bye_blackhole/client/src/SideBar/GetChatList.tsx":"21","/Users/jinkim/bye_blackhole/client/src/Chat/ChatSettingModal.tsx":"22","/Users/jinkim/jin_bye/client/src/index.tsx":"23","/Users/jinkim/jin_bye/client/src/reportWebVitals.js":"24","/Users/jinkim/jin_bye/client/src/App.tsx":"25","/Users/jinkim/jin_bye/client/src/Chat/Chat.tsx":"26","/Users/jinkim/jin_bye/client/src/Admin/Admin.tsx":"27","/Users/jinkim/jin_bye/client/src/Lobby/Lobby.tsx":"28","/Users/jinkim/jin_bye/client/src/Chat/ChatLog.tsx":"29","/Users/jinkim/jin_bye/client/src/Chat/ChatInput.tsx":"30","/Users/jinkim/jin_bye/client/src/Chat/Loading.tsx":"31","/Users/jinkim/jin_bye/client/src/Chat/UserList.tsx":"32","/Users/jinkim/jin_bye/client/src/Chat/ChatSettingModal.tsx":"33","/Users/jinkim/jin_bye/client/src/Lobby/ChatListModal.tsx":"34","/Users/jinkim/jin_bye/client/src/Lobby/ChatList.tsx":"35","/Users/jinkim/jin_bye/client/src/Lobby/GameListModal.tsx":"36","/Users/jinkim/jin_bye/client/src/Lobby/GameList.tsx":"37","/Users/jinkim/jin_bye/client/src/SideBar/SideBar.tsx":"38","/Users/jinkim/jin_bye/client/src/Images/Images.tsx":"39","/Users/jinkim/jin_bye/client/src/Chat/UserListModal.tsx":"40","/Users/jinkim/jin_bye/client/src/Lobby/PwdCheckModal.tsx":"41","/Users/jinkim/jin_bye/client/src/SideBar/GetChatList.tsx":"42","/Users/jinkim/jin_bye/client/src/SideBar/UserInfoModal.tsx":"43","/Users/jinkim/jin_bye/client/src/Auth/Auth.tsx":"44"},{"size":567,"mtime":1626135082829,"results":"45","hashOfConfig":"46"},{"size":362,"mtime":1626135082829,"results":"47","hashOfConfig":"46"},{"size":851,"mtime":1626653257954,"results":"48","hashOfConfig":"46"},{"size":3458,"mtime":1626788928597,"results":"49","hashOfConfig":"46"},{"size":1823,"mtime":1626753884627,"results":"50","hashOfConfig":"46"},{"size":1247,"mtime":1626788553581,"results":"51","hashOfConfig":"46"},{"size":2347,"mtime":1626789490485,"results":"52","hashOfConfig":"46"},{"size":1926,"mtime":1626789302077,"results":"53","hashOfConfig":"46"},{"size":134,"mtime":1626135082826,"results":"54","hashOfConfig":"46"},{"size":2123,"mtime":1626769305709,"results":"55","hashOfConfig":"46"},{"size":1210,"mtime":1626769437801,"results":"56","hashOfConfig":"46"},{"size":1407,"mtime":1626750065674,"results":"57","hashOfConfig":"46"},{"size":933,"mtime":1626135082827,"results":"58","hashOfConfig":"46"},{"size":434,"mtime":1626135082829,"results":"59","hashOfConfig":"46"},{"size":1771,"mtime":1626771254816,"results":"60","hashOfConfig":"46"},{"size":927,"mtime":1626488847978,"results":"61","hashOfConfig":"46"},{"size":2642,"mtime":1626768735446,"results":"62","hashOfConfig":"46"},{"size":2706,"mtime":1626771589776,"results":"63","hashOfConfig":"46"},{"size":3589,"mtime":1626772540118,"results":"64","hashOfConfig":"46"},{"size":1248,"mtime":1626771315461,"results":"65","hashOfConfig":"46"},{"size":1578,"mtime":1626749864904,"results":"66","hashOfConfig":"46"},{"size":1850,"mtime":1626773034073,"results":"67","hashOfConfig":"46"},{"size":567,"mtime":1627278794684,"results":"68","hashOfConfig":"69"},{"size":362,"mtime":1627278794684,"results":"70","hashOfConfig":"69"},{"size":1764,"mtime":1627373945971,"results":"71","hashOfConfig":"69"},{"size":3516,"mtime":1627366139771,"results":"72","hashOfConfig":"69"},{"size":2642,"mtime":1627278794680,"results":"73","hashOfConfig":"69"},{"size":1823,"mtime":1627278794683,"results":"74","hashOfConfig":"69"},{"size":1680,"mtime":1627278794681,"results":"75","hashOfConfig":"69"},{"size":1343,"mtime":1627366608550,"results":"76","hashOfConfig":"69"},{"size":134,"mtime":1627278794681,"results":"77","hashOfConfig":"69"},{"size":2490,"mtime":1627365154169,"results":"78","hashOfConfig":"69"},{"size":1850,"mtime":1627278794681,"results":"79","hashOfConfig":"69"},{"size":2123,"mtime":1627278794683,"results":"80","hashOfConfig":"69"},{"size":1771,"mtime":1627278794683,"results":"81","hashOfConfig":"69"},{"size":1210,"mtime":1627278794683,"results":"82","hashOfConfig":"69"},{"size":927,"mtime":1627278794683,"results":"83","hashOfConfig":"69"},{"size":3147,"mtime":1627370456769,"results":"84","hashOfConfig":"69"},{"size":933,"mtime":1627278794681,"results":"85","hashOfConfig":"69"},{"size":1979,"mtime":1627366015724,"results":"86","hashOfConfig":"69"},{"size":1248,"mtime":1627278794683,"results":"87","hashOfConfig":"69"},{"size":1578,"mtime":1627278794684,"results":"88","hashOfConfig":"69"},{"size":3883,"mtime":1627368081380,"results":"89","hashOfConfig":"69"},{"size":1450,"mtime":1627288995570,"results":"90","hashOfConfig":"69"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},"1bdmnrm",{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"93"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"93"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"93"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"93"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"93"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"93"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},"c8b9qk",{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"161","messages":"162","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"155"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"155"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"155"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"155"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"155"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"155"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"155"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"155"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"155"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"155"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"155"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206"},"/Users/jinkim/bye_blackhole/client/src/index.tsx",[],["207","208"],"/Users/jinkim/bye_blackhole/client/src/reportWebVitals.js",[],["209","210"],"/Users/jinkim/bye_blackhole/client/src/App.tsx",["211"],"//import logo from './logo.svg';\nimport React, {useState} from \"react\";\nimport './App.scss';\nimport Chat from \"./Chat/Chat\";\nimport Admin from \"./Admin/Admin\";\nimport Lobby from \"./Lobby/Lobby\"\nimport Login from './Login/Login'\nimport \"./Chat/styles/global.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nfunction App() {\n\treturn (\n\t<div className=\"App\">\n\t\t<Router>\n\t\t  <Switch>\n\t\t\t{\n\t\t\t<Route exact path=\"/\" render={() => \n\t\t\t\t<Login />\n\t\t\t}/>\n\t\t\t}\n\t\t\t<Route path=\"/Admin\" exact render={() =>\n\t\t\t\t<Admin/>\n\t\t\t}/>\n\t\t\t<Route path=\"/Lobby\" exact render={() =>\n\t\t\t\t<Lobby/>\n\t\t\t}/>\n\t\t\t<Route path=\"/Chat\" exact render={() =>\n\t\t\t\t<Chat/>\n\t\t\t}/>\n\t\t\t<Route\n\t\t\t\trender={({location}) => (\n\t\t\t\t\t  <div>\n\t\t\t\t\t\tNot Found {location.pathname}\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t/>\n\t\t  </Switch>\n\t\t</Router>\n\t</div>\n\t);\n  }\n\n\nexport default App;","/Users/jinkim/bye_blackhole/client/src/Chat/Chat.tsx",["212","213","214"],"/Users/jinkim/bye_blackhole/client/src/Lobby/Lobby.tsx",["215","216","217","218","219"],"import axios from \"axios\";\nimport {useEffect, useState, useCallback} from \"react\";\nimport \"./styles/Lobby.scss\"\nimport plusbtn from \"../Images/plusbutton.png\"\nimport SideBar from '../SideBar/SideBar'\nimport GameListModal from './GameListModal'\nimport ChatListModal from './ChatListModal'\nimport ChatList from './ChatList'\nimport GameList from './GameList'\n\nconst Lobby = () => {\n\tconst [MyID, setMyID] = useState('')\n\n\tuseEffect(() => {\n\t\tconst id = sessionStorage.getItem('nickname')\n\t\tif (id) setMyID(id)\n\t})\n\n\t//game list modal\n\tconst [GameListModalState, setGameListModalState] = useState(false);\n\tconst openGameListModal = () => {\n\t\tsetGameListModalState(true);\n\t}\n\tconst closeGameListModal = () => {\n\t\tsetGameListModalState(false);\n\t}\n\n\t//chat list modal\n\tconst [ChatListModalState, setChatListModalState] = useState(false);\n\tconst openChatListModal = () => {\n\t\tsetChatListModalState(true);\n\t}\n\tconst closeChatListModal = () => {\n\t\tsetChatListModalState(false);\n\t}\n\n\treturn (\n\t<div id=\"App-Container\">\n\t\t<span className=\"App-Left\">\n\t\t\t<div className=\"list-box\">\n\t\t\t\t<div className=\"listName\">\n\t\t\t\t\tGame\n\t\t\t\t\t<button type=\"button\" className=\"plusbtn\" onClick={openGameListModal}>\n\t\t\t\t\t\t<img src={plusbtn} width=\"30\" height=\"30\"/>\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t\t<GameListModal open={GameListModalState} close={closeGameListModal} MyID={MyID}/>\n\t\t\t\t<hr/>\n\t\t\t\t<GameList/>\n\t\t\t</div>\n\n\t\t\t<div className=\"list-box\">\n\t\t\t\t<div className=\"listName\">\n\t\t\t\t\tChat<button type=\"button\" className=\"plusbtn\" onClick={openChatListModal}><img src={plusbtn} width=\"30\" height=\"30\"/></button>\n\t\t\t\t</div>\n\t\t\t\t<ChatListModal open={ChatListModalState} close={closeChatListModal} MyID={MyID}/>\n\t\t\t\t<hr/>\n\t\t\t\t<ChatList MyID={MyID}/>\n\t\t\t</div>\n\t\t</span>\n\t\t<span className=\"App-Right\">\n\t\t\t<SideBar />\n\t\t</span>\n\t</div>\n\t)\n}\n\nexport default Lobby;","/Users/jinkim/bye_blackhole/client/src/Chat/ChatInput.tsx",["220","221"],"import React, { useEffect, useRef, useState } from \"react\";\nimport \"./styles/ChatInput.css\";\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport {Button} from \"react-bootstrap\";\n\nconst ChatInput = ({socket}: any) => {\n\tconst [chatMessage, setChatMessage] = useState(\"\");\n\tconst [MyID, setMyID] = useState('')\n\tconst [roomName, setRoomName] = useState('')\n\n\tuseEffect(() => {\n\t\tconst id = sessionStorage.getItem('nickname')\n\t\tconst room = sessionStorage.getItem('roomName')\n\t\tif (id) setMyID(id)\n\t\tif (room) setRoomName(room)\n\t})\n\n\tconst handleSubmit = (e:any) => {\n\t\te.preventDefault();\n\t\tsocket.emit(\"onSend\", {\n\t\t\ttitle: roomName,\n\t\t\tnickname: MyID,\n\t\t\tmsg: chatMessage,\n\t\t\tdate: new Date().toLocaleTimeString(),\n\t\t});\n\t\tsetChatMessage(\"\");\n\t};\n\n  const onChatMessageChange = (e:any) => {\n    setChatMessage(e.target.value);\n  };\n\n  return (\n    <div>\n      <form className=\"ChatInput-form\" onSubmit={handleSubmit}>\n        <input type=\"text\" className=\"form-control\"\n          placeholder=\"Enter message\"\n          value={chatMessage}\n          onChange={onChatMessageChange}\n        ></input>\n        <Button type=\"button\" className=\"btn btn-sm\" onClick={handleSubmit}>send</Button>\n      </form>\n    </div>\n  );\n};\n\nexport default ChatInput;","/Users/jinkim/bye_blackhole/client/src/Chat/UserList.tsx",["222","223","224","225","226","227","228"],"/Users/jinkim/bye_blackhole/client/src/Chat/ChatLog.tsx",["229","230","231","232"],"/Users/jinkim/bye_blackhole/client/src/Chat/Loading.tsx",[],"/Users/jinkim/bye_blackhole/client/src/Lobby/ChatListModal.tsx",["233","234"],"import React, {useState, useCallback} from 'react';\nimport axios from \"axios\";\nimport \"./styles/Modal.scss\";\n\nconst ChatListModal = ( props: any ) => {\n\tconst { open, close, MyID} = props;\n\n\tconst [NewRoomName, setNewRoomName] = useState(\"\");\n\tconst [RoomPWD, setRoomPWD] = useState(\"\");\n\tconst [IsProtectedRoom, setIsProtectedRoom] = useState(false);\n\tconst [IsUniqueName, setIsUniqueName] = useState(true)\n\n\n\tconst handleRoomNameChange = useCallback((e:any) => {\n\t\tsetNewRoomName(e.target.value);\n\t}, []);\n\tconst handelRoomPWD = useCallback((e:any) => {\n\t\tsetRoomPWD(e.target.value)\n\t}, []);\n\n\tconst ProtectedRoomCheckHandler = useCallback( (e:any) => {\n\t\tsetRoomPWD('')\n\t\tsetIsProtectedRoom(!IsProtectedRoom);\n\t},[IsProtectedRoom]);\n\n\n\tfunction makeNewChat(){\n\t\tif (RoomPWD === '')\n\t\t\tvar security = 'public'\n\t\telse\n\t\t\tvar security = 'protected'\n\t\taxios.post('/Lobby/chatCreate', {title:NewRoomName, password:RoomPWD, owner_id:MyID, security:security})\n\t\t.then((res) => {\n\t\t\tdocument.location.href = '/chat'\n\t\t\tsessionStorage.setItem('roomName', NewRoomName)\n\t\t})\n\t\t.catch((err) => {\n\t\t\tsetIsUniqueName(false)\n\t\t})\n\t}\n\n\treturn (\n\t\t<div className={ open ? 'openModal Modal' : 'Modal' }>\n\t\t\t{ open ? (\n\t\t\t\t<section>\n\t\t\t\t\t<header>\n\t\t\t\t\t\tNew Chatting Room\n\t\t\t\t\t\t<button className=\"close\" onClick={close}> &times; </button>\n\t\t\t\t\t</header>\n\t\t\t\t\t<main>\n\t\t\t\t\t\t<label >\n\t\t\t\t\t\t\t<b>Room Name:&nbsp;</b>\n\t\t\t\t\t\t\t<input onChange={handleRoomNameChange} maxLength={20}></input>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t&nbsp;&nbsp;<input type=\"checkbox\" checked={IsProtectedRoom} onChange={(e) => ProtectedRoomCheckHandler(e)}></input> protected\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t{IsUniqueName ? null : <label className=\"error\">이미 존재하는 방입니다.</label>}\n\t\t\t\t\t\t{IsProtectedRoom ?\n\t\t\t\t\t\t\t<div className=\"checkbox-pwd\">\n\t\t\t\t\t\t\t<b>password:&nbsp;</b>\n\t\t\t\t\t\t\t<input type=\"password\" onChange={handelRoomPWD}></input>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t: null\n\t\t\t\t\t\t}\n\t\t\t\t\t</main>\n\t\t\t\t\t<footer>\n\t\t\t\t\t\t<a className=\"btn btn-primary\" onClick={makeNewChat}><b>Enter</b></a>\n\t\t\t\t\t</footer>\n\t\t\t\t</section>\n\t\t\t) : null }\n\t\t</div>\n\t)\n}\n\nexport default ChatListModal","/Users/jinkim/bye_blackhole/client/src/Lobby/GameListModal.tsx",["235"],"import React , {useState, useCallback}from 'react';\nimport axios from \"axios\";\nimport \"./styles/Modal.scss\";\n\nconst GameListModal = ( props: any ) => {\n\tconst { open, close, MyID} = props;\n\n\tconst [IsSpeed, setIsSpeed] = useState(false)\n\n\tconst modeHandler = useCallback((e:any) => {\n\t\tif (e.target.value === 'speed')\n\t\t\tsetIsSpeed(true)\n\t\telse\n\t\t\tsetIsSpeed(false)\n\t}, [])\n\n\tfunction makeNewGame(){\n\t\taxios.post('/Lobby/GameCreate', {id:MyID, speed:IsSpeed, ladder:false})\n\t\t.then((res) => {\n\t\t\tdocument.location.href = '/Game'\n\t\t})\n\t\t.catch((err) => {\n\t\t\t//매칭실패!!\n\t\t})\n\t}\n\n\treturn (\n\t\t<div className={ open ? 'openModal Modal' : 'Modal' }>\n\t\t\t{ open ? (\n\t\t\t\t<section>\n\t\t\t\t\t<header>\n\t\t\t\t\t\tNew Game\n\t\t\t\t\t\t<button className=\"close\" onClick={close}> &times; </button>\n\t\t\t\t\t</header>\n\t\t\t\t\t<main>\n\t\t\t\t\t\t<span><input type=\"radio\" name=\"speed\" value=\"normal\" onClick={modeHandler} /> normal &nbsp;&nbsp;</span>\n\t\t\t\t\t\t<span><input type=\"radio\" name=\"speed\" value=\"speed\" onClick={modeHandler} /> speed </span>\n\t\t\t\t\t</main>\n\t\t\t\t\t<footer>\n\t\t\t\t\t\t<a className=\"btn btn-primary\" onClick={makeNewGame}><b>Matching Start</b></a>\n\t\t\t\t\t</footer>\n\t\t\t\t</section>\n\t\t\t) : null }\n\t\t</div>\n\t)\n}\n\nexport default GameListModal","/Users/jinkim/bye_blackhole/client/src/Chat/UserListModal.tsx",["236","237"],"import axios from 'axios';\nimport React from 'react';\nimport \"../SideBar/styles/UserInfoModal.scss\";\n\nconst UserListModal = ( props: any ) => {\n\tconst { open, close, targetID, roomName, getRoomInfoMutate} = props;\n\n\tasync function kickUser(){\n\t\tawait axios.get('chat/kick?title=' + roomName + '&id=' + targetID)\n\t\tclose()\n\t\tgetRoomInfoMutate()\n\t}\n\n\tasync function BanUser(){\n\t\tawait axios.get('chat/ban?title=' + roomName + '&id=' + targetID)\n\t\tclose()\n\t\tgetRoomInfoMutate()\n\t}\n\n\treturn (\n\t\t<div className={ open ? 'openModal Modal' : 'Modal' }>\n\t\t\t{ open ? (\n\t\t\t\t<section>\n\t\t\t\t\t<div className=\"head\">\n\t\t\t\t\t\t<button className=\"close\" onClick={close}> &times; </button>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"content targetID\">\n\t\t\t\t\t\t{targetID}\n\t\t\t\t\t</div>\n\t\t\t\t\t<hr/>\n\t\t\t\t\t<div className='bottom'>\n\t\t\t\t\t\t<span className=\"onoffbtn\">\n\t\t\t\t\t\t\t<input type=\"checkbox\" id=\"switch1\" name=\"switch1\" className=\"input__on-off\"/>\n\t\t\t\t\t\t\t<label htmlFor=\"switch1\" className=\"label__on-off\">\n\t\t\t\t\t\t\t\t<span className=\"marble\"></span>\n\t\t\t\t\t\t\t\t<span className=\"on\">Mute</span>\n\t\t\t\t\t\t\t\t<span className=\"off\">Unmute</span>\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<span><a className=\"btn button\" onClick={kickUser}><b>Kick</b></a></span>\n\t\t\t\t\t\t\t<span><a className=\"btn button kick-button\" onClick={BanUser}><b>Ban</b></a></span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</section>\n\t\t\t) : null }\n\t\t</div>\n\t)\n}\n\nexport default UserListModal","/Users/jinkim/bye_blackhole/client/src/Images/Images.tsx",["238","239","240","241","242","243"],"import gamer_boy from './gamer_boy.png'\nimport gamer_girl from './gamer_girl.png'\nimport gamer_keyboard from './gamer_keyboard.png'\nimport gamer_woman from './gamer_woman.png'\nimport man_icon from './man_icon.png'\nimport woman_icon from './woman_icon.png'\n\nexport const findImg = (icon_name:string) => {\n\tif ('gamer_boy' == icon_name)\n\t\treturn (gamer_boy)\n\telse if('gamer_girl' == icon_name)\n\t\treturn (gamer_girl)\n\telse if('gamer_keyboard' == icon_name)\n\t\treturn (gamer_keyboard)\n\telse if('gamer_woman' == icon_name)\n\t\treturn (gamer_woman)\n\telse if('man_icon' == icon_name)\n\t\treturn (man_icon)\n\telse if('woman_icon' == icon_name)\n\t\treturn (woman_icon)\n}\n\nexport const allImages = [\n\t{value: 'gamer_keyboard', src: gamer_keyboard},\n\t{value: 'gamer_woman', src: gamer_woman},\n\t{value: 'gamer_boy', src: gamer_boy},\n\t{value: 'gamer_girl', src: gamer_girl},\n\t{value: 'man_icon', src: man_icon},\n\t{value: 'woman_icon', src: woman_icon},\n]","/Users/jinkim/bye_blackhole/client/src/Login/Login.tsx",["244"],"import React, { useEffect, useState } from \"react\";\n\nconst Login = () => {\n\tconst [IntraID, setIntraID] = useState('')\n\n\tconst handleIntraIDChange = (e:any) => {\n\t\tsetIntraID(e.target.value);\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<input onChange={handleIntraIDChange}></input>\n\t\t\t<button onClick= {() => {\n\t\t\t\tdocument.location.href = \"/Admin\"\n\t\t\t\tsessionStorage.setItem('intraID', IntraID)\n\t\t\t}}>Login</button>\n\t\t</div>\n\t)\n}\nexport default Login","/Users/jinkim/bye_blackhole/client/src/Lobby/ChatList.tsx",["245","246","247","248","249","250"],"import {useEffect, useState, useCallback} from \"react\";\nimport axios from \"axios\";\nimport useSwr from 'swr';\nimport lock from '../Images/lock.png'\nimport unlock from '../Images/unlock.png'\nimport \"./styles/ChatList.scss\"\nimport PwdCheckModal from \"./PwdCheckModal\";\n\nconst ChatList = (props: any) => {\n\tconst {MyID} = props\n\n\tconst fetcher = async (url:string) => {\n\t\tconst res = await axios.get(url)\n\t\treturn res.data;\n\t}\n\n\tconst {data, error} = useSwr<{title:string, num:number, security:string}[]>('Lobby/chatList', fetcher)\n\n\tconst [ClickedRoomTitle, setClickedRoomTitle] = useState('')\n\tconst [PwdCheckModalState, setPwdCheckModalState] = useState(false);\n\n\tconst openPwdCheckModal = (title:string) => {\n\t\tsetPwdCheckModalState(true);\n\t\tsetClickedRoomTitle(title)\n\t}\n\tconst closePwdCheckModal = () => {\n\t\tsetPwdCheckModalState(false);\n\t}\n\n\tasync function enterPublicRoom(title:string) {\n\t\tawait axios.post('/Lobby/enter', {title:title, id:MyID, password:''})\n\t\tdocument.location.href = '/chat'\n\t\tsessionStorage.setItem('roomName', title)\n\t}\n\n\treturn (\n\t<>\n\t{data?.map(chatRoom=>\n\t\t<button type=\"button\" className=\"chatList\" onClick={() => {\n\t\t\tif (chatRoom.security === 'protected')\n\t\t\t\topenPwdCheckModal(chatRoom.title)\n\t\t\telse\n\t\t\t\tenterPublicRoom(chatRoom.title)\n\t\t}}>\n\t\t\t<span className=\"chatList-left\">\n\t\t\t\t<div className=\"chatList-num\">{chatRoom.num}</div>\n\t\t\t</span>\n\t\t\t<span className=\"lock\">\n\t\t\t\t{chatRoom.security != \"protected\" ? <img src={unlock} width=\"20\" height=\"20\"/> : <img src={lock} width=\"20\" height=\"20\"/>}\n\t\t\t</span>\n\t\t\t<span className=\"roomName\">\n\t\t\t\t{chatRoom.title}\n\t\t\t</span>\n\n\t\t</button>\n\t)}\n\t<PwdCheckModal open={PwdCheckModalState} close={closePwdCheckModal} chatRoomID={ClickedRoomTitle} MyID={MyID} />\n\t</>\n\t)\n}\n\nexport default ChatList","/Users/jinkim/bye_blackhole/client/src/Lobby/GameList.tsx",["251","252","253","254","255"],"import {useEffect, useState, useCallback} from \"react\";\nimport axios from \"axios\";\nimport useSwr from 'swr';\nimport speed from '../Images/speed.png'\nimport \"./styles/GameList.scss\"\n\nconst GameList = () => {\n\tconst fetcher = async (url:string) => {\n\t\tconst res = await axios.get(url)\n\t\treturn res.data;\n\t}\n\n\tconst {data, error} = useSwr<{p1:string, p2:string, speed:boolean, ladder:boolean}[]>('Lobby/gameList', fetcher)\n\n\treturn (\n\t<>\n\t{data?.map(gameRoom=>\n\t\t<button type=\"button\" className=\"GameList\">\n\t\t\t<span className=\"GameList-left\">\n\t\t\t\t<div className={gameRoom.ladder ? \"GameList-icon ladder\" : \"GameList-icon\"}>\n\t\t\t\t\t{gameRoom.speed ? <img src={speed} width=\"30\" height=\"30\"/> : 'N'}\n\t\t\t\t</div>\n\t\t\t</span>\n\t\t\t<span className=\"GameList-right\">\n\t\t\t\t<div className=\"player\">{gameRoom.p1}</div>\n\t\t\t\t<div>vs</div>\n\t\t\t\t<div className=\"player\">{gameRoom.p2}</div>\n\t\t\t</span>\n\t\t</button>\n\t)}\n\t</>\n\t)\n}\n\nexport default GameList","/Users/jinkim/bye_blackhole/client/src/Admin/Admin.tsx",["256","257","258","259"],"import React, {useEffect, useState}from \"react\";\nimport \"./styles/Admin.scss\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {allImages, findImg} from '../Images/Images';\nimport axios from \"axios\";\n\nconst Admin = () => {\n\tconst [IntraID, setIntraID] = useState('')\n\tconst [Nickname, setNickname] = useState('')\n\tconst [Icon, setIcon] = useState('')\n\tconst [OldNickname, setOldNickname] = useState('')\n\tconst [OldIcon, setOldIcon] = useState('')\n\tconst [SignUp, setSignUp] = useState(true)\n\tconst [IsUnique, setIsUnique] = useState(true)\n\n\tuseEffect(() => {\n\t\tconst intra_id = sessionStorage.getItem(\"intraID\")\n\t\tif (intra_id) setIntraID(intra_id);\n\n\t\tconst old_nickname = sessionStorage.getItem(\"nickname\");\n\t\tif (old_nickname) {\n\t\t\tsetOldNickname(old_nickname);\n\t\t\tsetSignUp(false);\n\t\t}\n\n\t\tconst old_icon = sessionStorage.getItem(\"icon\")\n\t\tif (old_icon) setOldIcon(old_icon)\n\t})\n\n\tconst handleNicknameChange = (e:any) => {\n\t\tsetNickname(e.target.value);\n\t};\n\tconst handleIconChange = (e:any) => {\n\t\tsetIcon(e.target.value);\n\t};\n\n\tasync function saveAdmin(isSignUp: boolean){\n\t\tconst body = {\n\t\t\tintra_id: IntraID,\n\t\t\ticon: Icon ? Icon : OldIcon,\n\t\t\tnickname: Nickname ? Nickname : OldNickname,\n\t\t}\n\t\tif (!SignUp)\n\t\t{\n\t\t\taxios.patch('/admin', body)\n\t\t\t.then((Response) => {\n\t\t\t\tif (Nickname) sessionStorage.setItem(\"nickname\", Nickname);\n\t\t\t\tif (Icon) sessionStorage.setItem(\"icon\", Icon);\n\t\t\t\tdocument.location.href=\"/lobby\"\n\t\t\t})\n\t\t\t.catch((Error) => {\n\t\t\t\tsetIsUnique(false)\n\t\t\t})\n\t\t}\n\t\telse\n\t\t{\n\t\t\taxios.post('/admin', body)\n\t\t\t.then((Response) => {\n\t\t\t\tif (Nickname) sessionStorage.setItem(\"nickname\", Nickname);\n\t\t\t\tif (Icon) sessionStorage.setItem(\"icon\", Icon);\n\t\t\t\tdocument.location.href=\"/lobby\"\n\t\t\t})\n\t\t\t.catch((Error) => {\n\t\t\t\tsetIsUnique(false)\n\t\t\t})\n\t\t}\n\t}\n\n\treturn (\n\t<div className=\"Admin-container\">\n\t\t{SignUp ? null : \n\t\t\t<div>\n\t\t\t\t<img src={findImg(OldIcon)} width=\"30\" height=\"30\"/>\n\t\t\t\t&nbsp;{OldNickname}\n\t\t\t\t<hr/>\n\t\t\t</div>\n\t\t}\n\t\t<input onChange={handleNicknameChange} placeholder=\"Nickname\" maxLength={10}/>\n\t\t{ IsUnique ? null:<div className=\"nickname-error\">이미 사용중인 닉네임입니다.</div>}\n\n\t\t<div className=\"icon-box\">\n\t\t{allImages.map(({value, src}) =>\n\t\t\t<span className=\"icon\">\n\t\t\t\t<input type=\"radio\" name=\"icon\" value={value} onChange={handleIconChange} className=\"icon-input\"/>\n\t\t\t\t<img src={src} width=\"50\" height=\"50\" className=\"icon-img\"></img>\n\t\t\t</span>\n\t\t)}\n\t\t</div>\n\n\t\t<div className=\"Join-button\">\n\t\t\t{\n\t\t\t\tSignUp && (!Nickname || !Icon) ? null :\n\t\t\t\t<a className=\"btn btn-dark\" onClick={() => saveAdmin(SignUp)}><b>OK</b></a>\n\t\t\t}\n\t\t</div>\n\t</div>\n\t);\n};\n\nexport default Admin;","/Users/jinkim/bye_blackhole/client/src/SideBar/SideBar.tsx",["260","261","262","263","264"],"import axios from \"axios\";\nimport useSwr from 'swr';\nimport {useEffect, useState} from \"react\";\nimport \"./styles/SideBar.scss\"\nimport {findImg} from '../Images/Images'\nimport UserInfoModal from \"./UserInfoModal\";\nimport GetChatList from './GetChatList'\n\nconst SideBar = () => {\n\tconst [MyID, setMyID] = useState('')\n\tconst [MyIcon, setMyIcon] = useState('')\n\t\n\tuseEffect(() => {\n\t\tconst id = sessionStorage.getItem('nickname')\n\t\tconst icon = sessionStorage.getItem('icon')\n\t\tif (id) setMyID(id)\n\t\tif (icon) setMyIcon(icon)\n\t})\n\t\n\tconst fetcher = async (url:string) => {\n\t\tif (MyID)\n\t\t{\n\t\t\tconst res = await axios.get(url)\n\t\t\treturn res.data;\n\t\t}\n\t}\n\n\tconst {data, error, mutate} = useSwr<{id:string, icon:string, state:string, isFriend:boolean}[]>('/Lobby/userList?id=' + MyID, fetcher)\n\n\n\t//UserInfoModal\n\tconst [TargetID, setTargetID] = useState('');\n\tconst [UserInfoModalState, setUserInfoModalState] = useState(false);\n\tconst openUserInfoModal = async(id:string) => {\n\t\tsetUserInfoModalState(true);\n\t\tsetTargetID(id);\n\t}\n\tconst closeUserInfoModal = () => {\n\t\tsetUserInfoModalState(false);\n\t\tmutate()\n\t}\n\n\treturn(\n\t<aside>\n\t\t<div className=\"top\">\n\t\t\t<span className=\"MyID\">{MyID}</span>\n\t\t\t<button type=\"button\" className=\"myIcon\" onClick={() => openUserInfoModal(MyID)}>\n\t\t\t\t<img src={findImg(MyIcon)} width=\"30\" height=\"30\"></img>\n\t\t\t</button>\n\t\t</div>\n\t\t<div className=\"bottom\">\n\t\t\t<div className=\"title\"># friends</div>\n\t\t\t{data?.map(user=> user.isFriend ?\n\t\t\t\t<div>\n\t\t\t\t<button type=\"button\" className=\"user-btn\" onClick={() => openUserInfoModal(user.id)}>\n\t\t\t\t\t<img src={findImg(user.icon)}  width=\"20\" height=\"20\" className=\"user-icon\"/>\n\t\t\t\t\t{user.state === \"on\" ? <span className=\"userState online\">·</span> : null}\n\t\t\t\t\t{user.state === \"off\" ? <span className=\"userState offline\">·</span> : null}\n\t\t\t\t\t{user.state === \"gaming\" ? <span className=\"userState gaming\">·</span> : null}\n\t\t\t\t\t{user.id}\n\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t\t: null\n\t\t\t)}\n\t\t\t<div className=\"title\"># others</div>\n\t\t\t{data?.map(user => user.isFriend ? null :\n\t\t\t\t<div>\n\t\t\t\t<button type=\"button\" className=\"user-btn\" onClick={() => openUserInfoModal(user.id)}>\n\t\t\t\t\t<img src={findImg(user.icon)}  width=\"20\" height=\"20\" className=\"user-icon\"/>\n\t\t\t\t\t{user.state === \"on\" ? <span className=\"userState online\">·</span> : null}\n\t\t\t\t\t{user.state === \"off\" ? <span className=\"userState offline\">·</span> : null}\n\t\t\t\t\t{user.state === \"gaming\" ? <span className=\"userState gaming\">·</span> : null}\n\t\t\t\t\t{user.id}\n\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t\t\n\t\t\t<GetChatList myID={MyID}/>\n\n\t\t\t<UserInfoModal open={UserInfoModalState} close={closeUserInfoModal} myID={MyID} targetID={TargetID}/>\n\t\t</div>\n\t</aside>\n\t)\n}\nexport default SideBar;","/Users/jinkim/bye_blackhole/client/src/SideBar/UserInfoModal.tsx",["265","266","267","268","269","270","271"],"import React, { useEffect, useState, useCallback } from 'react';\nimport axios from \"axios\";\nimport useSwr from 'swr';\nimport \"./styles/UserInfoModal.scss\";\n\nconst UserInfoModal = ( props: any) => {\n\tconst { open, close, myID, targetID} = props;\n\tconst [IsFriend, setIsFriend] = useState<boolean>()\n\tconst [IsBlock, setIsBlock] = useState<boolean>()\n\t\n\tconst fetcher = async (url:string) => {\n\t\tif (myID && targetID)\n\t\t{\n\t\t\tconst res = await axios.get(url)\n\t\t\tsetIsFriend(res.data.friend)\n\t\t\tsetIsBlock(res.data.block)\n\t\t\treturn res.data;\n\t\t}\n\t}\n\n\tconst {data, error} = useSwr<{history:{win:boolean, id:string}[] ,friend:boolean, block:boolean, win:number, lose:number} | {history:{win:boolean, id:string}[], win:number, lose:number}>('profile?myID=' + myID + '&otherID=' + targetID, fetcher)\n\n\tconst FriendHandler = useCallback( async() => {\n\t\tawait axios.put('profile/friend', {myID:myID, otherID:targetID, isFriend:!IsFriend})\n\t\tsetIsFriend(!IsFriend);\n\t},[IsFriend]);\n\t\n\tconst BlockHandler = useCallback( async() => {\n\t\tawait axios.put('profile/block', {myID:myID, otherID:targetID, isBlock:!IsBlock})\n\t\tsetIsBlock(!IsBlock);\n\t},[IsBlock]);\n\n\n\tasync function makeDM(){\n\t\tif (myID.localeCompare(targetID) < 0)\n\t\t\tvar chatRoomName = 'DM_' + myID + '_' + targetID\n\t\telse\n\t\t\tvar chatRoomName = 'DM_' + targetID + '_' + myID\n\t\tawait axios.post('/Lobby/chatCreate', {title: chatRoomName, password:'', owner_id:myID, security:'private'})\n\t\tdocument.location.href = '/chat'\n\t\tsessionStorage.setItem('roomName', chatRoomName)\n\t}\n\n\treturn (\n\t\t<div className={ open ? 'openModal Modal' : 'Modal' }>\n\t\t\t{ open ? (\n\t\t\t\t<section>\n\t\t\t\t\t<div className=\"head\">\n\t\t\t\t\t\t<button className=\"close\" onClick={close}> &times; </button>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"content\">\n\t\t\t\t\t\t<div className=\"header\">\n\t\t\t\t\t\t\t<div className=\"name\">{targetID}</div>\n\t\t\t\t\t\t\t<span className=\"num win-color\">W {data?.win}</span>\n\t\t\t\t\t\t\t<span className=\"num lose-color\"> &nbsp;&nbsp; L {data?.lose}</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<hr/>\n\t\t\t\t\t\t<div className=\"main\">\n\t\t\t\t\t\t\t{data?.history?.map(match=>\n\t\t\t\t\t\t\t<div className={match.win ? 'matchHistory win-backColor' : 'matchHistory lose-backColor'}>\n\t\t\t\t\t\t\t\t<span className='match-left'>{match.id}</span>\n\t\t\t\t\t\t\t\t<span className={match.win ? 'match-right win-color' : 'match-right lose-color'}>{match.win ? 'Win' : 'Lose'}</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"bottom\">\n\t\t\t\t\t{myID === targetID ? \n\t\t\t\t\t\t<a className=\"btn button\" onClick={()=> document.location.href = '/Admin/'}><b>Admin</b></a>\n\t\t\t\t\t\t:\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t<span className=\"onoffbtn\">\n\t\t\t\t\t\t\t<input type=\"checkbox\" id=\"switch1\" name=\"switch1\" className=\"input__on-off\" checked={IsFriend} onChange={FriendHandler}/>\n\t\t\t\t\t\t\t<label htmlFor=\"switch1\" className=\"label__on-off\">\n\t\t\t\t\t\t\t\t<span className=\"marble\"></span>\n\t\t\t\t\t\t\t\t<span className=\"on\">Friend</span>\n\t\t\t\t\t\t\t\t<span className=\"off\">Unfriend</span>\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<span className=\"onoffbtn\">\n\t\t\t\t\t\t\t<input type=\"checkbox\" id=\"switch2\" name=\"switch2\" className=\"input__on-off\" checked={!IsBlock} onChange={BlockHandler}/>\n\t\t\t\t\t\t\t<label htmlFor=\"switch2\" className=\"label__on-off\">\n\t\t\t\t\t\t\t\t<span className=\"marble\"></span>\n\t\t\t\t\t\t\t\t<span className=\"on\">Unblock</span>\n\t\t\t\t\t\t\t\t<span className=\"off\">Block</span>\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<a className=\"btn button\" href=\"Game\"><b>Game</b></a>\n\t\t\t\t\t\t\t<a className=\"btn button dm-button\" onClick={makeDM}><b>DM</b></a>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t}\n\t\t\t\t\t</div>\n\t\t\t\t</section>\n\t\t\t) : null }\n\t\t</div>\n\t)\n}\n\nexport default UserInfoModal","/Users/jinkim/bye_blackhole/client/src/Lobby/PwdCheckModal.tsx",["272","273"],"import React, {useState, useCallback, useEffect} from 'react';\nimport axios from \"axios\";\nimport \"./styles/Modal.scss\";\n\nconst PwdCheckModal = ( props: any ) => {\n\tconst { open, close, chatRoomID, MyID} = props;\n\n\tconst [PWD, setPWD] = useState(\"\");\n\tconst [WorngPWD, setWrongPWD] = useState(false)\n\n\tconst handelPWD = useCallback((e:any) => {\n\t\tsetPWD(e.target.value)\n\t}, []);\n\n\tasync function confirmPWD(){\n\t\taxios.post('/Lobby/enter', {title:chatRoomID, id:MyID, password:PWD})\n\t\t.then((res) => {\n\t\t\tdocument.location.href = '/Chat';\n\t\t\tsessionStorage.setItem('roomName', chatRoomID)\n\t\t})\n\t\t.catch((err) => {\n\t\t\tsetWrongPWD(true)\n\t\t})\n\t}\n\n\treturn (\n\t\t<div className={ open ? 'openModal Modal' : 'Modal' }>\n\t\t\t{ open ? (\n\t\t\t\t<section>\n\t\t\t\t\t<header>\n\t\t\t\t\t\tEnter Password\n\t\t\t\t\t\t<button className=\"close\" onClick={() => {\n\t\t\t\t\t\t\tclose()\n\t\t\t\t\t\t\tsetWrongPWD(false)\n\t\t\t\t\t\t}}> &times; </button>\n\t\t\t\t\t</header>\n\t\t\t\t\t<main>\n\t\t\t\t\t\tpassword: <input onChange={handelPWD}></input>\n\t\t\t\t\t\t{WorngPWD ? <label className=\"error\">틀린 비밀번호입니다.</label> : null}\n\t\t\t\t\t</main>\n\t\t\t\t\t<footer>\n\t\t\t\t\t\t<a className=\"btn btn-primary\" onClick={confirmPWD}><b>Enter</b></a>\n\t\t\t\t\t</footer>\n\t\t\t\t</section>\n\t\t\t) : null }\n\t\t</div>\n\t)\n}\n\nexport default PwdCheckModal","/Users/jinkim/bye_blackhole/client/src/SideBar/GetChatList.tsx",["274"],"import axios from \"axios\";\nimport useSwr from 'swr';\nimport \"./styles/GetChatList.scss\"\n\nconst GetChatList = (props: any) => {\n\tconst {myID} = props\n\n\tconst fetcher = async (url:string) => {\n\t\tif (myID)\n\t\t{\n\t\t\tconst res = await axios.get(url)\n\n\t\t\t//kick or ban\n\t\t\tif (window.location.pathname === '/chat')\n\t\t\t{\n\t\t\t\tconst currentRoom = sessionStorage.getItem('roomName')\n\t\t\t\tvar leave = true\n\t\t\t\t\n\t\t\t\tfor(let i = 0; i < res.data.length; i++)\n\t\t\t\t{\n\t\t\t\t\tif (res.data[i].title === currentRoom)\n\t\t\t\t\t\tleave = false\n\t\t\t\t}\n\n\t\t\t\tif (leave)\n\t\t\t\t{\n\t\t\t\t\twindow.location.href = '/lobby'\n\t\t\t\t\tsessionStorage.removeItem('roomName')\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn res.data;\n\t\t}\n\t}\n\n\tconst {data, error, mutate} = useSwr<{title:string, num: number}[]>('/Lobby/myChatList?id=' + myID, fetcher)\n\n\tconst DelChat = async(title:string) => {\n\t\tawait axios.delete('Lobby?title=' + title + '&id=' + myID)\n\t\tif (window.location.pathname === '/chat' && sessionStorage.getItem('roomName') === title)\n\t\t{\n\t\t\twindow.location.href = '/lobby'\n\t\t\tsessionStorage.removeItem('roomName')\n\t\t}\n\t\tmutate()\n\t}\n\n\treturn (\n\t<>\n\t\t<div className=\"title\"># my chats</div>\n\t\t{data?.map(chat=>\n\t\t\t<div className=\"chat\">\n\t\t\t\t<button type=\"button\" className=\"chat-btn\" onClick={() => {\n\t\t\t\t\t\tdocument.location.href = '/Chat';\n\t\t\t\t\t\tsessionStorage.setItem('roomName', chat.title);\n\t\t\t\t}}>\n\t\t\t\t\t<span className=\"chatNum\">{chat.num}</span>\n\t\t\t\t\t<span>&nbsp;{chat.title}</span>\n\t\t\t\t</button>\n\t\t\t\t<button type=\"button\" className=\"chatLeave\" onClick={() => DelChat(chat.title)}>X</button>\n\t\t\t</div>\n\t\t)}\n\t</>\n\t)\n}\n\nexport default GetChatList","/Users/jinkim/bye_blackhole/client/src/Chat/ChatSettingModal.tsx",["275","276","277"],"import axios from 'axios';\nimport useSwr from 'swr';\nimport React, {useState, useCallback} from 'react';\nimport \"./styles/ChatSettingModal.scss\";\n\nconst ChatSettingModal = ( props: any ) => {\n\tconst { open, close, chatRoomID, MyPermission} = props;\n\n\tasync function changePWD(){\n\t\tawait axios.post('chat/setting' , {title:chatRoomID, password:RoomPWD})\n\t\tclose();\n\t}\n\n\tconst fetcher = async (url:string) => {\n\t\tif (chatRoomID)\n\t\t{\n\t\t\tconst res = await axios.get(url)\n\t\t\treturn res.data;\n\t\t}\n\t}\n\tconst {data, error, mutate} = useSwr<{id:string}[]>('Chat/banList?title=' + chatRoomID, fetcher)\n\n\tasync function Unban(user: {id:string}){\n\t\tawait axios.get('chat/unban?title=' + chatRoomID + '&id=' + user)\n\t\tmutate()\n\t}\n\n\tconst [RoomPWD, setRoomPWD] = useState('');\n\tconst handelRoomPWD = useCallback((e:any) => {\n\t\tsetRoomPWD(e.target.value)\n\t}, []);\n\n\treturn (\n\t\t<div className={ open ? 'openModal Modal' : 'Modal' }>\n\t\t\t{ open ? (\n\t\t\t\t<section>\n\t\t\t\t\t<header>\n\t\t\t\t\t\tSetting\n\t\t\t\t\t\t<button className=\"close\" onClick={close}> &times; </button>\n\t\t\t\t\t</header>\n\t\t\t\t\t<main>\n\t\t\t\t\t\t<div className=\"ban-name\"><b>Banned users</b></div>\n\t\t\t\t\t\t<div className=\"ban-box\">\n\t\t\t\t\t\t\t{data?.map(user => \n\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<div className=\"ban-inlineBox\">\n\t\t\t\t\t\t\t\t\t<span className=\"ban-user\">{user}</span>\n\t\t\t\t\t\t\t\t\t<span className=\"unban\" onClick={() => Unban(user)}><a className=\"btn unban-btn\">x</a></span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<hr/>\n\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{MyPermission === 'owner' ? \n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t\t\tnew password:&nbsp;\n\t\t\t\t\t\t\t<input onChange={handelRoomPWD} value={RoomPWD}></input>\n\t\t\t\t\t\t\t&nbsp;\n\t\t\t\t\t\t\t<a className=\"btn btn-primary btn-sm\" onClick={changePWD}><b>Change</b></a>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t: null\n\t\t\t\t\t\t}\n\t\t\t\t\t</main>\n\t\t\t\t\t<footer>\n\t\t\t\t\t</footer>\n\t\t\t\t</section>\n\t\t\t) : null }\n\t\t</div>\n\t)\n}\n\nexport default ChatSettingModal","/Users/jinkim/jin_bye/client/src/index.tsx",[],["278","279"],"/Users/jinkim/jin_bye/client/src/reportWebVitals.js",[],["280","281"],"/Users/jinkim/jin_bye/client/src/App.tsx",["282","283","284"],"/Users/jinkim/jin_bye/client/src/Chat/Chat.tsx",["285","286","287"],"import React, { useEffect, useState } from \"react\";\nimport ChatInput from \"./ChatInput\";\nimport ChatLog from \"./ChatLog\";\nimport Loading from \"./Loading\";\nimport UserList from \"./UserList\";\nimport SideBar from \"../SideBar/SideBar\";\nimport \"./styles/Chat.scss\"\nimport setting from '../Images/setting.png'\nimport ChatSettingModal from \"./ChatSettingModal\";\nimport axios from \"axios\";\nimport useSwr from 'swr';\nconst socketIOClient = require('socket.io-client')\n\nconst Chat = () => {\n\t\n\tinterface Iuser{\n\t\tid:string,\n\t\tpermission:string,\n\t\ticon:string\n\t}\n\tconst currentSocket = socketIOClient('http://localhost:8080')\n\tconst [MyID, setMyID] = useState('')\n\tconst [roomName, setRoomName] = useState('')\n\tconst [MyPermission, setMyPermission] = useState('')\n\n\tconst fetcher = async (url:string) => {\n\t\tif (roomName)\n\t\t{\n\t\t\tconst res = await axios.get(url)\n\t\t\tres.data.users = userSorting(res.data.users)\n\t\t\treturn res.data;\n\t\t}\n\t}\n\tconst {data, error, mutate} = useSwr<{num:string, security: string, users:Iuser[]}>('/Chat/info?title=' + roomName, fetcher)\n\n\tfunction userSorting(userList:Iuser[])\n\t{\n\t\tvar rtn: Iuser[] = []\n\t\tvar admin: Iuser[] = []\n\t\tvar user: Iuser[] = []\n\n\t\tfor(let i = 0; i < userList.length; i++)\n\t\t{\n\t\t\tif (userList[i].id === MyID)\n\t\t\t\tsetMyPermission(userList[i].permission)\n\t\t\t\n\t\t\tif (userList[i].permission === 'owner')\n\t\t\t\trtn.push(userList[i])\n\t\t\telse if (userList[i].permission === 'admin')\n\t\t\t\tadmin.push(userList[i])\n\t\t\telse\n\t\t\t\tuser.push(userList[i])\n\t\t}\n\t\t\n\t\tadmin.forEach(ele => rtn.push(ele))\n\t\tuser.forEach(ele => rtn.push(ele))\n\t\treturn rtn\n\t}\n\n\tuseEffect(() => {\n\t\t//setCurrentSocket(socketIOClient());\n\t\t\n\t\tconst id = sessionStorage.getItem('nickname')\n\t\tconst room = sessionStorage.getItem('roomName')\n\t\tif (id) setMyID(id)\n\t\tif (room) setRoomName(room)\n\t});\n\t\n\tconst myInfo = {\n\t\troomName: roomName,\n\t\tuserName: MyID,\n\t};\n\n\tif (currentSocket) {\n\t\tcurrentSocket.on(\"connect\", () => {\n\t\t\tcurrentSocket.emit(\"join\", myInfo);\n\t\t});\n\t}\n\n\t\n\n\t//chat owner modal\n\tconst [ChatSettingModalState, setChatSettingModalState] = useState(false);\n\tconst openChatSettingModal = () => {\n\t\tsetChatSettingModalState(true);\n\t}\n\tconst closeChatSettingModal = () => {\n\t\tsetChatSettingModalState(false);\n\t}\n\n\treturn (\n\t<div id=\"App-Container\">\n\t\t{currentSocket ? (\n\t\t<>\n\t\t<span className=\"App-Left\">\n\t\t\t<div id=\"chat-container\">\n\t\t\t<div className=\"chat-top\">\n\t\t\t\t<span className=\"RoomInfo-num\">{data?.num}</span>\n\t\t\t\t<span>{roomName}</span>\n\t\t\t\t{(MyPermission === 'owner' || MyPermission === 'admin')? \n\t\t\t\t\t<button className=\"setting-btn\" onClick={openChatSettingModal}>\n\t\t\t\t\t\t<img src={setting} width=\"30\" height=\"30\"></img>\n\t\t\t\t\t</button>\n\t\t\t\t\t: null\n\t\t\t\t}\n\t\t\t</div>\n\t\t\t<ChatSettingModal open={ChatSettingModalState} close={closeChatSettingModal} chatRoomID={roomName} MyPermission={MyPermission}></ChatSettingModal>\n\t\t\t<div className=\"chat-bottom\">\n\t\t\t\t<span className=\"left-chatLog\">\n\t\t\t\t\t<div className=\"chatLog-top\">\n\t\t\t\t\t\t<ChatLog socket={currentSocket} MyID={MyID} roomName={roomName}/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"chatLog-bottom\">\n\t\t\t\t\t\t<ChatInput socket={currentSocket} MyPermission={MyPermission}/>\n\t\t\t\t\t</div>\n\t\t\t\t</span>\n\t\t\t\t<span className=\"right-chatUser\">\n\t\t\t\t\t<UserList socket={currentSocket} users={data?.users} MyPermission={MyPermission} getRoomInfoMutate={mutate} roomName={roomName}></UserList>\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t\t</div>\n\t\t</span>\n\t\t<span className=\"App-Right\">\n\t\t\t\t<SideBar />\n\t\t</span>\n\t\t</>\n\t\t) : (\n\t\t  <Loading></Loading>\n\t\t)}\n\t</div>\n  );\n};\n\nexport default Chat;\n","/Users/jinkim/jin_bye/client/src/Admin/Admin.tsx",["288","289","290","291"],"/Users/jinkim/jin_bye/client/src/Lobby/Lobby.tsx",["292","293","294","295","296"],"/Users/jinkim/jin_bye/client/src/Chat/ChatLog.tsx",["297","298","299","300"],"import React, { useEffect, useState } from \"react\";\nimport \"./styles/ChatLog.scss\";\nimport {findImg} from '../Images/Images'\nimport axios from \"axios\";\nimport useSwr from 'swr';\n\nconst ChatLog = ({socket}: any) => {\n\tconst [MyID, setMyID] = useState('')\n\tconst [roomName, setRoomName] = useState('')\n\n\tconst fetcher = async (url:string) => {\n\t\tif (roomName)\n\t\t{\n\t\t\tconst res = await axios.get(url)\n\t\t\treturn res.data;\n\t\t}\n\t}\n\tconst {data, error, mutate} = useSwr<{id:string, date:Date, content:string, icon:string, sysMsg:boolean}[]>('/chat/chatLog?title=' + roomName, fetcher)\n\n\tuseEffect(() => {\n\t\tconst id = sessionStorage.getItem('nickname')\n\t\tconst room = sessionStorage.getItem('roomName')\n\t\tif (id) setMyID(id)\n\t\tif (room) setRoomName(room)\n\t})\n\n\tuseEffect(() => {\n\t\tsocket.on(\"onReceive\", async(messageItem: {nickname:string, msg:string, date:string, icon:string}) => {\n\t\t\tmutate()\n\t\t});\n\t\treturn () => {\n\t\t\tsocket.disconnect();\n\t\t};\n\t}, [socket]);\n\n\treturn (\n\t<div>\n\t\t{data?.map((msg, idx) => (\n\t\t<div key={idx}>\n\t\t\t{msg.sysMsg ? <div className=\"sysMsg\" >{msg.id}{msg.content}</div>\n\t\t\t\t: msg.id === MyID ?\n\t\t\t\t\t<div className=\"msgRight\">\n\t\t\t\t\t\t<span className=\"msg-right\">{msg.content}</span>\n\t\t\t\t\t\t<span className=\"msg-timeStamp\">({msg.date})</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t: \n\t\t\t\t\t<div className=\"msgLeft\">\n\t\t\t\t\t\t<span><img src={findImg(msg.icon)}  width=\"30\" height=\"30\" className=\"msg-icon\"/></span>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t{msg.id && <div className=\"msg-userName\">{msg.id}</div>}\n\t\t\t\t\t\t\t<div className=\"msg-left\">{msg.content}</div>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<span className=\"msg-timeStamp\">({msg.date})</span>\n\t\t\t\t\t</div>\n\t\t\t}\n\t\t</div>\n\t\t))}\n\t</div>\n\t);\n};\n\nexport default ChatLog;","/Users/jinkim/jin_bye/client/src/Chat/ChatInput.tsx",["301","302","303","304"],"import React, { useEffect, useRef, useState } from \"react\";\nimport \"./styles/ChatInput.css\";\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport {Button} from \"react-bootstrap\";\n\nconst ChatInput = ({socket, MyPermission}: any) => {\n\tconst [chatMessage, setChatMessage] = useState(\"\");\n\tconst [MyID, setMyID] = useState('')\n\tconst [roomName, setRoomName] = useState('')\n\n\tuseEffect(() => {\n\t\tconst id = sessionStorage.getItem('nickname')\n\t\tconst room = sessionStorage.getItem('roomName')\n\t\tif (id) setMyID(id)\n\t\tif (room) setRoomName(room)\n\t})\n\n\tconst handleSubmit = (e:any) => {\n\t\te.preventDefault();\n\t\tsocket.emit(\"onSend\", {\n\t\t\ttitle: roomName,\n\t\t\tnickname: MyID,\n\t\t\tmsg: chatMessage,\n\t\t\tdate: new Date().toLocaleTimeString(),\n\t\t});\n\t\tsetChatMessage(\"\");\n\t};\n\n  const onChatMessageChange = (e:any) => {\n    setChatMessage(e.target.value);\n  };\n\n  return (\n    <div>\n      <form className=\"ChatInput-form\" onSubmit={() => MyPermission == 'muted' ? null : handleSubmit}>\n        <input type=\"text\" className=\"form-control\"\n          placeholder=\"Enter message\"\n          value={chatMessage}\n          onChange={onChatMessageChange}\n        ></input>\n\t\t{MyPermission == 'muted' ? null\n        \t: <Button type=\"button\" className=\"btn btn-sm\" onClick={handleSubmit}>send</Button>\n  \t\t}\n      </form>\n    </div>\n  );\n};\n\nexport default ChatInput;","/Users/jinkim/jin_bye/client/src/Chat/Loading.tsx",[],"/Users/jinkim/jin_bye/client/src/Chat/UserList.tsx",["305","306","307","308","309","310","311"],"import React, { useCallback, useEffect, useState } from \"react\";\nimport \"./styles/UserList.scss\"\nimport {findImg} from '../Images/Images'\nimport crown from '../Images/crown.png'\nimport UserListModal from './UserListModal'\nimport axios from \"axios\";\nimport { mutate } from \"swr\";\n\ninterface IUserList{\n\tsocket:any,\n\tusers: {id:string, permission:string, icon:string}[] | undefined,\n\tMyPermission: string,\n\tgetRoomInfoMutate: any,\n\troomName:string\n}\n\nconst UserList = ({ users, MyPermission, getRoomInfoMutate, roomName } : IUserList) => {\n\t//UserListModal\n\tconst [chatUser, setChatUser] = useState('')\n\tconst [UserListModalState, setUserListModalState] = useState(false);\n\tconst openUserListModal = (id:string) => {\n\t\tsetUserListModalState(true);\n\t\tsetChatUser(id);\n\t}\n\tconst closeUserListModal = () => {\n\t\tsetUserListModalState(false);\n\t}\n\n\t//owner button\n\tasync function plusBtn(id:string){\n\t\tconst rtn = await axios.get('chat/admin?title=' + roomName + '&id=' + id)\n\t\tgetRoomInfoMutate()\n\t}\n\tasync function minusBtn(id:string){\n\t\tconst rtn = await axios.delete('chat/admin?title=' + roomName + '&id=' + id)\n\t\tgetRoomInfoMutate()\n\t}\n\n\treturn (\n\t\t<div className=\"userList-container\">\n\t\t\t{users?.map(user=>\n\t\t\t<div className=\"userList-box\">\n\t\t\t\t<button className=\"userList-btn\" onClick={() => \n\t\t\t\t\t(MyPermission === 'owner' || MyPermission === 'admin') && \n\t\t\t\t\t(user.permission === 'user' || user.permission === 'muted') ? openUserListModal(user.id): null}>\n\t\t\t\t\t<span className=\"iconBox\">\n\t\t\t\t\t\t<span><img src={findImg(user.icon)} width=\"30\" height=\"30\" className=\"icon\"/></span>\n\t\t\t\t\t\t<span>{(user.permission === 'owner' || user.permission === 'admin') ?\n\t\t\t\t\t\t\t<img src={crown} width=\"20\" height=\"20\" className={user.permission === 'owner' ? 'crown owner' : 'crown admin'}/>\n\t\t\t\t\t\t\t: null\n\t\t\t\t\t\t}</span>\n\t\t\t\t\t</span>\n\t\t\t\t\t<span className='id'>{user.id}</span>\n\t\t\t\t</button>\n\t\t\t\t<span>{MyPermission === 'owner' && (user.permission === 'user' || user.permission === 'muted') ?\n\t\t\t\t\t<button className=\"owner-plusBtn\" onClick={() => plusBtn(user.id)}>+</button>\n\t\t\t\t\t: null\n\t\t\t\t}</span>\n\t\t\t\t<span>{MyPermission === 'owner' && user.permission === 'admin' ?\n\t\t\t\t\t<button className=\"owner-xBtn\" onClick={() => minusBtn(user.id)}>x</button>\n\t\t\t\t\t: null\n\t\t\t\t}</span>\n\t\t\t</div>\n\t\t\t)}\n\t\t\t<UserListModal open={UserListModalState} close={closeUserListModal} targetID={chatUser} roomName={roomName} getRoomInfoMutate={getRoomInfoMutate}></UserListModal>\n\t\t</div>\n\n\t);\n  };\n  export default UserList;\n","/Users/jinkim/jin_bye/client/src/Chat/ChatSettingModal.tsx",["312","313","314"],"/Users/jinkim/jin_bye/client/src/Lobby/ChatListModal.tsx",["315","316"],"/Users/jinkim/jin_bye/client/src/Lobby/ChatList.tsx",["317","318","319","320","321","322"],"/Users/jinkim/jin_bye/client/src/Lobby/GameListModal.tsx",["323"],"/Users/jinkim/jin_bye/client/src/Lobby/GameList.tsx",["324","325","326","327","328"],"/Users/jinkim/jin_bye/client/src/SideBar/SideBar.tsx",["329","330","331","332","333"],"import axios from \"axios\";\nimport useSwr from 'swr';\nimport {useEffect, useState} from \"react\";\nimport \"./styles/SideBar.scss\"\nimport {findImg} from '../Images/Images'\nimport UserInfoModal from \"./UserInfoModal\";\nimport GetChatList from './GetChatList'\n\nconst SideBar = () => {\n\tconst [MyID, setMyID] = useState('')\n\tconst [MyIcon, setMyIcon] = useState('')\n\tconst [IntraID, setIntraID] = useState('')\n\t\n\tuseEffect(() => {\n\t\tconst intra_id = sessionStorage.getItem('intraID')\n\t\tif (intra_id) setIntraID(intra_id)\n\t})\n\n\tconst GetMyProfile = async (url:string) => {\n\t\tif (IntraID)\n\t\t{\n\t\t\tconst res = await axios.get(url)\n\t\t\tsessionStorage.setItem('nickname', res.data.id)\n\t\t\tsessionStorage.setItem('icon', res.data.icon)\n\t\t\tsetMyID(res.data.id)\n\t\t\tsetMyIcon(res.data.icon)\n\t\t\tif (res.data.state === 'off')\n\t\t\t\tdocument.location.href = '/log/in'\n\t\t\treturn (res.data)\n\t\t}\n\t}\n\tuseSwr<{id:string, icon:string, state:string}>('/profile/my?intra_id=' + IntraID, GetMyProfile)\n\n\n\tconst fetcher = async (url:string) => {\n\t\tif (MyID)\n\t\t{\n\t\t\tconst res = await axios.get(url)\n\t\t\treturn res.data;\n\t\t}\n\t}\n\n\tconst {data, error, mutate} = useSwr<{id:string, icon:string, state:string, isFriend:boolean}[]>('/Lobby/userList?id=' + MyID, fetcher)\n\n\n\t//UserInfoModal\n\tconst [TargetID, setTargetID] = useState('');\n\tconst [UserInfoModalState, setUserInfoModalState] = useState(false);\n\tconst openUserInfoModal = async(id:string) => {\n\t\tsetUserInfoModalState(true);\n\t\tsetTargetID(id);\n\t}\n\tconst closeUserInfoModal = () => {\n\t\tsetUserInfoModalState(false);\n\t\tmutate()\n\t}\n\n\treturn(\n\t<aside>\n\t\t<div className=\"top\">\n\t\t\t<span className=\"MyID\">{MyID}</span>\n\t\t\t<button type=\"button\" className=\"myIcon\" onClick={() => openUserInfoModal(MyID)}>\n\t\t\t\t<img src={findImg(MyIcon)} width=\"30\" height=\"30\"></img>\n\t\t\t</button>\n\t\t</div>\n\t\t<div className=\"bottom\">\n\t\t\t<div className=\"title\"># friends</div>\n\t\t\t{data?.map(user=> user.isFriend ?\n\t\t\t\t<div>\n\t\t\t\t<button type=\"button\" className=\"user-btn\" onClick={() => openUserInfoModal(user.id)}>\n\t\t\t\t\t<img src={findImg(user.icon)}  width=\"20\" height=\"20\" className=\"user-icon\"/>\n\t\t\t\t\t{user.state === \"on\" ? <span className=\"userState online\">·</span> : null}\n\t\t\t\t\t{user.state === \"off\" ? <span className=\"userState offline\">·</span> : null}\n\t\t\t\t\t{user.state === \"gaming\" ? <span className=\"userState gaming\">·</span> : null}\n\t\t\t\t\t{user.id}\n\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t\t: null\n\t\t\t)}\n\t\t\t<div className=\"title\"># others</div>\n\t\t\t{data?.map(user => user.isFriend ? null :\n\t\t\t\t<div>\n\t\t\t\t<button type=\"button\" className=\"user-btn\" onClick={() => openUserInfoModal(user.id)}>\n\t\t\t\t\t<img src={findImg(user.icon)}  width=\"20\" height=\"20\" className=\"user-icon\"/>\n\t\t\t\t\t{user.state === \"on\" ? <span className=\"userState online\">·</span> : null}\n\t\t\t\t\t{user.state === \"off\" ? <span className=\"userState offline\">·</span> : null}\n\t\t\t\t\t{user.state === \"gaming\" ? <span className=\"userState gaming\">·</span> : null}\n\t\t\t\t\t{user.id}\n\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t\t\n\t\t\t<GetChatList myID={MyID}/>\n\n\t\t\t<UserInfoModal open={UserInfoModalState} close={closeUserInfoModal} myID={MyID} targetID={TargetID}/>\n\t\t</div>\n\t</aside>\n\t)\n}\nexport default SideBar;","/Users/jinkim/jin_bye/client/src/Images/Images.tsx",["334","335","336","337","338","339"],"/Users/jinkim/jin_bye/client/src/Chat/UserListModal.tsx",["340","341","342","343","344","345"],"import axios from 'axios';\nimport useSwr from 'swr';\nimport React, { useEffect, useState, useCallback } from 'react';\nimport \"../SideBar/styles/UserInfoModal.scss\";\n\nconst UserListModal = ( props: any ) => {\n\tconst { open, close, targetID, roomName, getRoomInfoMutate} = props;\n\n\tconst [IsMute, setIsMute] = useState(false)\n\n\tasync function kickUser(){\n\t\tawait axios.get('chat/kick?title=' + roomName + '&id=' + targetID)\n\t\tclose()\n\t\tgetRoomInfoMutate()\n\t}\n\n\tasync function BanUser(){\n\t\tawait axios.get('chat/ban?title=' + roomName + '&id=' + targetID)\n\t\tclose()\n\t\tgetRoomInfoMutate()\n\t}\n\n\tconst fetcher = async (url:string) => {\n\t\tif (roomName && targetID)\n\t\t{\n\t\t\tconst res = await axios.get(url)\n\t\t\tsetIsMute(res.data.isMuted);\n\t\t\treturn res.data;\n\t\t}\n\t}\n\n\tconst {data, error} = useSwr<{isMuted:boolean}>('chat/mute?title=' + roomName + '&id=' + targetID, fetcher)\n\n\tconst muteHandler = async() => {\n\t\tawait axios.put('chat/mute', {title:roomName, id:targetID, isMuted : !IsMute})\n\t\tsetIsMute(!IsMute);\n\t};\n\n\n\treturn (\n\t\t<div className={ open ? 'openModal Modal' : 'Modal' }>\n\t\t\t{ open ? (\n\t\t\t\t<section>\n\t\t\t\t\t<div className=\"head\">\n\t\t\t\t\t\t<button className=\"close\" onClick={close}> &times; </button>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"content targetID\">\n\t\t\t\t\t\t{targetID}\n\t\t\t\t\t</div>\n\t\t\t\t\t<hr/>\n\t\t\t\t\t<div className='bottom'>\n\t\t\t\t\t\t<span className=\"onoffbtn\">\n\t\t\t\t\t\t\t<input type=\"checkbox\" id=\"switch1\" name=\"switch1\" className=\"input__on-off\" checked={IsMute} onChange={muteHandler}/>\n\t\t\t\t\t\t\t<label htmlFor=\"switch1\" className=\"label__on-off\">\n\t\t\t\t\t\t\t\t<span className=\"marble\"></span>\n\t\t\t\t\t\t\t\t<span className=\"on\">Mute</span>\n\t\t\t\t\t\t\t\t<span className=\"off\">Unmute</span>\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<span><a className=\"btn button\" onClick={kickUser}><b>Kick</b></a></span>\n\t\t\t\t\t\t\t<span><a className=\"btn button kick-button\" onClick={BanUser}><b>Ban</b></a></span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</section>\n\t\t\t) : null }\n\t\t</div>\n\t)\n}\n\nexport default UserListModal","/Users/jinkim/jin_bye/client/src/Lobby/PwdCheckModal.tsx",["346","347"],"/Users/jinkim/jin_bye/client/src/SideBar/GetChatList.tsx",["348"],"/Users/jinkim/jin_bye/client/src/SideBar/UserInfoModal.tsx",["349","350","351","352","353","354","355","356"],"import React, { useEffect, useState, useCallback } from 'react';\nimport axios from \"axios\";\nimport useSwr from 'swr';\nimport \"./styles/UserInfoModal.scss\";\n\nconst UserInfoModal = ( props: any) => {\n\tconst { open, close, myID, targetID} = props;\n\tconst [IsFriend, setIsFriend] = useState<boolean>()\n\tconst [IsBlock, setIsBlock] = useState<boolean>()\n\t\n\tconst fetcher = async (url:string) => {\n\t\tif (myID && targetID)\n\t\t{\n\t\t\tconst res = await axios.get(url)\n\t\t\tsetIsFriend(res.data.friend)\n\t\t\tsetIsBlock(res.data.block)\n\t\t\treturn res.data;\n\t\t}\n\t}\n\n\tconst {data, error} = useSwr<{history:{win:boolean, id:string}[] ,friend:boolean, block:boolean, win:number, lose:number} | {history:{win:boolean, id:string}[], win:number, lose:number}>('profile?myID=' + myID + '&otherID=' + targetID, fetcher)\n\n\tconst FriendHandler = useCallback( async() => {\n\t\tawait axios.put('profile/friend', {myID:myID, otherID:targetID, isFriend:!IsFriend})\n\t\tsetIsFriend(!IsFriend);\n\t},[IsFriend]);\n\t\n\tconst BlockHandler = useCallback( async() => {\n\t\tawait axios.put('profile/block', {myID:myID, otherID:targetID, isBlock:!IsBlock})\n\t\tsetIsBlock(!IsBlock);\n\t},[IsBlock]);\n\n\n\tasync function makeDM(){\n\t\tif (myID.localeCompare(targetID) < 0)\n\t\t\tvar chatRoomName = 'DM_' + myID + '_' + targetID\n\t\telse\n\t\t\tvar chatRoomName = 'DM_' + targetID + '_' + myID\n\t\tawait axios.post('/Lobby/chatCreate', {title: chatRoomName, password:'', owner_id:myID, security:'private'})\n\t\tdocument.location.href = '/chat'\n\t\tsessionStorage.setItem('roomName', chatRoomName)\n\t}\n\n\tasync function Logout(){\n\t\tconst intra_id = sessionStorage.getItem('intraID')\n\t\tawait axios.patch('log/out' , {intra_id : intra_id})\n\t\tdocument.location.href = '/log/in'\n\t}\n\n\treturn (\n\t\t<div className={ open ? 'openModal Modal' : 'Modal' }>\n\t\t\t{ open ? (\n\t\t\t\t<section>\n\t\t\t\t\t<div className=\"head\">\n\t\t\t\t\t\t<button className=\"close\" onClick={close}> &times; </button>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"content\">\n\t\t\t\t\t\t<div className=\"header\">\n\t\t\t\t\t\t\t<div className=\"name\">{targetID}</div>\n\t\t\t\t\t\t\t<span className=\"num win-color\">W {data?.win}</span>\n\t\t\t\t\t\t\t<span className=\"num lose-color\"> &nbsp;&nbsp; L {data?.lose}</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<hr/>\n\t\t\t\t\t\t<div className=\"main\">\n\t\t\t\t\t\t\t{data?.history?.map(match=>\n\t\t\t\t\t\t\t<div className={match.win ? 'matchHistory win-backColor' : 'matchHistory lose-backColor'}>\n\t\t\t\t\t\t\t\t<span className='match-left'>{match.id}</span>\n\t\t\t\t\t\t\t\t<span className={match.win ? 'match-right win-color' : 'match-right lose-color'}>{match.win ? 'Win' : 'Lose'}</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"bottom\">\n\t\t\t\t\t{myID === targetID ? \n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<a className=\"btn button\" onClick={()=> \n\t\t\t\t\t\t\t\tdocument.location.href = '/Admin/'\n\t\t\t\t\t\t\t}><b>Admin</b></a>\n\t\t\t\t\t\t\t&nbsp;\n\t\t\t\t\t\t\t<a className=\"btn button\" onClick={Logout}><b>Logout</b></a>\n\t\t\t\t\t\t</>\n\t\t\t\t\t\t:\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t<span className=\"onoffbtn\">\n\t\t\t\t\t\t\t<input type=\"checkbox\" id=\"switch1\" name=\"switch1\" className=\"input__on-off\" checked={IsFriend} onChange={FriendHandler}/>\n\t\t\t\t\t\t\t<label htmlFor=\"switch1\" className=\"label__on-off\">\n\t\t\t\t\t\t\t\t<span className=\"marble\"></span>\n\t\t\t\t\t\t\t\t<span className=\"on\">Friend</span>\n\t\t\t\t\t\t\t\t<span className=\"off\">Unfriend</span>\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<span className=\"onoffbtn\">\n\t\t\t\t\t\t\t<input type=\"checkbox\" id=\"switch2\" name=\"switch2\" className=\"input__on-off\" checked={!IsBlock} onChange={BlockHandler}/>\n\t\t\t\t\t\t\t<label htmlFor=\"switch2\" className=\"label__on-off\">\n\t\t\t\t\t\t\t\t<span className=\"marble\"></span>\n\t\t\t\t\t\t\t\t<span className=\"on\">Unblock</span>\n\t\t\t\t\t\t\t\t<span className=\"off\">Block</span>\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<a className=\"btn button\" href=\"Game\"><b>Game</b></a>\n\t\t\t\t\t\t\t<a className=\"btn button dm-button\" onClick={makeDM}><b>DM</b></a>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t}\n\t\t\t\t\t</div>\n\t\t\t\t</section>\n\t\t\t) : null }\n\t\t</div>\n\t)\n}\n\nexport default UserInfoModal","/Users/jinkim/jin_bye/client/src/Auth/Auth.tsx",["357"],"import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport './styles/Auth.scss'\n\nconst Auth = () => {\n\n\tconst [IntraID, setIntraID] = useState('')\n\tconst [AuthCode, setAuthCode] = useState('')\n\tconst [WrongCode, setWrongCode] = useState(false)\n\n\tuseEffect(() => {\n\t\tconst url = window.location.href.split('?')\n\t\tif (url[1])\n\t\t{\n\t\t\tconst intra_id = url[1].split('=')\n\t\t\tif (intra_id[0] === 'intra_id')\n\t\t\t{\n\t\t\t\tsetIntraID(intra_id[1])\n\t\t\t\tsessionStorage.setItem('intraID', intra_id[1])\n\t\t\t}\n\t\t}\n\t})\n\n\tconst handleAuthCodeChange = (e:any) => {\n\t\tsetAuthCode(e.target.value);\n\t};\n\n\tconst authCheck = async() => {\n\t\tconst res = await axios.post('/log/2-factor-auth', {\n\t\t\tintra_id: IntraID,\n\t\t\tauth_value: AuthCode\n\t\t})\n\n\t\tif (res.data.auth_result)\n\t\t{\n\t\t\tif (res.data.id)\n\t\t\t{\n\t\t\t\tsessionStorage.setItem(\"nickname\", res.data.id);\n\t\t\t\tdocument.location.href=\"/lobby\"\n\t\t\t}\n\t\t\telse\n\t\t\t\tdocument.location.href=\"/admin\"\n\t\t}\n\t\telse\n\t\t{\n\t\t\tsetWrongCode(true)\n\t\t}\n\t}\n\t\n\n\treturn (\n\t<div className=\"auth-box\">\n\t\t<div className=\"auth-comment\">\n\t\t\t{IntraID}@student.42seoul.kr로 메일이 발송되었습니다.\n\t\t</div>\n\t\t<div>\n\t\t\t<input placeholder=\"인증 코드를 입력해주세요\" onChange={handleAuthCodeChange}/>\n\t\t\t<button onClick={authCheck} className=\"auth-btn\">확인</button>\n\t\t</div>\n\t\t{WrongCode ? \n\t\t\t<div className=\"wrong-code\">\n\t\t\t\t잘못된 코드입니다.\n\t\t\t</div>\n\t\t\t: null\n\t\t}\n\t</div>\n\t)\n\n}\n\nexport default Auth",{"ruleId":"358","replacedBy":"359"},{"ruleId":"360","replacedBy":"361"},{"ruleId":"358","replacedBy":"359"},{"ruleId":"360","replacedBy":"361"},{"ruleId":"362","severity":1,"message":"363","line":2,"column":16,"nodeType":"364","messageId":"365","endLine":2,"endColumn":24},{"ruleId":"362","severity":1,"message":"366","line":34,"column":15,"nodeType":"364","messageId":"365","endLine":34,"endColumn":20},{"ruleId":"367","severity":1,"message":"368","line":60,"column":2,"nodeType":"364","endLine":60,"endColumn":11,"suggestions":"369"},{"ruleId":"370","severity":1,"message":"371","line":102,"column":7,"nodeType":"372","endLine":102,"endColumn":49},{"ruleId":"362","severity":1,"message":"373","line":1,"column":8,"nodeType":"364","messageId":"365","endLine":1,"endColumn":13},{"ruleId":"362","severity":1,"message":"374","line":2,"column":30,"nodeType":"364","messageId":"365","endLine":2,"endColumn":41},{"ruleId":"367","severity":1,"message":"368","line":14,"column":2,"nodeType":"364","endLine":14,"endColumn":11,"suggestions":"375"},{"ruleId":"370","severity":1,"message":"371","line":44,"column":7,"nodeType":"372","endLine":44,"endColumn":50},{"ruleId":"370","severity":1,"message":"371","line":54,"column":80,"nodeType":"372","endLine":54,"endColumn":123},{"ruleId":"362","severity":1,"message":"376","line":1,"column":28,"nodeType":"364","messageId":"365","endLine":1,"endColumn":34},{"ruleId":"367","severity":1,"message":"368","line":11,"column":2,"nodeType":"364","endLine":11,"endColumn":11,"suggestions":"377"},{"ruleId":"362","severity":1,"message":"374","line":1,"column":17,"nodeType":"364","messageId":"365","endLine":1,"endColumn":28},{"ruleId":"362","severity":1,"message":"378","line":1,"column":30,"nodeType":"364","messageId":"365","endLine":1,"endColumn":39},{"ruleId":"362","severity":1,"message":"379","line":7,"column":10,"nodeType":"364","messageId":"365","endLine":7,"endColumn":16},{"ruleId":"362","severity":1,"message":"380","line":31,"column":9,"nodeType":"364","messageId":"365","endLine":31,"endColumn":12},{"ruleId":"362","severity":1,"message":"380","line":35,"column":9,"nodeType":"364","messageId":"365","endLine":35,"endColumn":12},{"ruleId":"370","severity":1,"message":"371","line":45,"column":13,"nodeType":"372","endLine":45,"endColumn":84},{"ruleId":"370","severity":1,"message":"371","line":47,"column":8,"nodeType":"372","endLine":47,"endColumn":121},{"ruleId":"362","severity":1,"message":"373","line":4,"column":8,"nodeType":"364","messageId":"365","endLine":4,"endColumn":13},{"ruleId":"367","severity":1,"message":"368","line":11,"column":2,"nodeType":"364","endLine":11,"endColumn":11,"suggestions":"381"},{"ruleId":"367","severity":1,"message":"382","line":40,"column":5,"nodeType":"383","endLine":40,"endColumn":13,"suggestions":"384"},{"ruleId":"370","severity":1,"message":"371","line":48,"column":12,"nodeType":"372","endLine":48,"endColumn":87},{"ruleId":"385","severity":1,"message":"386","line":31,"column":8,"nodeType":"364","messageId":"387","endLine":31,"endColumn":16},{"ruleId":"388","severity":1,"message":"389","line":68,"column":7,"nodeType":"372","endLine":68,"endColumn":60},{"ruleId":"388","severity":1,"message":"389","line":40,"column":7,"nodeType":"372","endLine":40,"endColumn":60},{"ruleId":"388","severity":1,"message":"389","line":41,"column":14,"nodeType":"372","endLine":41,"endColumn":59},{"ruleId":"388","severity":1,"message":"389","line":42,"column":14,"nodeType":"372","endLine":42,"endColumn":70},{"ruleId":"390","severity":1,"message":"391","line":9,"column":18,"nodeType":"392","messageId":"393","endLine":9,"endColumn":20},{"ruleId":"390","severity":1,"message":"391","line":11,"column":23,"nodeType":"392","messageId":"393","endLine":11,"endColumn":25},{"ruleId":"390","severity":1,"message":"391","line":13,"column":27,"nodeType":"392","messageId":"393","endLine":13,"endColumn":29},{"ruleId":"390","severity":1,"message":"391","line":15,"column":24,"nodeType":"392","messageId":"393","endLine":15,"endColumn":26},{"ruleId":"390","severity":1,"message":"391","line":17,"column":21,"nodeType":"392","messageId":"393","endLine":17,"endColumn":23},{"ruleId":"390","severity":1,"message":"391","line":19,"column":23,"nodeType":"392","messageId":"393","endLine":19,"endColumn":25},{"ruleId":"362","severity":1,"message":"378","line":1,"column":17,"nodeType":"364","messageId":"365","endLine":1,"endColumn":26},{"ruleId":"362","severity":1,"message":"378","line":1,"column":9,"nodeType":"364","messageId":"365","endLine":1,"endColumn":18},{"ruleId":"362","severity":1,"message":"374","line":1,"column":30,"nodeType":"364","messageId":"365","endLine":1,"endColumn":41},{"ruleId":"362","severity":1,"message":"366","line":17,"column":15,"nodeType":"364","messageId":"365","endLine":17,"endColumn":20},{"ruleId":"390","severity":1,"message":"394","line":49,"column":24,"nodeType":"392","messageId":"393","endLine":49,"endColumn":26},{"ruleId":"370","severity":1,"message":"371","line":49,"column":41,"nodeType":"372","endLine":49,"endColumn":83},{"ruleId":"370","severity":1,"message":"371","line":49,"column":86,"nodeType":"372","endLine":49,"endColumn":126},{"ruleId":"362","severity":1,"message":"378","line":1,"column":9,"nodeType":"364","messageId":"365","endLine":1,"endColumn":18},{"ruleId":"362","severity":1,"message":"363","line":1,"column":20,"nodeType":"364","messageId":"365","endLine":1,"endColumn":28},{"ruleId":"362","severity":1,"message":"374","line":1,"column":30,"nodeType":"364","messageId":"365","endLine":1,"endColumn":41},{"ruleId":"362","severity":1,"message":"366","line":13,"column":15,"nodeType":"364","messageId":"365","endLine":13,"endColumn":20},{"ruleId":"370","severity":1,"message":"371","line":21,"column":24,"nodeType":"372","endLine":21,"endColumn":65},{"ruleId":"367","severity":1,"message":"395","line":16,"column":2,"nodeType":"364","endLine":16,"endColumn":11,"suggestions":"396"},{"ruleId":"370","severity":1,"message":"371","line":73,"column":5,"nodeType":"372","endLine":73,"endColumn":57},{"ruleId":"370","severity":1,"message":"371","line":85,"column":5,"nodeType":"372","endLine":85,"endColumn":64},{"ruleId":"388","severity":1,"message":"389","line":93,"column":5,"nodeType":"372","endLine":93,"endColumn":67},{"ruleId":"367","severity":1,"message":"368","line":13,"column":2,"nodeType":"364","endLine":13,"endColumn":11,"suggestions":"397"},{"ruleId":"362","severity":1,"message":"366","line":28,"column":15,"nodeType":"364","messageId":"365","endLine":28,"endColumn":20},{"ruleId":"370","severity":1,"message":"371","line":48,"column":5,"nodeType":"372","endLine":48,"endColumn":55},{"ruleId":"370","severity":1,"message":"371","line":56,"column":6,"nodeType":"372","endLine":56,"endColumn":83},{"ruleId":"370","severity":1,"message":"371","line":69,"column":6,"nodeType":"372","endLine":69,"endColumn":83},{"ruleId":"362","severity":1,"message":"378","line":1,"column":17,"nodeType":"364","messageId":"365","endLine":1,"endColumn":26},{"ruleId":"362","severity":1,"message":"366","line":21,"column":15,"nodeType":"364","messageId":"365","endLine":21,"endColumn":20},{"ruleId":"367","severity":1,"message":"398","line":26,"column":4,"nodeType":"383","endLine":26,"endColumn":14,"suggestions":"399"},{"ruleId":"367","severity":1,"message":"398","line":31,"column":4,"nodeType":"383","endLine":31,"endColumn":13,"suggestions":"400"},{"ruleId":"385","severity":1,"message":"401","line":38,"column":8,"nodeType":"364","messageId":"387","endLine":38,"endColumn":20},{"ruleId":"388","severity":1,"message":"389","line":69,"column":7,"nodeType":"372","endLine":69,"endColumn":83},{"ruleId":"388","severity":1,"message":"389","line":90,"column":8,"nodeType":"372","endLine":90,"endColumn":61},{"ruleId":"362","severity":1,"message":"378","line":1,"column":39,"nodeType":"364","messageId":"365","endLine":1,"endColumn":48},{"ruleId":"388","severity":1,"message":"389","line":42,"column":7,"nodeType":"372","endLine":42,"endColumn":59},{"ruleId":"362","severity":1,"message":"366","line":35,"column":15,"nodeType":"364","messageId":"365","endLine":35,"endColumn":20},{"ruleId":"362","severity":1,"message":"366","line":21,"column":15,"nodeType":"364","messageId":"365","endLine":21,"endColumn":20},{"ruleId":"388","severity":1,"message":"389","line":48,"column":62,"nodeType":"372","endLine":48,"endColumn":91},{"ruleId":"388","severity":1,"message":"389","line":60,"column":8,"nodeType":"372","endLine":60,"endColumn":66},{"ruleId":"358","replacedBy":"402"},{"ruleId":"360","replacedBy":"403"},{"ruleId":"358","replacedBy":"402"},{"ruleId":"360","replacedBy":"403"},{"ruleId":"362","severity":1,"message":"363","line":2,"column":16,"nodeType":"364","messageId":"365","endLine":2,"endColumn":24},{"ruleId":"362","severity":1,"message":"404","line":8,"column":50,"nodeType":"364","messageId":"365","endLine":8,"endColumn":58},{"ruleId":"362","severity":1,"message":"405","line":10,"column":9,"nodeType":"364","messageId":"365","endLine":10,"endColumn":21},{"ruleId":"362","severity":1,"message":"366","line":34,"column":15,"nodeType":"364","messageId":"365","endLine":34,"endColumn":20},{"ruleId":"367","severity":1,"message":"368","line":60,"column":2,"nodeType":"364","endLine":60,"endColumn":11,"suggestions":"406"},{"ruleId":"370","severity":1,"message":"371","line":102,"column":7,"nodeType":"372","endLine":102,"endColumn":49},{"ruleId":"367","severity":1,"message":"395","line":16,"column":2,"nodeType":"364","endLine":16,"endColumn":11,"suggestions":"407"},{"ruleId":"370","severity":1,"message":"371","line":73,"column":5,"nodeType":"372","endLine":73,"endColumn":57},{"ruleId":"370","severity":1,"message":"371","line":85,"column":5,"nodeType":"372","endLine":85,"endColumn":64},{"ruleId":"388","severity":1,"message":"389","line":93,"column":5,"nodeType":"372","endLine":93,"endColumn":67},{"ruleId":"362","severity":1,"message":"373","line":1,"column":8,"nodeType":"364","messageId":"365","endLine":1,"endColumn":13},{"ruleId":"362","severity":1,"message":"374","line":2,"column":30,"nodeType":"364","messageId":"365","endLine":2,"endColumn":41},{"ruleId":"367","severity":1,"message":"368","line":14,"column":2,"nodeType":"364","endLine":14,"endColumn":11,"suggestions":"408"},{"ruleId":"370","severity":1,"message":"371","line":44,"column":7,"nodeType":"372","endLine":44,"endColumn":50},{"ruleId":"370","severity":1,"message":"371","line":54,"column":80,"nodeType":"372","endLine":54,"endColumn":123},{"ruleId":"362","severity":1,"message":"366","line":18,"column":15,"nodeType":"364","messageId":"365","endLine":18,"endColumn":20},{"ruleId":"367","severity":1,"message":"368","line":20,"column":2,"nodeType":"364","endLine":20,"endColumn":11,"suggestions":"409"},{"ruleId":"367","severity":1,"message":"410","line":34,"column":5,"nodeType":"383","endLine":34,"endColumn":13,"suggestions":"411"},{"ruleId":"370","severity":1,"message":"371","line":48,"column":13,"nodeType":"372","endLine":48,"endColumn":88},{"ruleId":"362","severity":1,"message":"376","line":1,"column":28,"nodeType":"364","messageId":"365","endLine":1,"endColumn":34},{"ruleId":"367","severity":1,"message":"368","line":11,"column":2,"nodeType":"364","endLine":11,"endColumn":11,"suggestions":"412"},{"ruleId":"390","severity":1,"message":"391","line":35,"column":69,"nodeType":"392","messageId":"393","endLine":35,"endColumn":71},{"ruleId":"390","severity":1,"message":"391","line":41,"column":17,"nodeType":"392","messageId":"393","endLine":41,"endColumn":19},{"ruleId":"362","severity":1,"message":"374","line":1,"column":17,"nodeType":"364","messageId":"365","endLine":1,"endColumn":28},{"ruleId":"362","severity":1,"message":"378","line":1,"column":30,"nodeType":"364","messageId":"365","endLine":1,"endColumn":39},{"ruleId":"362","severity":1,"message":"379","line":7,"column":10,"nodeType":"364","messageId":"365","endLine":7,"endColumn":16},{"ruleId":"362","severity":1,"message":"380","line":31,"column":9,"nodeType":"364","messageId":"365","endLine":31,"endColumn":12},{"ruleId":"362","severity":1,"message":"380","line":35,"column":9,"nodeType":"364","messageId":"365","endLine":35,"endColumn":12},{"ruleId":"370","severity":1,"message":"371","line":47,"column":13,"nodeType":"372","endLine":47,"endColumn":84},{"ruleId":"370","severity":1,"message":"371","line":49,"column":8,"nodeType":"372","endLine":49,"endColumn":121},{"ruleId":"362","severity":1,"message":"366","line":21,"column":15,"nodeType":"364","messageId":"365","endLine":21,"endColumn":20},{"ruleId":"388","severity":1,"message":"389","line":48,"column":62,"nodeType":"372","endLine":48,"endColumn":91},{"ruleId":"388","severity":1,"message":"389","line":60,"column":8,"nodeType":"372","endLine":60,"endColumn":66},{"ruleId":"385","severity":1,"message":"386","line":31,"column":8,"nodeType":"364","messageId":"387","endLine":31,"endColumn":16},{"ruleId":"388","severity":1,"message":"389","line":68,"column":7,"nodeType":"372","endLine":68,"endColumn":60},{"ruleId":"362","severity":1,"message":"378","line":1,"column":9,"nodeType":"364","messageId":"365","endLine":1,"endColumn":18},{"ruleId":"362","severity":1,"message":"374","line":1,"column":30,"nodeType":"364","messageId":"365","endLine":1,"endColumn":41},{"ruleId":"362","severity":1,"message":"366","line":17,"column":15,"nodeType":"364","messageId":"365","endLine":17,"endColumn":20},{"ruleId":"390","severity":1,"message":"394","line":49,"column":24,"nodeType":"392","messageId":"393","endLine":49,"endColumn":26},{"ruleId":"370","severity":1,"message":"371","line":49,"column":41,"nodeType":"372","endLine":49,"endColumn":83},{"ruleId":"370","severity":1,"message":"371","line":49,"column":86,"nodeType":"372","endLine":49,"endColumn":126},{"ruleId":"388","severity":1,"message":"389","line":40,"column":7,"nodeType":"372","endLine":40,"endColumn":60},{"ruleId":"362","severity":1,"message":"378","line":1,"column":9,"nodeType":"364","messageId":"365","endLine":1,"endColumn":18},{"ruleId":"362","severity":1,"message":"363","line":1,"column":20,"nodeType":"364","messageId":"365","endLine":1,"endColumn":28},{"ruleId":"362","severity":1,"message":"374","line":1,"column":30,"nodeType":"364","messageId":"365","endLine":1,"endColumn":41},{"ruleId":"362","severity":1,"message":"366","line":13,"column":15,"nodeType":"364","messageId":"365","endLine":13,"endColumn":20},{"ruleId":"370","severity":1,"message":"371","line":21,"column":24,"nodeType":"372","endLine":21,"endColumn":65},{"ruleId":"367","severity":1,"message":"395","line":14,"column":2,"nodeType":"364","endLine":14,"endColumn":11,"suggestions":"413"},{"ruleId":"362","severity":1,"message":"366","line":43,"column":15,"nodeType":"364","messageId":"365","endLine":43,"endColumn":20},{"ruleId":"370","severity":1,"message":"371","line":63,"column":5,"nodeType":"372","endLine":63,"endColumn":55},{"ruleId":"370","severity":1,"message":"371","line":71,"column":6,"nodeType":"372","endLine":71,"endColumn":83},{"ruleId":"370","severity":1,"message":"371","line":84,"column":6,"nodeType":"372","endLine":84,"endColumn":83},{"ruleId":"390","severity":1,"message":"391","line":9,"column":18,"nodeType":"392","messageId":"393","endLine":9,"endColumn":20},{"ruleId":"390","severity":1,"message":"391","line":11,"column":23,"nodeType":"392","messageId":"393","endLine":11,"endColumn":25},{"ruleId":"390","severity":1,"message":"391","line":13,"column":27,"nodeType":"392","messageId":"393","endLine":13,"endColumn":29},{"ruleId":"390","severity":1,"message":"391","line":15,"column":24,"nodeType":"392","messageId":"393","endLine":15,"endColumn":26},{"ruleId":"390","severity":1,"message":"391","line":17,"column":21,"nodeType":"392","messageId":"393","endLine":17,"endColumn":23},{"ruleId":"390","severity":1,"message":"391","line":19,"column":23,"nodeType":"392","messageId":"393","endLine":19,"endColumn":25},{"ruleId":"362","severity":1,"message":"378","line":3,"column":17,"nodeType":"364","messageId":"365","endLine":3,"endColumn":26},{"ruleId":"362","severity":1,"message":"374","line":3,"column":38,"nodeType":"364","messageId":"365","endLine":3,"endColumn":49},{"ruleId":"362","severity":1,"message":"414","line":32,"column":9,"nodeType":"364","messageId":"365","endLine":32,"endColumn":13},{"ruleId":"362","severity":1,"message":"366","line":32,"column":15,"nodeType":"364","messageId":"365","endLine":32,"endColumn":20},{"ruleId":"388","severity":1,"message":"389","line":61,"column":14,"nodeType":"372","endLine":61,"endColumn":59},{"ruleId":"388","severity":1,"message":"389","line":62,"column":14,"nodeType":"372","endLine":62,"endColumn":70},{"ruleId":"362","severity":1,"message":"378","line":1,"column":39,"nodeType":"364","messageId":"365","endLine":1,"endColumn":48},{"ruleId":"388","severity":1,"message":"389","line":42,"column":7,"nodeType":"372","endLine":42,"endColumn":59},{"ruleId":"362","severity":1,"message":"366","line":35,"column":15,"nodeType":"364","messageId":"365","endLine":35,"endColumn":20},{"ruleId":"362","severity":1,"message":"378","line":1,"column":17,"nodeType":"364","messageId":"365","endLine":1,"endColumn":26},{"ruleId":"362","severity":1,"message":"366","line":21,"column":15,"nodeType":"364","messageId":"365","endLine":21,"endColumn":20},{"ruleId":"367","severity":1,"message":"398","line":26,"column":4,"nodeType":"383","endLine":26,"endColumn":14,"suggestions":"415"},{"ruleId":"367","severity":1,"message":"398","line":31,"column":4,"nodeType":"383","endLine":31,"endColumn":13,"suggestions":"416"},{"ruleId":"385","severity":1,"message":"401","line":38,"column":8,"nodeType":"364","messageId":"387","endLine":38,"endColumn":20},{"ruleId":"388","severity":1,"message":"389","line":76,"column":8,"nodeType":"372","endLine":78,"endColumn":10},{"ruleId":"388","severity":1,"message":"389","line":80,"column":8,"nodeType":"372","endLine":80,"endColumn":51},{"ruleId":"388","severity":1,"message":"389","line":102,"column":8,"nodeType":"372","endLine":102,"endColumn":61},{"ruleId":"367","severity":1,"message":"395","line":11,"column":2,"nodeType":"364","endLine":11,"endColumn":11,"suggestions":"417"},"no-native-reassign",["418"],"no-negated-in-lhs",["419"],"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'error' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setMyID'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [] as a second argument to the useEffect Hook.",["420"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'axios' is defined but never used.","'useCallback' is defined but never used.",["421"],"'useRef' is defined but never used.",["422"],"'useEffect' is defined but never used.","'mutate' is defined but never used.","'rtn' is assigned a value but never used.",["423"],"React Hook useEffect has missing dependencies: 'MyID' and 'roomName'. Either include them or remove the dependency array.","ArrayExpression",["424"],"@typescript-eslint/no-redeclare","'security' is already defined.","redeclared","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","React Hook useEffect contains a call to 'setIntraID'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [] as a second argument to the useEffect Hook.",["425"],["426"],"React Hook useCallback has missing dependencies: 'myID' and 'targetID'. Either include them or remove the dependency array.",["427"],["428"],"'chatRoomName' is already defined.",["418"],["419"],"'Redirect' is defined but never used.","'Beforeunload' is defined but never used.",["429"],["430"],["431"],["432"],"React Hook useEffect has a missing dependency: 'mutate'. Either include it or remove the dependency array.",["433"],["434"],["435"],"'data' is assigned a value but never used.",["436"],["437"],["438"],"no-global-assign","no-unsafe-negation",{"desc":"439","fix":"440"},{"desc":"439","fix":"441"},{"desc":"439","fix":"442"},{"desc":"439","fix":"443"},{"desc":"444","fix":"445"},{"desc":"439","fix":"446"},{"desc":"439","fix":"447"},{"desc":"448","fix":"449"},{"desc":"450","fix":"451"},{"desc":"439","fix":"452"},{"desc":"439","fix":"453"},{"desc":"439","fix":"454"},{"desc":"439","fix":"455"},{"desc":"456","fix":"457"},{"desc":"439","fix":"458"},{"desc":"439","fix":"459"},{"desc":"448","fix":"460"},{"desc":"450","fix":"461"},{"desc":"439","fix":"462"},"Add dependencies array: []",{"range":"463","text":"464"},{"range":"465","text":"464"},{"range":"466","text":"464"},{"range":"467","text":"464"},"Update the dependencies array to be: [MyID, roomName, socket]",{"range":"468","text":"469"},{"range":"470","text":"464"},{"range":"471","text":"464"},"Update the dependencies array to be: [IsFriend, myID, targetID]",{"range":"472","text":"473"},"Update the dependencies array to be: [IsBlock, myID, targetID]",{"range":"474","text":"475"},{"range":"476","text":"464"},{"range":"477","text":"464"},{"range":"478","text":"464"},{"range":"479","text":"464"},"Update the dependencies array to be: [mutate, socket]",{"range":"480","text":"481"},{"range":"482","text":"464"},{"range":"483","text":"464"},{"range":"484","text":"473"},{"range":"485","text":"475"},{"range":"486","text":"464"},[1792,1792],", []",[509,509],[528,528],[497,497],[1214,1222],"[MyID, roomName, socket]",[886,886],[525,525],[958,968],"[IsFriend, myID, targetID]",[1132,1141],"[IsBlock, myID, targetID]",[1792,1792],[886,886],[509,509],[750,750],[946,954],"[mutate, socket]",[542,542],[515,515],[958,968],[1132,1141],[523,523]]