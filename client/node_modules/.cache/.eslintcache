[{"/Users/sohndohyun/works/transcendence/client/src/index.tsx":"1","/Users/sohndohyun/works/transcendence/client/src/reportWebVitals.js":"2","/Users/sohndohyun/works/transcendence/client/src/App.tsx":"3","/Users/sohndohyun/works/transcendence/client/src/Admin/Admin.tsx":"4","/Users/sohndohyun/works/transcendence/client/src/Lobby/Lobby.tsx":"5","/Users/sohndohyun/works/transcendence/client/src/Auth/Auth.tsx":"6","/Users/sohndohyun/works/transcendence/client/src/Chat/Chat.tsx":"7","/Users/sohndohyun/works/transcendence/client/src/Images/Images.tsx":"8","/Users/sohndohyun/works/transcendence/client/src/Lobby/GameListModal.tsx":"9","/Users/sohndohyun/works/transcendence/client/src/Lobby/GameResult.tsx":"10","/Users/sohndohyun/works/transcendence/client/src/Lobby/ChatList.tsx":"11","/Users/sohndohyun/works/transcendence/client/src/Lobby/MatchFailedModal.tsx":"12","/Users/sohndohyun/works/transcendence/client/src/Lobby/ChatListModal.tsx":"13","/Users/sohndohyun/works/transcendence/client/src/Chat/ChatLog.tsx":"14","/Users/sohndohyun/works/transcendence/client/src/Chat/ChatSettingModal.tsx":"15","/Users/sohndohyun/works/transcendence/client/src/Chat/UserList.tsx":"16","/Users/sohndohyun/works/transcendence/client/src/Chat/ChatInput.tsx":"17","/Users/sohndohyun/works/transcendence/client/src/Lobby/GameList.tsx":"18","/Users/sohndohyun/works/transcendence/client/src/Chat/Loading.tsx":"19","/Users/sohndohyun/works/transcendence/client/src/SideBar/DirectGameModal.tsx":"20","/Users/sohndohyun/works/transcendence/client/src/Pong/Game.tsx":"21","/Users/sohndohyun/works/transcendence/client/src/Pong/PongSocket.tsx":"22","/Users/sohndohyun/works/transcendence/client/src/SideBar/SideBar.tsx":"23","/Users/sohndohyun/works/transcendence/client/src/Lobby/PwdCheckModal.tsx":"24","/Users/sohndohyun/works/transcendence/client/src/Lobby/BanModal.tsx":"25","/Users/sohndohyun/works/transcendence/client/src/Chat/UserListModal.tsx":"26","/Users/sohndohyun/works/transcendence/client/src/Pong/Canvas.tsx":"27","/Users/sohndohyun/works/transcendence/client/src/Pong/GameObject.tsx":"28","/Users/sohndohyun/works/transcendence/client/src/Pong/Wall.tsx":"29","/Users/sohndohyun/works/transcendence/client/src/Pong/Player.tsx":"30","/Users/sohndohyun/works/transcendence/client/src/SideBar/GetChatList.tsx":"31","/Users/sohndohyun/works/transcendence/client/src/Pong/Ball.tsx":"32","/Users/sohndohyun/works/transcendence/client/src/SideBar/UserInfoModal.tsx":"33","/Users/sohndohyun/works/transcendence/client/src/Pong/CanvasHook.tsx":"34"},{"size":567,"mtime":1628162866507,"results":"35","hashOfConfig":"36"},{"size":362,"mtime":1628162866507,"results":"37","hashOfConfig":"36"},{"size":1990,"mtime":1628727905019,"results":"38","hashOfConfig":"36"},{"size":3166,"mtime":1628692307164,"results":"39","hashOfConfig":"36"},{"size":5509,"mtime":1628751997495,"results":"40","hashOfConfig":"36"},{"size":1687,"mtime":1628741388907,"results":"41","hashOfConfig":"36"},{"size":7156,"mtime":1628752000664,"results":"42","hashOfConfig":"36"},{"size":933,"mtime":1628162866504,"results":"43","hashOfConfig":"36"},{"size":1950,"mtime":1628162866506,"results":"44","hashOfConfig":"36"},{"size":689,"mtime":1628681030251,"results":"45","hashOfConfig":"36"},{"size":2119,"mtime":1628681030251,"results":"46","hashOfConfig":"36"},{"size":652,"mtime":1628681030251,"results":"47","hashOfConfig":"36"},{"size":2634,"mtime":1628692307164,"results":"48","hashOfConfig":"36"},{"size":2023,"mtime":1628687941174,"results":"49","hashOfConfig":"36"},{"size":1850,"mtime":1628162866504,"results":"50","hashOfConfig":"36"},{"size":2490,"mtime":1628162866504,"results":"51","hashOfConfig":"36"},{"size":1352,"mtime":1628162866504,"results":"52","hashOfConfig":"36"},{"size":1284,"mtime":1628162866506,"results":"53","hashOfConfig":"36"},{"size":134,"mtime":1628162866504,"results":"54","hashOfConfig":"36"},{"size":1597,"mtime":1628512816099,"results":"55","hashOfConfig":"36"},{"size":4147,"mtime":1628162866506,"results":"56","hashOfConfig":"36"},{"size":128,"mtime":1628162866506,"results":"57","hashOfConfig":"36"},{"size":3151,"mtime":1628736329443,"results":"58","hashOfConfig":"36"},{"size":1254,"mtime":1628681030252,"results":"59","hashOfConfig":"36"},{"size":650,"mtime":1628162866505,"results":"60","hashOfConfig":"36"},{"size":1979,"mtime":1628162866504,"results":"61","hashOfConfig":"36"},{"size":387,"mtime":1628162866506,"results":"62","hashOfConfig":"36"},{"size":1670,"mtime":1628162866506,"results":"63","hashOfConfig":"36"},{"size":229,"mtime":1628162866507,"results":"64","hashOfConfig":"36"},{"size":579,"mtime":1628162866506,"results":"65","hashOfConfig":"36"},{"size":1660,"mtime":1628681030252,"results":"66","hashOfConfig":"36"},{"size":2241,"mtime":1628162866506,"results":"67","hashOfConfig":"36"},{"size":5235,"mtime":1628730974736,"results":"68","hashOfConfig":"36"},{"size":1386,"mtime":1628162866506,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"7zgx4r",{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/sohndohyun/works/transcendence/client/src/index.tsx",[],"/Users/sohndohyun/works/transcendence/client/src/reportWebVitals.js",[],"/Users/sohndohyun/works/transcendence/client/src/App.tsx",["159","160","161"],"//import logo from './logo.svg';\nimport React, { useState } from 'react';\nimport './App.scss';\nimport Chat from './Chat/Chat';\nimport Admin from './Admin/Admin';\nimport Lobby from './Lobby/Lobby';\nimport './Chat/styles/global.css';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect,\n} from 'react-router-dom';\nimport Auth from './Auth/Auth';\nimport Pong from './Pong/Pong';\n\nfunction App() {\n  const redirect_auth = () => {\n    window.location.href = '/log/auth';\n    return null;\n  };\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route\n            exact\n            path=\"/\"\n            render={() =>\n              sessionStorage.getItem('2auth') === 'true' &&\n              sessionStorage.getItem('intraID') ? (\n                <Lobby />\n              ) : (\n                redirect_auth()\n              )\n            }\n          />\n          <Route exact path=\"/2-factor-auth\" render={() => <Auth />} />\n          <Route\n            path=\"/Admin\"\n            exact\n            render={() =>\n              sessionStorage.getItem('2auth') === 'true' &&\n              sessionStorage.getItem('intraID') ? (\n                <Admin />\n              ) : (\n                redirect_auth()\n              )\n            }\n          />\n          <Route\n            path=\"/Lobby\"\n            exact\n            render={() =>\n              sessionStorage.getItem('2auth') === 'true' &&\n              sessionStorage.getItem('intraID') ? (\n                <Lobby />\n              ) : (\n                redirect_auth()\n              )\n            }\n          />\n          <Route\n            path=\"/Chat\"\n            exact\n            render={() =>\n              sessionStorage.getItem('2auth') === 'true' &&\n              sessionStorage.getItem('intraID') ? (\n                <Chat />\n              ) : (\n                redirect_auth()\n              )\n            }\n          />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/sohndohyun/works/transcendence/client/src/Admin/Admin.tsx",["162","163","164","165"],"import React, { useEffect, useState } from 'react';\nimport './styles/Admin.scss';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { allImages, findImg } from '../Images/Images';\nimport axios from 'axios';\n\nconst Admin = () => {\n  const [IntraID, setIntraID] = useState('');\n  const [Nickname, setNickname] = useState('');\n  const [Icon, setIcon] = useState('');\n  const [OldNickname, setOldNickname] = useState('');\n  const [OldIcon, setOldIcon] = useState('');\n  const [SignUp, setSignUp] = useState(true);\n  const [IsUnique, setIsUnique] = useState(true);\n\n  useEffect(() => {\n    const intra_id = sessionStorage.getItem('intraID');\n    if (intra_id) setIntraID(intra_id);\n\n    const old_nickname = sessionStorage.getItem('nickname');\n    if (old_nickname) {\n      setOldNickname(old_nickname);\n      setSignUp(false);\n    }\n\n    const old_icon = sessionStorage.getItem('icon');\n    if (old_icon) setOldIcon(old_icon);\n  });\n\n  const handleNicknameChange = (e: any) => {\n    setNickname(e.target.value);\n  };\n  const handleIconChange = (e: any) => {\n    setIcon(e.target.value);\n  };\n\n  async function saveAdmin(isSignUp: boolean) {\n    const body = {\n      intra_id: IntraID,\n      icon: Icon ? Icon : OldIcon,\n      nickname: Nickname ? Nickname : OldNickname,\n    };\n    if (!SignUp) {\n      await axios\n        .patch('/admin', body)\n        .then((Response) => {\n          if (Nickname) sessionStorage.setItem('nickname', Nickname);\n          if (Icon) sessionStorage.setItem('icon', Icon);\n          document.location.href = '/lobby';\n        })\n        .catch((Error) => {\n          setIsUnique(false);\n        });\n    } else {\n      await axios\n        .post('/admin', body)\n        .then((Response) => {\n          if (Nickname) sessionStorage.setItem('nickname', Nickname);\n          if (Icon) sessionStorage.setItem('icon', Icon);\n          document.location.href = '/lobby';\n        })\n        .catch((Error) => {\n          setIsUnique(false);\n        });\n    }\n  }\n\n  return (\n    <div className=\"Admin-container\">\n      {SignUp ? null : (\n        <div>\n          <img src={findImg(OldIcon)} width=\"30\" height=\"30\" />\n          &nbsp;{OldNickname}\n          <hr />\n        </div>\n      )}\n      <input\n        onChange={handleNicknameChange}\n        placeholder=\"Nickname\"\n        maxLength={10}\n      />\n      {IsUnique ? null : (\n        <div className=\"nickname-error\">유효하지 않은 값입니다.</div>\n      )}\n\n      <div className=\"icon-box\">\n        {allImages.map(({ value, src }) => (\n          <>\n            <input\n              type=\"radio\"\n              name=\"icon\"\n              value={value}\n              onChange={handleIconChange}\n              className=\"icon-input\"\n            />\n            <span className=\"icon\">\n              <img src={src} width=\"50\" height=\"50\" className=\"icon-img\"></img>\n            </span>\n          </>\n        ))}\n      </div>\n\n      <div className=\"Join-button\">\n        {SignUp && (!Nickname || !Icon) ? null : (\n          <a className=\"btn btn-dark\" onClick={() => saveAdmin(SignUp)}>\n            <b>OK</b>\n          </a>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Admin;\n","/Users/sohndohyun/works/transcendence/client/src/Lobby/Lobby.tsx",["166","167","168","169","170"],"/Users/sohndohyun/works/transcendence/client/src/Auth/Auth.tsx",["171"],"import axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport './styles/Auth.scss';\n\nconst Auth = () => {\n  const [IntraID, setIntraID] = useState('');\n  const [AuthCode, setAuthCode] = useState('');\n  const [WrongCode, setWrongCode] = useState(false);\n\n  useEffect(() => {\n    const url = window.location.href.split('?');\n    if (url[1]) {\n      const intra_id = url[1].split('=');\n      if (intra_id[0] === 'intra_id') {\n        setIntraID(intra_id[1]);\n        sessionStorage.setItem('intraID', intra_id[1]);\n        sessionStorage.setItem('2auth', 'false');\n      }\n    }\n  });\n\n  const handleAuthCodeChange = (e: any) => {\n    setAuthCode(e.target.value);\n  };\n\n  const authCheck = async () => {\n    const res = await axios.post('/log/2-factor-auth', {\n      intra_id: IntraID,\n      auth_value: AuthCode,\n    });\n\n    if (res.data.auth_result) {\n      sessionStorage.setItem('2auth', 'true');\n      if (res.data.id) {\n        sessionStorage.setItem('nickname', res.data.id);\n        document.location.href = '/lobby';\n      } else document.location.href = '/admin';\n    } else {\n      setWrongCode(true);\n    }\n  };\n\n  return (\n    <div className=\"auth-box\">\n      <div className=\"auth-comment\">\n        {IntraID}@student.42seoul.kr로 메일이 발송되었습니다.\n      </div>\n      <div>\n        <input\n          placeholder=\"인증 코드를 입력해주세요\"\n          onChange={handleAuthCodeChange}\n        />\n        <button onClick={authCheck} className=\"auth-btn\">\n          확인\n        </button>\n      </div>\n      {WrongCode ? <div className=\"wrong-code\">잘못된 코드입니다.</div> : null}\n    </div>\n  );\n};\n\nexport default Auth;\n","/Users/sohndohyun/works/transcendence/client/src/Chat/Chat.tsx",["172","173","174"],"/Users/sohndohyun/works/transcendence/client/src/Images/Images.tsx",["175","176","177","178","179","180"],"import gamer_boy from './gamer_boy.png'\nimport gamer_girl from './gamer_girl.png'\nimport gamer_keyboard from './gamer_keyboard.png'\nimport gamer_woman from './gamer_woman.png'\nimport man_icon from './man_icon.png'\nimport woman_icon from './woman_icon.png'\n\nexport const findImg = (icon_name:string) => {\n\tif ('gamer_boy' == icon_name)\n\t\treturn (gamer_boy)\n\telse if('gamer_girl' == icon_name)\n\t\treturn (gamer_girl)\n\telse if('gamer_keyboard' == icon_name)\n\t\treturn (gamer_keyboard)\n\telse if('gamer_woman' == icon_name)\n\t\treturn (gamer_woman)\n\telse if('man_icon' == icon_name)\n\t\treturn (man_icon)\n\telse if('woman_icon' == icon_name)\n\t\treturn (woman_icon)\n}\n\nexport const allImages = [\n\t{value: 'gamer_keyboard', src: gamer_keyboard},\n\t{value: 'gamer_woman', src: gamer_woman},\n\t{value: 'gamer_boy', src: gamer_boy},\n\t{value: 'gamer_girl', src: gamer_girl},\n\t{value: 'man_icon', src: man_icon},\n\t{value: 'woman_icon', src: woman_icon},\n]","/Users/sohndohyun/works/transcendence/client/src/Lobby/GameListModal.tsx",["181"],"import React, { useState, useCallback } from 'react';\nimport './styles/Modal.scss';\nimport socket from '../Pong/PongSocket';\n\nconst GameListModal = (props: any) => {\n  const { open, connected, close, MyID } = props;\n  const [IsSpeed, setIsSpeed] = useState(false);\n  const [Matching, setMatching] = useState(false);\n\n  const modeHandler = useCallback((e: any) => {\n    if (e.target.value === 'speed') setIsSpeed(true);\n    else setIsSpeed(false);\n  }, []);\n\n  function makeNewGame() {\n    if (connected) {\n      socket.emit(`Join`, {name:MyID, speed:IsSpeed, ladder: true});\n      setMatching(true);\n    }\n  }\n\n  socket.on(\"cancel\", () => {\n\tsetMatching(false);\n  });\n\n  return (\n    <div className={open ? 'openModal Modal' : 'Modal'}>\n      {open ? (\n        <section>\n          <header>\n            New Game\n            <button className=\"close\" onClick={close}>\n              {' '}\n              &times;{' '}\n            </button>\n          </header>\n          {Matching ? (\n            <main>Matching...</main>\n          ) : (\n            <>\n              {' '}\n              <main>\n                <span>\n                  <input\n                    type=\"radio\"\n                    name=\"speed\"\n                    value=\"normal\"\n                    onClick={modeHandler}\n                  />{' '}\n                  normal &nbsp;&nbsp;\n                </span>\n                <span>\n                  <input\n                    type=\"radio\"\n                    name=\"speed\"\n                    value=\"speed\"\n                    onClick={modeHandler}\n                  />{' '}\n                  speed{' '}\n                </span>\n              </main>\n              <footer>\n                <a className=\"btn btn-primary\" onClick={makeNewGame}>\n                  <b>Matching Start</b>\n                </a>\n              </footer>\n            </>\n          )}\n        </section>\n      ) : null}\n    </div>\n  );\n};\n\nexport default GameListModal;\n","/Users/sohndohyun/works/transcendence/client/src/Lobby/GameResult.tsx",["182","183","184"],"import React, { useState, useCallback } from 'react';\nimport './styles/Modal.scss';\nimport socket from '../Pong/PongSocket';\n\nconst GameResult = (props: any) => {\n  const { open, name, close } = props;\n\n  return (\n    <div className={open ? 'openModal Modal' : 'Modal'}>\n      {open ? (\n        <section>\n          <header>\n            Game Result\n            <button className=\"close\" onClick={close}>\n              {' '}\n              &times;{' '}\n            </button>\n          </header>\n          <>\n            {' '}\n            <main>\n              <b>{name} win</b>\n            </main>\n          </>\n        </section>\n      ) : null}\n    </div>\n  );\n};\nexport default GameResult;\n","/Users/sohndohyun/works/transcendence/client/src/Lobby/ChatList.tsx",["185","186","187","188","189","190"],"import {useEffect, useState, useCallback} from \"react\";\nimport axios from \"axios\";\nimport useSwr from 'swr';\nimport lock from '../Images/lock.png'\nimport unlock from '../Images/unlock.png'\nimport \"./styles/ChatList.scss\"\nimport PwdCheckModal from \"./PwdCheckModal\";\nimport BanModal from \"./BanModal\";\n\nconst ChatList = (props: any) => {\n\tconst {MyID} = props\n\n\tconst fetcher = async (url:string) => {\n\t\tconst res = await axios.get(url)\n\t\treturn res.data;\n\t}\n\n\tconst {data, error} = useSwr<{title:string, num:number, security:string}[]>('Lobby/chatList', fetcher)\n\n\tconst [ClickedRoomTitle, setClickedRoomTitle] = useState('')\n\t//pwd check modal\n\tconst [PwdCheckModalState, setPwdCheckModalState] = useState(false);\n\tconst openPwdCheckModal = (title:string) => {\n\t\tsetPwdCheckModalState(true);\n\t\tsetClickedRoomTitle(title)\n\t}\n\tconst closePwdCheckModal = () => {\n\t\tsetPwdCheckModalState(false);\n\t}\n\n\t//ban modal\n\tconst [BanModalState, setBanModalState] = useState(false);\n\tconst closeBanModal = () => {\n\t\tsetBanModalState(false);\n\t}\n\n\tasync function enterPublicRoom(title:string) {\n\t\tawait axios.post('/Lobby/enter', {title:title, id:MyID, password:''})\n\t\t.then((res) => {\n\t\t\tdocument.location.href = '/Chat';\n\t\t\tsessionStorage.setItem('roomName', title)\n\t\t})\n\t\t.catch((err) => {\n\t\t\t//ban modal 띄우기\n\t\t\tsetBanModalState(true);\n\t\t})\n\t}\n\n\treturn (\n\t<>\n\t{data?.map(chatRoom=>\n\t\t<button type=\"button\" className=\"chatList\" onClick={() => {\n\t\t\tif (chatRoom.security === 'protected')\n\t\t\t\topenPwdCheckModal(chatRoom.title)\n\t\t\telse\n\t\t\t\tenterPublicRoom(chatRoom.title)\n\t\t}}>\n\t\t\t<span className=\"chatList-left\">\n\t\t\t\t<div className=\"chatList-num\">{chatRoom.num}</div>\n\t\t\t</span>\n\t\t\t<span className=\"lock\">\n\t\t\t\t{chatRoom.security != \"protected\" ? <img src={unlock} width=\"20\" height=\"20\"/> : <img src={lock} width=\"20\" height=\"20\"/>}\n\t\t\t</span>\n\t\t\t<span className=\"roomName\">\n\t\t\t\t{chatRoom.title}\n\t\t\t</span>\n\n\t\t</button>\n\t)}\n\t<PwdCheckModal open={PwdCheckModalState} close={closePwdCheckModal} chatRoomID={ClickedRoomTitle} MyID={MyID} />\n\t<BanModal open={BanModalState} close={closeBanModal}/>\n\t</>\n\t)\n}\n\nexport default ChatList","/Users/sohndohyun/works/transcendence/client/src/Lobby/MatchFailedModal.tsx",["191","192"],"import React, { useState, useCallback } from 'react';\nimport './styles/Modal.scss';\n\nconst MatchFailedModal = (props: any) => {\n  const { open, close } = props;\n\n  return (\n    <div className={open ? 'openModal Modal' : 'Modal'}>\n      {open ? (\n        <section>\n          <header>\n            Notice\n            <button className=\"close\" onClick={close}>\n              {' '}\n              &times;{' '}\n            </button>\n          </header>\n          <>\n            {' '}\n            <main>\n              <b>Match failed!</b>\n            </main>\n          </>\n        </section>\n      ) : null}\n    </div>\n  );\n};\nexport default MatchFailedModal;\n","/Users/sohndohyun/works/transcendence/client/src/Lobby/ChatListModal.tsx",["193","194"],"import React, { useState, useCallback } from 'react';\nimport axios from 'axios';\nimport './styles/Modal.scss';\n\nconst ChatListModal = (props: any) => {\n  const { open, close, MyID } = props;\n\n  const [NewRoomName, setNewRoomName] = useState('');\n  const [RoomPWD, setRoomPWD] = useState('');\n  const [IsProtectedRoom, setIsProtectedRoom] = useState(false);\n  const [IsUniqueName, setIsUniqueName] = useState(true);\n\n  const handleRoomNameChange = useCallback((e: any) => {\n    setNewRoomName(e.target.value);\n  }, []);\n  const handelRoomPWD = useCallback((e: any) => {\n    setRoomPWD(e.target.value);\n  }, []);\n\n  const ProtectedRoomCheckHandler = useCallback(\n    (e: any) => {\n      setRoomPWD('');\n      setIsProtectedRoom(!IsProtectedRoom);\n    },\n    [IsProtectedRoom],\n  );\n\n  async function makeNewChat() {\n    if (RoomPWD === '') var security = 'public';\n    else var security = 'protected';\n    await axios\n      .post('/Lobby/chatCreate', {\n        title: NewRoomName,\n        password: RoomPWD,\n        owner_id: MyID,\n        security: security,\n      })\n      .then((res) => {\n        document.location.href = '/chat';\n        sessionStorage.setItem('roomName', NewRoomName);\n      })\n      .catch((err) => {\n        setIsUniqueName(false);\n      });\n  }\n\n  return (\n    <div className={open ? 'openModal Modal' : 'Modal'}>\n      {open ? (\n        <section>\n          <header>\n            New Chatting Room\n            <button className=\"close\" onClick={close}>\n              {' '}\n              &times;{' '}\n            </button>\n          </header>\n          <main>\n            <label>\n              <b>Room Name:&nbsp;</b>\n              <input onChange={handleRoomNameChange} maxLength={20}></input>\n            </label>\n            <label>\n              &nbsp;&nbsp;\n              <input\n                type=\"checkbox\"\n                checked={IsProtectedRoom}\n                onChange={(e) => ProtectedRoomCheckHandler(e)}\n              ></input>{' '}\n              protected\n            </label>\n            {IsUniqueName ? null : (\n              <label className=\"error\">유효하지 않은 값입니다.</label>\n            )}\n            {IsProtectedRoom ? (\n              <div className=\"checkbox-pwd\">\n                <b>password:&nbsp;</b>\n                <input type=\"password\" onChange={handelRoomPWD}></input>\n              </div>\n            ) : null}\n          </main>\n          <footer>\n            <a className=\"btn btn-primary\" onClick={makeNewChat}>\n              <b>Enter</b>\n            </a>\n          </footer>\n        </section>\n      ) : null}\n    </div>\n  );\n};\n\nexport default ChatListModal;\n","/Users/sohndohyun/works/transcendence/client/src/Chat/ChatLog.tsx",["195","196","197","198"],"import React, { useEffect, useState } from \"react\";\nimport \"./styles/ChatLog.scss\";\nimport {findImg} from '../Images/Images'\nimport axios from \"axios\";\nimport useSwr from 'swr';\n\nconst ChatLog = ({socket}: any) => {\n\tconst [MyID, setMyID] = useState('')\n\tconst [roomName, setRoomName] = useState('')\n\n\tconst fetcher = async (url:string) => {\n\t\tif (roomName)\n\t\t{\n\t\t\tlet res = await axios.get(url)\n\n\t\t\tconst block = await axios.get('profile/allblock?myID=' + MyID)\n\t\t\tlet chatlog: {id:string, date:Date, content:string, icon:string, sysMsg:boolean}[] = []\n\t\t\tfor(let i = 0; i < res.data.length; i++)\n\t\t\t{\n\t\t\t\tconst idx = block.data.blocklist.indexOf(res.data[i].id)\n\t\t\t\tif (idx <= -1)\n\t\t\t\t\tchatlog.push(res.data[i])\n\t\t\t}\n\t\t\tres.data = chatlog\n\t\t\treturn res.data;\n\t\t}\n\t}\n\tconst {data, error, mutate} = useSwr<{id:string, date:Date, content:string, icon:string, sysMsg:boolean}[]>('/chat/chatLog?title=' + roomName, fetcher)\n\n\tuseEffect(() => {\n\t\tconst id = sessionStorage.getItem('nickname')\n\t\tconst room = sessionStorage.getItem('roomName')\n\t\tif (id) setMyID(id)\n\t\tif (room) setRoomName(room)\n\t})\n\n\tuseEffect(() => {\n\t\tsocket.on(\"onReceive\", async(messageItem: {nickname:string, msg:string, date:string, icon:string}) => {\n\t\t\tmutate()\n\t\t});\n\t\treturn () => {\n\t\t\tsocket.disconnect();\n\t\t};\n\t}, [socket]);\n\n\treturn (\n\t<div>\n\t\t{data?.map((msg, idx) => (\n\t\t<div key={idx}>\n\t\t\t{msg.sysMsg ? <div className=\"sysMsg\" >{msg.id}{msg.content}</div>\n\t\t\t\t: msg.id === MyID ?\n\t\t\t\t\t<div className=\"msgRight\">\n\t\t\t\t\t\t<span className=\"msg-right\">{msg.content}</span>\n\t\t\t\t\t\t<span className=\"msg-timeStamp\">({msg.date})</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t: \n\t\t\t\t\t<div className=\"msgLeft\">\n\t\t\t\t\t\t<span><img src={findImg(msg.icon)}  width=\"30\" height=\"30\" className=\"msg-icon\"/></span>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t{msg.id && <div className=\"msg-userName\">{msg.id}</div>}\n\t\t\t\t\t\t\t<div className=\"msg-left\">{msg.content}</div>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<span className=\"msg-timeStamp\">({msg.date})</span>\n\t\t\t\t\t</div>\n\t\t\t}\n\t\t</div>\n\t\t))}\n\t</div>\n\t);\n};\n\nexport default ChatLog;","/Users/sohndohyun/works/transcendence/client/src/Chat/ChatSettingModal.tsx",["199","200","201"],"import axios from 'axios';\nimport useSwr from 'swr';\nimport React, {useState, useCallback} from 'react';\nimport \"./styles/ChatSettingModal.scss\";\n\nconst ChatSettingModal = ( props: any ) => {\n\tconst { open, close, chatRoomID, MyPermission} = props;\n\n\tasync function changePWD(){\n\t\tawait axios.post('chat/setting' , {title:chatRoomID, password:RoomPWD})\n\t\tclose();\n\t}\n\n\tconst fetcher = async (url:string) => {\n\t\tif (chatRoomID)\n\t\t{\n\t\t\tconst res = await axios.get(url)\n\t\t\treturn res.data;\n\t\t}\n\t}\n\tconst {data, error, mutate} = useSwr<{id:string}[]>('Chat/banList?title=' + chatRoomID, fetcher)\n\n\tasync function Unban(user: {id:string}){\n\t\tawait axios.get('chat/unban?title=' + chatRoomID + '&id=' + user)\n\t\tmutate()\n\t}\n\n\tconst [RoomPWD, setRoomPWD] = useState('');\n\tconst handelRoomPWD = useCallback((e:any) => {\n\t\tsetRoomPWD(e.target.value)\n\t}, []);\n\n\treturn (\n\t\t<div className={ open ? 'openModal Modal' : 'Modal' }>\n\t\t\t{ open ? (\n\t\t\t\t<section>\n\t\t\t\t\t<header>\n\t\t\t\t\t\tSetting\n\t\t\t\t\t\t<button className=\"close\" onClick={close}> &times; </button>\n\t\t\t\t\t</header>\n\t\t\t\t\t<main>\n\t\t\t\t\t\t<div className=\"ban-name\"><b>Banned users</b></div>\n\t\t\t\t\t\t<div className=\"ban-box\">\n\t\t\t\t\t\t\t{data?.map(user => \n\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<div className=\"ban-inlineBox\">\n\t\t\t\t\t\t\t\t\t<span className=\"ban-user\">{user}</span>\n\t\t\t\t\t\t\t\t\t<span className=\"unban\" onClick={() => Unban(user)}><a className=\"btn unban-btn\">x</a></span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<hr/>\n\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{MyPermission === 'owner' ? \n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t\t\tnew password:&nbsp;\n\t\t\t\t\t\t\t<input onChange={handelRoomPWD} value={RoomPWD}></input>\n\t\t\t\t\t\t\t&nbsp;\n\t\t\t\t\t\t\t<a className=\"btn btn-primary btn-sm\" onClick={changePWD}><b>Change</b></a>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t: null\n\t\t\t\t\t\t}\n\t\t\t\t\t</main>\n\t\t\t\t\t<footer>\n\t\t\t\t\t</footer>\n\t\t\t\t</section>\n\t\t\t) : null }\n\t\t</div>\n\t)\n}\n\nexport default ChatSettingModal","/Users/sohndohyun/works/transcendence/client/src/Chat/UserList.tsx",["202","203","204","205","206","207","208"],"import React, { useCallback, useEffect, useState } from \"react\";\nimport \"./styles/UserList.scss\"\nimport {findImg} from '../Images/Images'\nimport crown from '../Images/crown.png'\nimport UserListModal from './UserListModal'\nimport axios from \"axios\";\nimport { mutate } from \"swr\";\n\ninterface IUserList{\n\tsocket:any,\n\tusers: {id:string, permission:string, icon:string}[] | undefined,\n\tMyPermission: string,\n\tgetRoomInfoMutate: any,\n\troomName:string\n}\n\nconst UserList = ({ users, MyPermission, getRoomInfoMutate, roomName } : IUserList) => {\n\t//UserListModal\n\tconst [chatUser, setChatUser] = useState('')\n\tconst [UserListModalState, setUserListModalState] = useState(false);\n\tconst openUserListModal = (id:string) => {\n\t\tsetUserListModalState(true);\n\t\tsetChatUser(id);\n\t}\n\tconst closeUserListModal = () => {\n\t\tsetUserListModalState(false);\n\t}\n\n\t//owner button\n\tasync function plusBtn(id:string){\n\t\tconst rtn = await axios.get('chat/admin?title=' + roomName + '&id=' + id)\n\t\tgetRoomInfoMutate()\n\t}\n\tasync function minusBtn(id:string){\n\t\tconst rtn = await axios.delete('chat/admin?title=' + roomName + '&id=' + id)\n\t\tgetRoomInfoMutate()\n\t}\n\n\treturn (\n\t\t<div className=\"userList-container\">\n\t\t\t{users?.map(user=>\n\t\t\t<div className=\"userList-box\">\n\t\t\t\t<button className=\"userList-btn\" onClick={() => \n\t\t\t\t\t(MyPermission === 'owner' || MyPermission === 'admin') && \n\t\t\t\t\t(user.permission === 'user' || user.permission === 'muted') ? openUserListModal(user.id): null}>\n\t\t\t\t\t<span className=\"iconBox\">\n\t\t\t\t\t\t<span><img src={findImg(user.icon)} width=\"30\" height=\"30\" className=\"icon\"/></span>\n\t\t\t\t\t\t<span>{(user.permission === 'owner' || user.permission === 'admin') ?\n\t\t\t\t\t\t\t<img src={crown} width=\"20\" height=\"20\" className={user.permission === 'owner' ? 'crown owner' : 'crown admin'}/>\n\t\t\t\t\t\t\t: null\n\t\t\t\t\t\t}</span>\n\t\t\t\t\t</span>\n\t\t\t\t\t<span className='id'>{user.id}</span>\n\t\t\t\t</button>\n\t\t\t\t<span>{MyPermission === 'owner' && (user.permission === 'user' || user.permission === 'muted') ?\n\t\t\t\t\t<button className=\"owner-plusBtn\" onClick={() => plusBtn(user.id)}>+</button>\n\t\t\t\t\t: null\n\t\t\t\t}</span>\n\t\t\t\t<span>{MyPermission === 'owner' && user.permission === 'admin' ?\n\t\t\t\t\t<button className=\"owner-xBtn\" onClick={() => minusBtn(user.id)}>x</button>\n\t\t\t\t\t: null\n\t\t\t\t}</span>\n\t\t\t</div>\n\t\t\t)}\n\t\t\t<UserListModal open={UserListModalState} close={closeUserListModal} targetID={chatUser} roomName={roomName} getRoomInfoMutate={getRoomInfoMutate}></UserListModal>\n\t\t</div>\n\n\t);\n  };\n  export default UserList;\n","/Users/sohndohyun/works/transcendence/client/src/Chat/ChatInput.tsx",["209","210"],"import React, { useEffect, useRef, useState } from \"react\";\nimport \"./styles/ChatInput.css\";\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport {Button} from \"react-bootstrap\";\n\nconst ChatInput = ({socket, MyPermission}: any) => {\n\tconst [chatMessage, setChatMessage] = useState(\"\");\n\tconst [MyID, setMyID] = useState('')\n\tconst [roomName, setRoomName] = useState('')\n\n\tuseEffect(() => {\n\t\tconst id = sessionStorage.getItem('nickname')\n\t\tconst room = sessionStorage.getItem('roomName')\n\t\tif (id) setMyID(id)\n\t\tif (room) setRoomName(room)\n\t})\n\n\tconst handleSubmit = (e:any) => {\n\t\te.preventDefault();\n\t\tif (MyPermission !== 'muted')\n\t\t{\n\t\t\tsocket.emit(\"onSend\", {\n\t\t\t\ttitle: roomName,\n\t\t\t\tnickname: MyID,\n\t\t\t\tmsg: chatMessage,\n\t\t\t\tdate: new Date().toLocaleTimeString(),\n\t\t\t});\n\t\t\tsetChatMessage(\"\");\n\t\t}\n\t};\n\n  const onChatMessageChange = (e:any) => {\n    setChatMessage(e.target.value);\n  };\n\n  return (\n    <div>\n      <form className=\"ChatInput-form\" onSubmit={handleSubmit}>\n        <input type=\"text\" className=\"form-control\"\n          placeholder=\"Enter message\"\n          value={chatMessage}\n          onChange={onChatMessageChange}\n        ></input>\n\t\t{MyPermission === 'muted' ? null\n        \t: <Button type=\"button\" className=\"btn btn-sm\" onClick={handleSubmit}>send</Button>\n  \t\t}\n      </form>\n    </div>\n  );\n};\n\nexport default ChatInput;","/Users/sohndohyun/works/transcendence/client/src/Lobby/GameList.tsx",["211","212","213","214","215","216"],"import { useEffect, useState, useCallback } from 'react';\nimport axios from 'axios';\nimport useSwr from 'swr';\nimport speed from '../Images/speed.png';\nimport './styles/GameList.scss';\nimport { GameNode } from './IGameNode';\nimport socket from '../Pong/PongSocket';\n\nconst GameList = (prop: { gameList: GameNode[] }) => {\n  const { gameList } = prop;\n  \n  const observe = (id: number) => {\n    socket.emit('Observe', id);\n  };\n\n  return (\n    <>\n      {gameList?.map((gameRoom) => (\n        <button\n          type=\"button\"\n          className=\"GameList\"\n          onClick={() => {\n            observe(gameRoom.id);\n          }}\n        >\n          <span className=\"GameList-left\">\n            <div\n              className={\n                gameRoom.ladder ? 'GameList-icon ladder' : 'GameList-icon'\n              }\n            >\n              {gameRoom.speed ? (\n                <img src={speed} width=\"30\" height=\"30\" />\n              ) : (\n                'N'\n              )}\n            </div>\n          </span>\n          <span className=\"GameList-right\">\n            <div className=\"player\">{gameRoom.a}</div>\n            <div>vs</div>\n            <div className=\"player\">{gameRoom.b}</div>\n          </span>\n        </button>\n      ))}\n    </>\n  );\n};\n\nexport default GameList;\n","/Users/sohndohyun/works/transcendence/client/src/Chat/Loading.tsx",[],"/Users/sohndohyun/works/transcendence/client/src/SideBar/DirectGameModal.tsx",["217"],"import React, { useState, useCallback } from 'react';\nimport '../Lobby/styles/Modal.scss';\nimport socket from '../Pong/PongSocket';\n\nconst DirectGameModal = (props: any) => {\n  const { open, close, targetID, closeUserInfoModal } = props;\n  const [IsSpeed, setIsSpeed] = useState(false);\n\n  const modeHandler = useCallback((e: any) => {\n    if (e.target.value === 'speed') setIsSpeed(true);\n    else setIsSpeed(false);\n  }, []);\n\n  function makeDirectGame() {\n\tsocket.emit('MatchWith', {name: targetID, speed: IsSpeed});\n\tclose()\n\tcloseUserInfoModal()\n  }\n\n  return (\n    <div className={open ? 'openModal Modal' : 'Modal'}>\n      {open ? (\n        <section>\n          <header>\n            New Game\n            <button className=\"close\" onClick={close}>\n              {' '}\n              &times;{' '}\n            </button>\n          </header>\n          <main>\n            <span>\n              <input\n                type=\"radio\"\n                name=\"speed\"\n                value=\"normal\"\n                onClick={modeHandler}\n              />{' '}\n              normal &nbsp;&nbsp;\n            </span>\n            <span>\n              <input\n                type=\"radio\"\n                name=\"speed\"\n                value=\"speed\"\n                onClick={modeHandler}\n              />{' '}\n              speed{' '}\n            </span>\n          </main>\n          <footer>\n            <a className=\"btn btn-primary\" onClick={makeDirectGame}>\n              <b>Game Start</b>\n            </a>\n          </footer>\n        </section>\n      ) : null}\n    </div>\n  );\n};\n\nexport default DirectGameModal;\n","/Users/sohndohyun/works/transcendence/client/src/Pong/Game.tsx",[],"/Users/sohndohyun/works/transcendence/client/src/Pong/PongSocket.tsx",[],"/Users/sohndohyun/works/transcendence/client/src/SideBar/SideBar.tsx",["218","219","220","221","222"],"import axios from \"axios\";\nimport useSwr from 'swr';\nimport {useEffect, useState} from \"react\";\nimport \"./styles/SideBar.scss\"\nimport {findImg} from '../Images/Images'\nimport UserInfoModal from \"./UserInfoModal\";\nimport GetChatList from './GetChatList'\n\nconst SideBar = () => {\n\tconst [MyID, setMyID] = useState('')\n\tconst [MyIcon, setMyIcon] = useState('')\n\tconst [IntraID, setIntraID] = useState('')\n\t\n\tuseEffect(() => {\n\t\tconst intra_id = sessionStorage.getItem('intraID')\n\t\tif (intra_id) setIntraID(intra_id)\n\t})\n\n\tconst GetMyProfile = async (url:string) => {\n\t\tif (IntraID)\n\t\t{\n\t\t\tconst res = await axios.get(url)\n\t\t\tsessionStorage.setItem('nickname', res.data.id)\n\t\t\tsessionStorage.setItem('icon', res.data.icon)\n\t\t\tsetMyID(res.data.id)\n\t\t\tsetMyIcon(res.data.icon)\n//\t\t\tif (res.data.state === 'off')\n//\t\t\t\tdocument.location.href = '/log/in'\n\t\t\treturn (res.data)\n\t\t}\n\t}\n\tuseSwr<{id:string, icon:string, state:string}>('/profile/my?intra_id=' + IntraID, GetMyProfile)\n\n\n\tconst fetcher = async (url:string) => {\n\t\tif (MyID)\n\t\t{\n\t\t\tconst res = await axios.get(url)\n\t\t\treturn res.data;\n\t\t}\n\t}\n\n\tconst {data, error, mutate} = useSwr<{id:string, icon:string, state:string, isFriend:boolean}[]>('/Lobby/userList?id=' + MyID, fetcher)\n\n\n\t//UserInfoModal\n\tconst [TargetID, setTargetID] = useState('');\n\tconst [UserInfoModalState, setUserInfoModalState] = useState(false);\n\tconst openUserInfoModal = async(id:string) => {\n\t\tsetUserInfoModalState(true);\n\t\tsetTargetID(id);\n\t}\n\tconst closeUserInfoModal = () => {\n\t\tsetUserInfoModalState(false);\n\t\tmutate()\n\t}\n\n\treturn(\n\t<aside>\n\t\t<div className=\"top\">\n\t\t\t<span className=\"MyID\">{MyID}</span>\n\t\t\t<button type=\"button\" className=\"myIcon\" onClick={() => openUserInfoModal(MyID)}>\n\t\t\t\t<img src={findImg(MyIcon)} width=\"30\" height=\"30\"></img>\n\t\t\t</button>\n\t\t</div>\n\t\t<div className=\"bottom\">\n\t\t\t<div className=\"title\"># friends</div>\n\t\t\t{data?.map(user=> user.isFriend ?\n\t\t\t\t<div>\n\t\t\t\t<button type=\"button\" className=\"user-btn\" onClick={() => openUserInfoModal(user.id)}>\n\t\t\t\t\t<img src={findImg(user.icon)}  width=\"20\" height=\"20\" className=\"user-icon\"/>\n\t\t\t\t\t{user.state === \"on\" ? <span className=\"userState online\">·</span> : null}\n\t\t\t\t\t{user.state === \"off\" ? <span className=\"userState offline\">·</span> : null}\n\t\t\t\t\t{user.state === \"gaming\" ? <span className=\"userState gaming\">·</span> : null}\n\t\t\t\t\t{user.id}\n\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t\t: null\n\t\t\t)}\n\t\t\t<div className=\"title\"># others</div>\n\t\t\t{data?.map(user => user.isFriend ? null :\n\t\t\t\t<div>\n\t\t\t\t<button type=\"button\" className=\"user-btn\" onClick={() => openUserInfoModal(user.id)}>\n\t\t\t\t\t<img src={findImg(user.icon)}  width=\"20\" height=\"20\" className=\"user-icon\"/>\n\t\t\t\t\t{user.state === \"on\" ? <span className=\"userState online\">·</span> : null}\n\t\t\t\t\t{user.state === \"off\" ? <span className=\"userState offline\">·</span> : null}\n\t\t\t\t\t{user.state === \"gaming\" ? <span className=\"userState gaming\">·</span> : null}\n\t\t\t\t\t{user.id}\n\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t\t\n\t\t\t<GetChatList myID={MyID}/>\n\n\t\t\t<UserInfoModal open={UserInfoModalState} close={closeUserInfoModal} myID={MyID} targetID={TargetID}/>\n\t\t</div>\n\t</aside>\n\t)\n}\nexport default SideBar;","/Users/sohndohyun/works/transcendence/client/src/Lobby/PwdCheckModal.tsx",["223","224"],"import React, {useState, useCallback, useEffect} from 'react';\nimport axios from \"axios\";\nimport \"./styles/Modal.scss\";\n\nconst PwdCheckModal = ( props: any ) => {\n\tconst { open, close, chatRoomID, MyID} = props;\n\n\tconst [PWD, setPWD] = useState(\"\");\n\tconst [WorngPWD, setWrongPWD] = useState(false)\n\n\tconst handelPWD = useCallback((e:any) => {\n\t\tsetPWD(e.target.value)\n\t}, []);\n\n\tasync function confirmPWD(){\n\t\tawait axios.post('/Lobby/enter', {title:chatRoomID, id:MyID, password:PWD})\n\t\t.then((res) => {\n\t\t\tdocument.location.href = '/Chat';\n\t\t\tsessionStorage.setItem('roomName', chatRoomID)\n\t\t})\n\t\t.catch((err) => {\n\t\t\tsetWrongPWD(true)\n\t\t})\n\t}\n\n\treturn (\n\t\t<div className={ open ? 'openModal Modal' : 'Modal' }>\n\t\t\t{ open ? (\n\t\t\t\t<section>\n\t\t\t\t\t<header>\n\t\t\t\t\t\tEnter Password\n\t\t\t\t\t\t<button className=\"close\" onClick={() => {\n\t\t\t\t\t\t\tclose()\n\t\t\t\t\t\t\tsetWrongPWD(false)\n\t\t\t\t\t\t}}> &times; </button>\n\t\t\t\t\t</header>\n\t\t\t\t\t<main>\n\t\t\t\t\t\tpassword: <input onChange={handelPWD}></input>\n\t\t\t\t\t\t{WorngPWD ? <label className=\"error\">틀린 비밀번호입니다.</label> : null}\n\t\t\t\t\t</main>\n\t\t\t\t\t<footer>\n\t\t\t\t\t\t<a className=\"btn btn-primary\" onClick={confirmPWD}><b>Enter</b></a>\n\t\t\t\t\t</footer>\n\t\t\t\t</section>\n\t\t\t) : null }\n\t\t</div>\n\t)\n}\n\nexport default PwdCheckModal","/Users/sohndohyun/works/transcendence/client/src/Lobby/BanModal.tsx",["225","226","227"],"import React, { useEffect, useState, useCallback } from 'react';\nimport \"../SideBar/styles/UserInfoModal.scss\";\n\nconst BanModal = ( props: any) => {\n\tconst { open, close} = props;\n\n\treturn (\n\t\t<div className={ open ? 'openModal Modal' : 'Modal' }>\n\t\t\t{ open ? (\n\t\t\t\t<section>\n\t\t\t\t\t<div className=\"head\">\n\t\t\t\t\t\t<button className=\"close\" onClick={close}> &times; </button>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"content\">\n\t\t\t\t\t\t<div className=\"header\">\n\t\t\t\t\t\t\t<hr/>\n\t\t\t\t\t\t\t<div className=\"name lose-color\">채팅방에 입장할 수 없습니다.</div>\n\t\t\t\t\t\t\t<hr/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</section>\n\t\t\t) : null }\n\t\t</div>\n\t)\n}\n\nexport default BanModal","/Users/sohndohyun/works/transcendence/client/src/Chat/UserListModal.tsx",["228","229","230","231","232","233"],"import axios from 'axios';\nimport useSwr from 'swr';\nimport React, { useEffect, useState, useCallback } from 'react';\nimport \"../SideBar/styles/UserInfoModal.scss\";\n\nconst UserListModal = ( props: any ) => {\n\tconst { open, close, targetID, roomName, getRoomInfoMutate} = props;\n\n\tconst [IsMute, setIsMute] = useState(false)\n\n\tasync function kickUser(){\n\t\tawait axios.get('chat/kick?title=' + roomName + '&id=' + targetID)\n\t\tclose()\n\t\tgetRoomInfoMutate()\n\t}\n\n\tasync function BanUser(){\n\t\tawait axios.get('chat/ban?title=' + roomName + '&id=' + targetID)\n\t\tclose()\n\t\tgetRoomInfoMutate()\n\t}\n\n\tconst fetcher = async (url:string) => {\n\t\tif (roomName && targetID)\n\t\t{\n\t\t\tconst res = await axios.get(url)\n\t\t\tsetIsMute(res.data.isMuted);\n\t\t\treturn res.data;\n\t\t}\n\t}\n\n\tconst {data, error} = useSwr<{isMuted:boolean}>('chat/mute?title=' + roomName + '&id=' + targetID, fetcher)\n\n\tconst muteHandler = async() => {\n\t\tawait axios.put('chat/mute', {title:roomName, id:targetID, isMuted : !IsMute})\n\t\tsetIsMute(!IsMute);\n\t};\n\n\n\treturn (\n\t\t<div className={ open ? 'openModal Modal' : 'Modal' }>\n\t\t\t{ open ? (\n\t\t\t\t<section>\n\t\t\t\t\t<div className=\"head\">\n\t\t\t\t\t\t<button className=\"close\" onClick={close}> &times; </button>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"content targetID\">\n\t\t\t\t\t\t{targetID}\n\t\t\t\t\t</div>\n\t\t\t\t\t<hr/>\n\t\t\t\t\t<div className='bottom'>\n\t\t\t\t\t\t<span className=\"onoffbtn\">\n\t\t\t\t\t\t\t<input type=\"checkbox\" id=\"switch1\" name=\"switch1\" className=\"input__on-off\" checked={IsMute} onChange={muteHandler}/>\n\t\t\t\t\t\t\t<label htmlFor=\"switch1\" className=\"label__on-off\">\n\t\t\t\t\t\t\t\t<span className=\"marble\"></span>\n\t\t\t\t\t\t\t\t<span className=\"on\">Mute</span>\n\t\t\t\t\t\t\t\t<span className=\"off\">Unmute</span>\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<span><a className=\"btn button\" onClick={kickUser}><b>Kick</b></a></span>\n\t\t\t\t\t\t\t<span><a className=\"btn button kick-button\" onClick={BanUser}><b>Ban</b></a></span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</section>\n\t\t\t) : null }\n\t\t</div>\n\t)\n}\n\nexport default UserListModal","/Users/sohndohyun/works/transcendence/client/src/Pong/Canvas.tsx",[],"/Users/sohndohyun/works/transcendence/client/src/Pong/GameObject.tsx",[],"/Users/sohndohyun/works/transcendence/client/src/Pong/Wall.tsx",[],"/Users/sohndohyun/works/transcendence/client/src/Pong/Player.tsx",[],"/Users/sohndohyun/works/transcendence/client/src/SideBar/GetChatList.tsx",["234"],"import axios from \"axios\";\nimport useSwr from 'swr';\nimport \"./styles/GetChatList.scss\"\n\nconst GetChatList = (props: any) => {\n\tconst {myID} = props\n\n\tconst fetcher = async (url:string) => {\n\t\tif (myID)\n\t\t{\n\t\t\tconst res = await axios.get(url)\n\n\t\t\t//kick or ban\n\t\t\tif (window.location.pathname === '/chat' || window.location.pathname === '/Chat')\n\t\t\t{\n\t\t\t\tconst currentRoom = sessionStorage.getItem('roomName')\n\t\t\t\tvar leave = true\n\t\t\t\t\n\t\t\t\tfor(let i = 0; i < res.data.length; i++)\n\t\t\t\t{\n\t\t\t\t\tif (res.data[i].title === currentRoom)\n\t\t\t\t\t\tleave = false\n\t\t\t\t}\n\n\t\t\t\tif (leave)\n\t\t\t\t{\n\t\t\t\t\twindow.location.href = '/lobby'\n\t\t\t\t\tsessionStorage.removeItem('roomName')\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn res.data;\n\t\t}\n\t}\n\n\tconst {data, error, mutate} = useSwr<{title:string, num: number}[]>('/Lobby/myChatList?id=' + myID, fetcher)\n\n\tconst DelChat = async(title:string) => {\n\t\tawait axios.delete('Lobby?title=' + title + '&id=' + myID)\n\t\tif ((window.location.pathname === '/chat' || window.location.pathname === '/Chat') && sessionStorage.getItem('roomName') === title)\n\t\t{\n\t\t\twindow.location.href = '/lobby'\n\t\t\tsessionStorage.removeItem('roomName')\n\t\t}\n\t\tmutate()\n\t}\n\n\treturn (\n\t<>\n\t\t<div className=\"title\"># my chats</div>\n\t\t{data?.map(chat=>\n\t\t\t<div className=\"chat\">\n\t\t\t\t<button type=\"button\" className=\"chat-btn\" onClick={() => {\n\t\t\t\t\t\tdocument.location.href = '/Chat';\n\t\t\t\t\t\tsessionStorage.setItem('roomName', chat.title);\n\t\t\t\t}}>\n\t\t\t\t\t<span className=\"chatNum\">{chat.num}</span>\n\t\t\t\t\t<span>&nbsp;{chat.title}</span>\n\t\t\t\t</button>\n\t\t\t\t<button type=\"button\" className=\"chatLeave\" onClick={() => DelChat(chat.title)}>X</button>\n\t\t\t</div>\n\t\t)}\n\t</>\n\t)\n}\n\nexport default GetChatList","/Users/sohndohyun/works/transcendence/client/src/Pong/Ball.tsx",[],"/Users/sohndohyun/works/transcendence/client/src/SideBar/UserInfoModal.tsx",["235","236","237","238","239","240","241","242","243"],"import React, { useEffect, useState, useCallback } from 'react';\nimport axios from \"axios\";\nimport useSwr from 'swr';\nimport \"./styles/UserInfoModal.scss\";\nimport DirectGameModal from './DirectGameModal';\n\nconst UserInfoModal = ( props: any) => {\n\tconst { open, close, myID, targetID} = props;\n\tconst [IsFriend, setIsFriend] = useState<boolean>()\n\tconst [IsBlock, setIsBlock] = useState<boolean>()\n\t\n\tconst fetcher = async (url:string) => {\n\t\tif (myID && targetID)\n\t\t{\n\t\t\tconst res = await axios.get(url)\n\t\t\tsetIsFriend(res.data.friend)\n\t\t\tsetIsBlock(res.data.block)\n\t\t\treturn res.data;\n\t\t}\n\t}\n\n\tconst {data, error} = useSwr<{history:{win:boolean, id:string}[] ,friend:boolean, block:boolean, win:number, lose:number, ladder:number} | {history:{win:boolean, id:string}[], win:number, lose:number, ladder:number}>('profile?myID=' + myID + '&otherID=' + targetID, fetcher)\n\n\tconst FriendHandler = useCallback( async() => {\n\t\tawait axios.put('profile/friend', {myID:myID, otherID:targetID, isFriend:!IsFriend})\n\t\tsetIsFriend(!IsFriend);\n\t},[IsFriend]);\n\t\n\tconst BlockHandler = useCallback( async() => {\n\t\tawait axios.put('profile/block', {myID:myID, otherID:targetID, isBlock:!IsBlock})\n\t\tsetIsBlock(!IsBlock);\n\t},[IsBlock]);\n\n\t//block modal\n\tconst [BlockModal, setBlockModal] = useState(false);\n\n\tasync function makeDM(){\n\t\tif (myID.localeCompare(targetID) < 0)\n\t\t\tvar chatRoomName = 'DM_' + myID + '_' + targetID\n\t\telse\n\t\t\tvar chatRoomName = 'DM_' + targetID + '_' + myID\n\t\tawait axios.post('/Lobby/chatCreate', {title: chatRoomName, password:'', owner_id:myID, security:'private'})\n\t\t.then((res) => {\n\t\t\tdocument.location.href = '/chat'\n\t\t\tsessionStorage.setItem('roomName', chatRoomName)\n\t\t})\n\t\t.catch((err) => {\n\t\t\tsetBlockModal(true)\n\t\t})\n\t}\n\n\t//direct game modal\n\tconst [DirectGameModalState, setDirectGameModalState] = useState(false);\n\tconst openDirectGameModal = () => {\n\t\t/*\n\t\tif (window.location.pathname === '/chat' || window.location.pathname === '/Chat')\n\t\t{\n\t\t\twindow.location.href = '/lobby'\n\t\t\tsessionStorage.removeItem('roomName')\n\t\t\tsessionStorage.setItem('directGame', targetID)\n\t\t}\n\t\t*/\n\t\tsetDirectGameModalState(true);\n\t};\n\tconst closeDirectGameModal = () => {\n\t\tsetDirectGameModalState(false);\n\t};\n\n\tasync function Logout(){\n\t\tconst intra_id = sessionStorage.getItem('intraID')\n\t\tawait axios.patch('log/out' , {intra_id : intra_id})\n\t\tsessionStorage.removeItem('2auth')\n\t\tdocument.location.href = '/log/in'\n\t}\n\n\treturn (\n\t\t<div className={ open ? 'openModal Modal' : 'Modal' }>\n\t\t\t{ open ? ( \n\t\t\t  BlockModal ? \n\t\t\t\t<section>\n\t\t\t\t\t<div className=\"head\">\n\t\t\t\t\t\t<button className=\"close\" onClick={() => {\n\t\t\t\t\t\t\tclose()\n\t\t\t\t\t\t\tsetBlockModal(false)\n\t\t\t\t\t\t}}> &times; </button>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"content\">\n\t\t\t\t\t\t<div className=\"header\">\n\t\t\t\t\t\t\t<hr/>\n\t\t\t\t\t\t\t<div className=\"name lose-color\">DM 채팅방을 생성할 수 없습니다.</div>\n\t\t\t\t\t\t\t<hr/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</section>\n\t\t\t\t:\n\t\t\t\t<section>\n\t\t\t\t\t<div className=\"head\">\n\t\t\t\t\t\t<button className=\"close\" onClick={close}> &times; </button>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"content\">\n\t\t\t\t\t\t<div className=\"header\">\n\t\t\t\t\t\t\t<div className=\"name\">{targetID}</div>\n\t\t\t\t\t\t\t<span className=\"num win-color\">W {data?.win}</span>\n\t\t\t\t\t\t\t<span className=\"num lose-color\"> &nbsp;&nbsp; L {data?.lose}</span>\n\t\t\t\t\t\t\t<div className=\"num\">ladder {data?.ladder}</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<hr/>\n\t\t\t\t\t\t<div className=\"main\">\n\t\t\t\t\t\t\t{data?.history?.map(match=>\n\t\t\t\t\t\t\t<div className={match.win ? 'matchHistory win-backColor' : 'matchHistory lose-backColor'}>\n\t\t\t\t\t\t\t\t<span className='match-left'>{match.id}</span>\n\t\t\t\t\t\t\t\t<span className={match.win ? 'match-right win-color' : 'match-right lose-color'}>{match.win ? 'Win' : 'Lose'}</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"bottom\">\n\t\t\t\t\t{myID === targetID ? \n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<a className=\"btn button\" onClick={()=> \n\t\t\t\t\t\t\t\tdocument.location.href = '/Admin/'\n\t\t\t\t\t\t\t}><b>Admin</b></a>\n\t\t\t\t\t\t\t&nbsp;\n\t\t\t\t\t\t\t<a className=\"btn button\" onClick={Logout}><b>Logout</b></a>\n\t\t\t\t\t\t</>\n\t\t\t\t\t\t:\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t<span className=\"onoffbtn\">\n\t\t\t\t\t\t\t<input type=\"checkbox\" id=\"switch1\" name=\"switch1\" className=\"input__on-off\" checked={IsFriend} onChange={FriendHandler}/>\n\t\t\t\t\t\t\t<label htmlFor=\"switch1\" className=\"label__on-off\">\n\t\t\t\t\t\t\t\t<span className=\"marble\"></span>\n\t\t\t\t\t\t\t\t<span className=\"on\">Friend</span>\n\t\t\t\t\t\t\t\t<span className=\"off\">Unfriend</span>\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<span className=\"onoffbtn\">\n\t\t\t\t\t\t\t<input type=\"checkbox\" id=\"switch2\" name=\"switch2\" className=\"input__on-off\" checked={!IsBlock} onChange={BlockHandler}/>\n\t\t\t\t\t\t\t<label htmlFor=\"switch2\" className=\"label__on-off\">\n\t\t\t\t\t\t\t\t<span className=\"marble\"></span>\n\t\t\t\t\t\t\t\t<span className=\"on\">Unblock</span>\n\t\t\t\t\t\t\t\t<span className=\"off\">Block</span>\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<a className=\"btn button\" onClick={openDirectGameModal}><b>Game</b></a>\n\t\t\t\t\t\t\t<a className=\"btn button dm-button\" onClick={makeDM}><b>DM</b></a>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t}\n\t\t\t\t\t</div>\n\t\t\t\t\t<DirectGameModal open={DirectGameModalState} close={closeDirectGameModal} targetID={targetID} closeUserInfoModal={close}/>\n\t\t\t\t</section>\n\t\t\t): null }\n\t\t</div>\n\t)\n}\n\nexport default UserInfoModal","/Users/sohndohyun/works/transcendence/client/src/Pong/CanvasHook.tsx",[],{"ruleId":"244","severity":1,"message":"245","line":2,"column":17,"nodeType":"246","messageId":"247","endLine":2,"endColumn":25},{"ruleId":"244","severity":1,"message":"248","line":12,"column":3,"nodeType":"246","messageId":"247","endLine":12,"endColumn":11},{"ruleId":"244","severity":1,"message":"249","line":15,"column":8,"nodeType":"246","messageId":"247","endLine":15,"endColumn":12},{"ruleId":"250","severity":1,"message":"251","line":16,"column":3,"nodeType":"246","endLine":16,"endColumn":12,"suggestions":"252"},{"ruleId":"253","severity":1,"message":"254","line":72,"column":11,"nodeType":"255","endLine":72,"endColumn":64},{"ruleId":"253","severity":1,"message":"254","line":97,"column":15,"nodeType":"255","endLine":97,"endColumn":74},{"ruleId":"256","severity":1,"message":"257","line":105,"column":11,"nodeType":"255","endLine":105,"endColumn":73},{"ruleId":"244","severity":1,"message":"258","line":1,"column":8,"nodeType":"246","messageId":"247","endLine":1,"endColumn":13},{"ruleId":"244","severity":1,"message":"259","line":2,"column":31,"nodeType":"246","messageId":"247","endLine":2,"endColumn":42},{"ruleId":"250","severity":1,"message":"260","line":41,"column":3,"nodeType":"246","endLine":41,"endColumn":12,"suggestions":"261"},{"ruleId":"253","severity":1,"message":"254","line":160,"column":15,"nodeType":"255","endLine":160,"endColumn":59},{"ruleId":"253","severity":1,"message":"254","line":181,"column":15,"nodeType":"255","endLine":181,"endColumn":59},{"ruleId":"250","severity":1,"message":"251","line":10,"column":3,"nodeType":"246","endLine":10,"endColumn":12,"suggestions":"262"},{"ruleId":"244","severity":1,"message":"263","line":47,"column":17,"nodeType":"246","messageId":"247","endLine":47,"endColumn":22},{"ruleId":"250","severity":1,"message":"260","line":71,"column":3,"nodeType":"246","endLine":71,"endColumn":12,"suggestions":"264"},{"ruleId":"253","severity":1,"message":"254","line":191,"column":21,"nodeType":"255","endLine":191,"endColumn":63},{"ruleId":"265","severity":1,"message":"266","line":9,"column":18,"nodeType":"267","messageId":"268","endLine":9,"endColumn":20},{"ruleId":"265","severity":1,"message":"266","line":11,"column":23,"nodeType":"267","messageId":"268","endLine":11,"endColumn":25},{"ruleId":"265","severity":1,"message":"266","line":13,"column":27,"nodeType":"267","messageId":"268","endLine":13,"endColumn":29},{"ruleId":"265","severity":1,"message":"266","line":15,"column":24,"nodeType":"267","messageId":"268","endLine":15,"endColumn":26},{"ruleId":"265","severity":1,"message":"266","line":17,"column":21,"nodeType":"267","messageId":"268","endLine":17,"endColumn":23},{"ruleId":"265","severity":1,"message":"266","line":19,"column":23,"nodeType":"267","messageId":"268","endLine":19,"endColumn":25},{"ruleId":"256","severity":1,"message":"257","line":63,"column":17,"nodeType":"255","endLine":63,"endColumn":70},{"ruleId":"244","severity":1,"message":"245","line":1,"column":17,"nodeType":"246","messageId":"247","endLine":1,"endColumn":25},{"ruleId":"244","severity":1,"message":"259","line":1,"column":27,"nodeType":"246","messageId":"247","endLine":1,"endColumn":38},{"ruleId":"244","severity":1,"message":"269","line":3,"column":8,"nodeType":"246","messageId":"247","endLine":3,"endColumn":14},{"ruleId":"244","severity":1,"message":"270","line":1,"column":9,"nodeType":"246","messageId":"247","endLine":1,"endColumn":18},{"ruleId":"244","severity":1,"message":"259","line":1,"column":30,"nodeType":"246","messageId":"247","endLine":1,"endColumn":41},{"ruleId":"244","severity":1,"message":"263","line":18,"column":15,"nodeType":"246","messageId":"247","endLine":18,"endColumn":20},{"ruleId":"265","severity":1,"message":"271","line":62,"column":24,"nodeType":"267","messageId":"268","endLine":62,"endColumn":26},{"ruleId":"253","severity":1,"message":"254","line":62,"column":41,"nodeType":"255","endLine":62,"endColumn":83},{"ruleId":"253","severity":1,"message":"254","line":62,"column":86,"nodeType":"255","endLine":62,"endColumn":126},{"ruleId":"244","severity":1,"message":"245","line":1,"column":17,"nodeType":"246","messageId":"247","endLine":1,"endColumn":25},{"ruleId":"244","severity":1,"message":"259","line":1,"column":27,"nodeType":"246","messageId":"247","endLine":1,"endColumn":38},{"ruleId":"272","severity":1,"message":"273","line":30,"column":14,"nodeType":"246","messageId":"274","endLine":30,"endColumn":22},{"ruleId":"256","severity":1,"message":"257","line":83,"column":13,"nodeType":"255","endLine":83,"endColumn":66},{"ruleId":"244","severity":1,"message":"263","line":28,"column":15,"nodeType":"246","messageId":"247","endLine":28,"endColumn":20},{"ruleId":"250","severity":1,"message":"260","line":30,"column":2,"nodeType":"246","endLine":30,"endColumn":11,"suggestions":"275"},{"ruleId":"250","severity":1,"message":"276","line":44,"column":5,"nodeType":"277","endLine":44,"endColumn":13,"suggestions":"278"},{"ruleId":"253","severity":1,"message":"254","line":58,"column":13,"nodeType":"255","endLine":58,"endColumn":88},{"ruleId":"244","severity":1,"message":"263","line":21,"column":15,"nodeType":"246","messageId":"247","endLine":21,"endColumn":20},{"ruleId":"256","severity":1,"message":"257","line":48,"column":62,"nodeType":"255","endLine":48,"endColumn":91},{"ruleId":"256","severity":1,"message":"257","line":60,"column":8,"nodeType":"255","endLine":60,"endColumn":66},{"ruleId":"244","severity":1,"message":"259","line":1,"column":17,"nodeType":"246","messageId":"247","endLine":1,"endColumn":28},{"ruleId":"244","severity":1,"message":"270","line":1,"column":30,"nodeType":"246","messageId":"247","endLine":1,"endColumn":39},{"ruleId":"244","severity":1,"message":"279","line":7,"column":10,"nodeType":"246","messageId":"247","endLine":7,"endColumn":16},{"ruleId":"244","severity":1,"message":"280","line":31,"column":9,"nodeType":"246","messageId":"247","endLine":31,"endColumn":12},{"ruleId":"244","severity":1,"message":"280","line":35,"column":9,"nodeType":"246","messageId":"247","endLine":35,"endColumn":12},{"ruleId":"253","severity":1,"message":"254","line":47,"column":13,"nodeType":"255","endLine":47,"endColumn":84},{"ruleId":"253","severity":1,"message":"254","line":49,"column":8,"nodeType":"255","endLine":49,"endColumn":121},{"ruleId":"244","severity":1,"message":"281","line":1,"column":28,"nodeType":"246","messageId":"247","endLine":1,"endColumn":34},{"ruleId":"250","severity":1,"message":"260","line":11,"column":2,"nodeType":"246","endLine":11,"endColumn":11,"suggestions":"282"},{"ruleId":"244","severity":1,"message":"270","line":1,"column":10,"nodeType":"246","messageId":"247","endLine":1,"endColumn":19},{"ruleId":"244","severity":1,"message":"245","line":1,"column":21,"nodeType":"246","messageId":"247","endLine":1,"endColumn":29},{"ruleId":"244","severity":1,"message":"259","line":1,"column":31,"nodeType":"246","messageId":"247","endLine":1,"endColumn":42},{"ruleId":"244","severity":1,"message":"258","line":2,"column":8,"nodeType":"246","messageId":"247","endLine":2,"endColumn":13},{"ruleId":"244","severity":1,"message":"283","line":3,"column":8,"nodeType":"246","messageId":"247","endLine":3,"endColumn":14},{"ruleId":"253","severity":1,"message":"254","line":33,"column":17,"nodeType":"255","endLine":33,"endColumn":59},{"ruleId":"256","severity":1,"message":"257","line":52,"column":13,"nodeType":"255","endLine":52,"endColumn":69},{"ruleId":"250","severity":1,"message":"251","line":14,"column":2,"nodeType":"246","endLine":14,"endColumn":11,"suggestions":"284"},{"ruleId":"244","severity":1,"message":"263","line":43,"column":15,"nodeType":"246","messageId":"247","endLine":43,"endColumn":20},{"ruleId":"253","severity":1,"message":"254","line":63,"column":5,"nodeType":"255","endLine":63,"endColumn":55},{"ruleId":"253","severity":1,"message":"254","line":71,"column":6,"nodeType":"255","endLine":71,"endColumn":83},{"ruleId":"253","severity":1,"message":"254","line":84,"column":6,"nodeType":"255","endLine":84,"endColumn":83},{"ruleId":"244","severity":1,"message":"270","line":1,"column":39,"nodeType":"246","messageId":"247","endLine":1,"endColumn":48},{"ruleId":"256","severity":1,"message":"257","line":42,"column":7,"nodeType":"255","endLine":42,"endColumn":59},{"ruleId":"244","severity":1,"message":"270","line":1,"column":17,"nodeType":"246","messageId":"247","endLine":1,"endColumn":26},{"ruleId":"244","severity":1,"message":"245","line":1,"column":28,"nodeType":"246","messageId":"247","endLine":1,"endColumn":36},{"ruleId":"244","severity":1,"message":"259","line":1,"column":38,"nodeType":"246","messageId":"247","endLine":1,"endColumn":49},{"ruleId":"244","severity":1,"message":"270","line":3,"column":17,"nodeType":"246","messageId":"247","endLine":3,"endColumn":26},{"ruleId":"244","severity":1,"message":"259","line":3,"column":38,"nodeType":"246","messageId":"247","endLine":3,"endColumn":49},{"ruleId":"244","severity":1,"message":"285","line":32,"column":9,"nodeType":"246","messageId":"247","endLine":32,"endColumn":13},{"ruleId":"244","severity":1,"message":"263","line":32,"column":15,"nodeType":"246","messageId":"247","endLine":32,"endColumn":20},{"ruleId":"256","severity":1,"message":"257","line":61,"column":14,"nodeType":"255","endLine":61,"endColumn":59},{"ruleId":"256","severity":1,"message":"257","line":62,"column":14,"nodeType":"255","endLine":62,"endColumn":70},{"ruleId":"244","severity":1,"message":"263","line":35,"column":15,"nodeType":"246","messageId":"247","endLine":35,"endColumn":20},{"ruleId":"244","severity":1,"message":"270","line":1,"column":17,"nodeType":"246","messageId":"247","endLine":1,"endColumn":26},{"ruleId":"244","severity":1,"message":"263","line":22,"column":15,"nodeType":"246","messageId":"247","endLine":22,"endColumn":20},{"ruleId":"250","severity":1,"message":"286","line":27,"column":4,"nodeType":"277","endLine":27,"endColumn":14,"suggestions":"287"},{"ruleId":"250","severity":1,"message":"286","line":32,"column":4,"nodeType":"277","endLine":32,"endColumn":13,"suggestions":"288"},{"ruleId":"272","severity":1,"message":"289","line":41,"column":8,"nodeType":"246","messageId":"274","endLine":41,"endColumn":20},{"ruleId":"256","severity":1,"message":"257","line":120,"column":8,"nodeType":"255","endLine":122,"endColumn":10},{"ruleId":"256","severity":1,"message":"257","line":124,"column":8,"nodeType":"255","endLine":124,"endColumn":51},{"ruleId":"256","severity":1,"message":"257","line":145,"column":8,"nodeType":"255","endLine":145,"endColumn":64},{"ruleId":"256","severity":1,"message":"257","line":146,"column":8,"nodeType":"255","endLine":146,"endColumn":61},"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Redirect' is defined but never used.","'Pong' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setIntraID'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [] as a second argument to the useEffect Hook.",["290"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'axios' is defined but never used.","'useCallback' is defined but never used.","React Hook useEffect contains a call to 'setMyID'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [] as a second argument to the useEffect Hook.",["291"],["292"],"'error' is assigned a value but never used.",["293"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'socket' is defined but never used.","'useEffect' is defined but never used.","Expected '!==' and instead saw '!='.","@typescript-eslint/no-redeclare","'security' is already defined.","redeclared",["294"],"React Hook useEffect has a missing dependency: 'mutate'. Either include it or remove the dependency array.","ArrayExpression",["295"],"'mutate' is defined but never used.","'rtn' is assigned a value but never used.","'useRef' is defined but never used.",["296"],"'useSwr' is defined but never used.",["297"],"'data' is assigned a value but never used.","React Hook useCallback has missing dependencies: 'myID' and 'targetID'. Either include them or remove the dependency array.",["298"],["299"],"'chatRoomName' is already defined.",{"desc":"300","fix":"301"},{"desc":"300","fix":"302"},{"desc":"300","fix":"303"},{"desc":"300","fix":"304"},{"desc":"300","fix":"305"},{"desc":"306","fix":"307"},{"desc":"300","fix":"308"},{"desc":"300","fix":"309"},{"desc":"310","fix":"311"},{"desc":"312","fix":"313"},"Add dependencies array: []",{"range":"314","text":"315"},{"range":"316","text":"315"},{"range":"317","text":"315"},{"range":"318","text":"315"},{"range":"319","text":"315"},"Update the dependencies array to be: [mutate, socket]",{"range":"320","text":"321"},{"range":"322","text":"315"},{"range":"323","text":"315"},"Update the dependencies array to be: [IsFriend, myID, targetID]",{"range":"324","text":"325"},"Update the dependencies array to be: [IsBlock, myID, targetID]",{"range":"326","text":"327"},[930,930],", []",[1591,1591],[603,603],[2480,2480],[1093,1093],[1289,1297],"[mutate, socket]",[542,542],[515,515],[1037,1047],"[IsFriend, myID, targetID]",[1211,1220],"[IsBlock, myID, targetID]"]