[{"/goinfre/jinkim/bye_blackhole/client/src/index.tsx":"1","/goinfre/jinkim/bye_blackhole/client/src/reportWebVitals.js":"2","/goinfre/jinkim/bye_blackhole/client/src/App.tsx":"3","/goinfre/jinkim/bye_blackhole/client/src/Chat/RoomList.tsx":"4","/goinfre/jinkim/bye_blackhole/client/src/Chat/Chat.tsx":"5","/goinfre/jinkim/bye_blackhole/client/src/Lobby/Lobby.tsx":"6","/goinfre/jinkim/bye_blackhole/client/src/Chat/PwRoomModal.tsx":"7","/goinfre/jinkim/bye_blackhole/client/src/Chat/MakeRoomModal.tsx":"8","/goinfre/jinkim/bye_blackhole/client/src/Chat/NoEntryModal.tsx":"9","/goinfre/jinkim/bye_blackhole/client/src/Chat/Loading.tsx":"10","/goinfre/jinkim/bye_blackhole/client/src/Chat/Images.tsx":"11","/goinfre/jinkim/bye_blackhole/client/src/Chat/ChatInput.tsx":"12","/goinfre/jinkim/bye_blackhole/client/src/Chat/ChatLog.tsx":"13","/goinfre/jinkim/bye_blackhole/client/src/Chat/ChatOwnerModal.tsx":"14","/goinfre/jinkim/bye_blackhole/client/src/Lobby/RightList.tsx":"15","/goinfre/jinkim/bye_blackhole/client/src/Chat/UserList.tsx":"16","/goinfre/jinkim/bye_blackhole/client/src/Lobby/GameListModal.tsx":"17","/goinfre/jinkim/bye_blackhole/client/src/Lobby/ChatListModal.tsx":"18","/goinfre/jinkim/bye_blackhole/client/src/images/Images.tsx":"19","/goinfre/jinkim/bye_blackhole/client/src/Chat/UserListModal.tsx":"20","/goinfre/jinkim/bye_blackhole/client/src/Lobby/UserInfoModal.tsx":"21","/goinfre/jinkim/bye_blackhole/client/src/Home/Home.tsx":"22","/goinfre/jinkim/bye_blackhole/client/src/Images/Images.tsx":"23"},{"size":567,"mtime":1625728306077,"results":"24","hashOfConfig":"25"},{"size":362,"mtime":1625728306078,"results":"26","hashOfConfig":"25"},{"size":1266,"mtime":1625729049237,"results":"27","hashOfConfig":"25"},{"size":5059,"mtime":1625729897732,"results":"28","hashOfConfig":"25"},{"size":2571,"mtime":1625729909776,"results":"29","hashOfConfig":"25"},{"size":5196,"mtime":1625729917903,"results":"30","hashOfConfig":"25"},{"size":813,"mtime":1625728306073,"results":"31","hashOfConfig":"25"},{"size":838,"mtime":1625728306073,"results":"32","hashOfConfig":"25"},{"size":632,"mtime":1625728306073,"results":"33","hashOfConfig":"25"},{"size":134,"mtime":1625728306073,"results":"34","hashOfConfig":"25"},{"size":621,"mtime":1625728306073,"results":"35","hashOfConfig":"25"},{"size":1077,"mtime":1625728306073,"results":"36","hashOfConfig":"25"},{"size":3380,"mtime":1625731532728,"results":"37","hashOfConfig":"25"},{"size":941,"mtime":1625728306073,"results":"38","hashOfConfig":"25"},{"size":3985,"mtime":1625731584362,"results":"39","hashOfConfig":"25"},{"size":3260,"mtime":1625731576083,"results":"40","hashOfConfig":"25"},{"size":808,"mtime":1625728306075,"results":"41","hashOfConfig":"25"},{"size":799,"mtime":1625728306075,"results":"42","hashOfConfig":"25"},{"size":976,"mtime":1625729180841,"results":"43","hashOfConfig":"25"},{"size":1369,"mtime":1625728306074,"results":"44","hashOfConfig":"25"},{"size":2265,"mtime":1625728306075,"results":"45","hashOfConfig":"25"},{"size":1150,"mtime":1625731660717,"results":"46","hashOfConfig":"25"},{"size":957,"mtime":1625731645389,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"1vvj4by",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"50"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"50"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"50"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"50"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"50"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"50"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"50"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"50"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/goinfre/jinkim/bye_blackhole/client/src/index.tsx",[],["104","105"],"/goinfre/jinkim/bye_blackhole/client/src/reportWebVitals.js",[],["106","107"],"/goinfre/jinkim/bye_blackhole/client/src/App.tsx",[],"/goinfre/jinkim/bye_blackhole/client/src/Chat/RoomList.tsx",["108","109","110","111","112","113","114"],"import React, {useEffect, useState, useCallback, VFC} from \"react\";\nimport \"./styles/RoomList.scss\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport MakeRoomModal from './MakeRoomModal';\nimport PwRoomModal from './PwRoomModal';\nimport NoEntryModal from './NoEntryModal'\nimport axios from 'axios';\nimport lock_icon from '../Images/private.png'\n\ninterface HomeObj{\n\tuserName:any,\n\troomName:any,\n\tsetRoomName:(value:any)=>void,\n}\n\nconst RoomList : VFC<HomeObj>  = ({ userName, roomName, setRoomName}) => {\n  const handleRoomNameChange = useCallback((e:any) => {\n    setRoomName(e.target.value);\n\tcheckedRoomInfo(e.target.value)\n  }, []);\n\n  //password\n  const [pw, setPw] = useState(\"\");\n  const handPwChange = useCallback((e:any) => {\n    setPw(e.target.value);\n  }, []);\n\n  const [bChecked, setChecked] = useState(false);\n  const checkHandler = useCallback( (e:any) => {\n    setChecked(!bChecked);\n  },[bChecked]);\n\n\n  //makeRoomModal\n  const [makeRoomModalOpen, setMakeRoomModalOpen] = useState(false);\n  const openMakeRoomModal = () => {\n\tsetMakeRoomModalOpen(true);\n  }\n  const closeMakeRoomModal = () => {\n\tsetMakeRoomModalOpen(false);\n  }\n  //pwRoomModal\n  const [pwRoomModalOpen, setPwRoomModalOpen] = useState(false);\n  const openPwRoomModal = () => {\n\tsetPwRoomModalOpen(true);\n  }\n  const closePwRoomModal = () => {\n\tsetPwRoomModalOpen(false);\n\tsetTryAgain(false)\n  }\n  //NoEntryModal\n  const [noEntryModalOpen, setNoEntryModalOpen] = useState(false);\n  const openNoEntryModal = () => {\n\tsetNoEntryModalOpen(true);\n  }\n  const closeNoEntryModal = () => {\n\tsetNoEntryModalOpen(false);\n  }\n\n  sessionStorage.setItem(\"roomName\", roomName);\n\n  const [roomListInfo, setRoomListInfo] = useState<{id:string, password:string, owner_id:string, num:number}[]>();\n\n  useEffect(() => {\n\tgetRoomList()\n  }, [])\n\n  async function makeRoom(){\n\t  userName = userName ? userName : sessionStorage.getItem(\"userName\")\n\t  await axios.post('/RoomList', {id:roomName, password:pw, owner_id:userName});\n  }\n\n  async function getRoomList() {\n\t  const res = await axios.get('/RoomList/list');\n\t  setRoomListInfo(res.data)\n\t  //setRoomListInfo([{id:\"r1\", password:\"1234\", owner_id:\"oid1\", num:1}, {id:\"r1\", password:\"\", owner_id:\"oid1\", num:1}])\n  }\n\n\n  const [roomInfo, setRoomInfo] = useState<{id:String, password:String, owner_id:String, num:number}>();\n\n  function checkedRoomInfo(roomId:string)\n  {\n\t  roomListInfo?.map(room=>{\n\t\t  if (room.id === roomId)\n\t\t  setRoomInfo(room)\n\t\t})\n  }\n\n\n  async function enterRoom()\n  {\n\tawait axios.patch('/RoomList/incNum/' + roomName)\n\tdocument.location.href = '/Chat';\n  }\n\n  async function enterTheRoom() {\n\t  if (roomInfo)\n\t  {\n\t\t\tif (roomInfo.num >= 10) //입장불가 modal\n\t\t\t\topenNoEntryModal()\n\t\t\telse if (roomInfo.num < 10 && roomInfo.password == \"\") //페이지 이동\n\t\t\t\tenterRoom()\n\t\t\telse //비밀번호 입력 modal\n\t\t\t\topenPwRoomModal()\n\t\t}\n\t}\n\n\t//input password check\n\tconst [inputPw, setInputPw] = useState();\n\tconst handleInputPwChange = (e:any) => {\n\t\tsetInputPw(e.target.value);\n\t};\n\n\t// password try again\n\tconst [tryAgain, setTryAgain] = useState(false);\n\n\tasync function enterPrivateRoom() {\n\t\tif (inputPw === roomInfo?.password)\n\t\t\tenterRoom()\n\t\telse\n\t\t\tsetTryAgain(true);\n\t}\n\n\n  return (\n    <div className=\"RoomList-container\">\n\t\t<div className=\"makeRoom-box\">\n\t\t\t<a className=\"btn btn-primary btn-sm makeRoom\" onClick={openMakeRoomModal}><b>방 만들기</b></a>\n\t\t\t<MakeRoomModal open={makeRoomModalOpen} close={closeMakeRoomModal} header=\"방 만들기\" makeRoom={makeRoom}>\n\t\t\t\t<label >\n\t\t\t\t\t<b>&nbsp;방 제목&nbsp;&nbsp;&nbsp;</b>\n\t\t\t\t\t<input onChange={handleRoomNameChange}></input>\n\t\t\t\t</label>\n\t\t\t\t<label>\n\t\t\t\t\t&nbsp;&nbsp;<input type=\"checkbox\" checked={bChecked} onChange={(e) => checkHandler(e)} ></input> private\n\t\t\t\t</label>\n\t\t\t\t{bChecked ?\n\t\t\t\t\t<div className=\"checkbox-pw\">\n\t\t\t\t\t<b>비밀번호&nbsp;</b>\n\t\t\t\t\t<input type=\"password\" onChange={handPwChange}></input>\n\t\t\t\t\t</div>\n\t\t\t\t\t: null\n\t\t\t\t}\n\t\t\t</MakeRoomModal>\n\t\t</div>\n\t\t<div className=\"middle\">\n\t\t\t{roomListInfo?.map(room=>\n\t\t\t\t<label>\n\t\t\t\t\t<input type=\"radio\" name=\"room\" value={room.id} onChange={handleRoomNameChange}/>\n\t\t\t\t\t<div className=\"box\">\n\t\t\t\t\t\t<div>{room.id}</div>\n\t\t\t\t\t\t<span className=\"lock-image\">{room.password != \"\" ? <img src={lock_icon} width=\"20\" height=\"20\"></img> : null}</span>\n\t\t\t\t\t\t<span className=\"room-num\">10/{room.num}</span>\n\t\t\t\t\t</div>\n\t\t\t\t</label>\n\t\t\t)}\n\t\t</div>\n\t\t<div className=\"Join-button\">\n\t\t\t<a className=\"btn btn-dark\" onClick={enterTheRoom}><b>입장하기</b></a>\n\t\t\t<NoEntryModal open={noEntryModalOpen} close={closeNoEntryModal} >\n\t\t\t\t정원이 다 찼습니다.\n\t\t\t</NoEntryModal>\n\t\t\t<PwRoomModal open={pwRoomModalOpen} close={closePwRoomModal} header=\"입장하기\" enterRoom={enterPrivateRoom}>\n\t\t\t\t<label>\n\t\t\t\t\t<b>비밀번호&nbsp;</b>\n\t\t\t\t\t<input type=\"password\" onChange={handleInputPwChange}></input>\n\t\t\t\t\t{tryAgain ? <span className=\"tryAgain\">&nbsp;다시 시도하십시오</span> : null}\n\t\t\t\t</label>\n\t\t\t</PwRoomModal>\n\t\t</div>\n    </div>\n  );\n};\n\nexport default RoomList;","/goinfre/jinkim/bye_blackhole/client/src/Chat/Chat.tsx",["115","116"],"import React, { useEffect, useState } from \"react\";\nimport ChatInput from \"./ChatInput\";\nimport ChatLog from \"./ChatLog\";\nimport Loading from \"./Loading\";\nimport UserList from \"./UserList\";\nimport RightList from \"../Lobby/RightList\";\nimport \"./styles/Chat.scss\"\nimport setting from '../Images/setting.png'\nimport ChatOwnerModal from \"./ChatOwnerModal\";\n\nconst socketIOClient = require('socket.io-client')\n\ninterface chatObj{\n\troomName: any,\n\tuserName: any,\n\ticon: any\n}\n\nconst Chat = ({ roomName, userName, icon }: chatObj) => {\n\tconst myInfo = {\n\t\troomName: roomName ? roomName : sessionStorage.getItem(\"roomName\"),\n\t\tuserName: userName ? userName : sessionStorage.getItem(\"userName\"),\n\t\ticon: icon ? icon : sessionStorage.getItem(\"icon\"),\n\t};\n\n\tconst [currentSocket, setCurrentSocket] = useState(socketIOClient());\n\n\tuseEffect(() => {\n\t\tsetCurrentSocket(socketIOClient(\"http://localhost:8080\"));\n\t}, []);\n\n\tif (currentSocket) {\n\t\tcurrentSocket.on(\"connect\", () => {\n\t\t\tcurrentSocket.emit(\"join\", myInfo);\n\t\t});\n\t}\n\n\tconst [RoomInfo, setRoomInfo] = useState<{id:string, num:number, owner_id:string, pwd:string}>({id:'room1', num:7, owner_id:'jinkim', pwd:'asdf'})\n\n\t//chat owner modal\n\tconst [ChatOwnerModalState, setChatOwnerModalState] = useState(false);\n\tconst openChatOwnerModal = () => {\n\t\tsetChatOwnerModalState(true);\n\t}\n\tconst closeChatOwnerModal = () => {\n\t\tsetChatOwnerModalState(false);\n\t}\n\n\treturn (\n\t<div id=\"App-Container\">\n\t\t{currentSocket ? (\n\t\t<>\n\t\t<span className=\"App-Left\">\n\t\t\t<div id=\"chat-container\">\n\t\t\t<div className=\"chat-top\">\n\t\t\t\t<span className=\"RoomInfo-num\">{RoomInfo.num}</span>\n\t\t\t\t<span>{RoomInfo.id}</span>\n\t\t\t\t{'jinkim' === RoomInfo.owner_id ? \n\t\t\t\t\t<button className=\"setting-btn\" onClick={openChatOwnerModal}>\n\t\t\t\t\t\t<img src={setting} width=\"30\" height=\"30\"></img>\n\t\t\t\t\t</button>\n\t\t\t\t\t: null\n\t\t\t\t}\n\t\t\t</div>\n\t\t\t<ChatOwnerModal open={ChatOwnerModalState} close={closeChatOwnerModal} chatRoomID={RoomInfo.id}pwd={RoomInfo.pwd}></ChatOwnerModal>\n\t\t\t<div className=\"chat-bottom\">\n\t\t\t\t<span className=\"left-chatLog\">\n\t\t\t\t\t<div className=\"chatLog-top\">\n\t\t\t\t\t\t<ChatLog userName={userName} socket={currentSocket}></ChatLog>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"chatLog-bottom\">\n\t\t\t\t\t\t<ChatInput userName={userName} socket={currentSocket}></ChatInput>\n\t\t\t\t\t</div>\n\t\t\t\t</span>\n\t\t\t\t<span className=\"right-chatUser\">\n\t\t\t\t\t<UserList socket={currentSocket}></UserList>\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t\t</div>\n\t\t</span>\n\t\t<span className=\"App-Right\">\n\t\t\t\t<RightList />\n\t\t</span>\n\t\t</>\n\t\t) : (\n\t\t  <Loading></Loading>\n\t\t)}\n\t</div>\n  );\n};\n\nexport default Chat;\n","/goinfre/jinkim/bye_blackhole/client/src/Lobby/Lobby.tsx",["117","118","119","120","121","122","123","124","125","126"],"import axios from \"axios\";\nimport {useEffect, useState, useCallback} from \"react\";\nimport \"./styles/Lobby.scss\"\nimport plusbtn from \"../Images/plusbutton.png\"\nimport lock_icon from '../Images/private.png'\nimport speed from '../Images/speed.png'\nimport RightList from './RightList'\nimport GameListModal from './GameListModal'\nimport ChatListModal from './ChatListModal'\n\n\nconst Lobby = () => {\n\n\tconst [gameList, setGameList] = useState<{player1:string, player2:string, mode:string}[]>([{player1:\"inkimasasdfasdfasdf\", player2:\"jachoi\", mode:\"speed\"}, {player1:\"dshon\", player2:\"taekkim\", mode:\"normal\"},{player1:\"dshon\", player2:\"taekkim\", mode:\"speed\"}, {player1:\"jinkim\", player2:\"jachoi\", mode:\"speed\"}, {player1:\"dshon\", player2:\"taekkim\", mode:\"normal\"}]);\n\n\tconst [chatList, setChatList] = useState<{id:string, password:string, owner_id:string, num:number}[]>([{id:\"chat_r1asdfasdfasdfa\", password:\"\", owner_id:\"oid1\", num:5}, {id:\"chat_r2\", password:\"1234\", owner_id:\"oid1\", num:1}]);\n\tuseEffect(() => {\n\t\tasync function get(){\n\t\t\t//axios.get('')\n\t\t\t//.then((res) => setGameList(res.data))\n\t\t\t//.catch((err)=> console.log(err))\n\n\t\t\t//const res = await axios.get('')\n\t\t\t//setChatList(res.data)\n\t\t}\n\t\tget();\n\t})\n\n\n\t//modal\n\t//game list modal\n\tconst [GameListModalState, setGameListModalState] = useState(false);\n\tconst openGameListModal = () => {\n\t\tsetGameListModalState(true);\n\t}\n\tconst closeGameListModal = () => {\n\t\tsetGameListModalState(false);\n\t}\n\tasync function makeNewGame(){\n\t\t//userName = userName ? userName : sessionStorage.getItem(\"userName\")\n\t\t//await axios.post('/RoomList', {id:roomName, password:pw, owner_id:userName});\n\t}\n\n\t//chat list modal\n\tconst [ChatListModalState, setChatListModalState] = useState(false);\n\tconst openChatListModal = () => {\n\t\tsetChatListModalState(true);\n\t}\n\tconst closeChatListModal = () => {\n\t\tsetChatListModalState(false);\n\t}\n\tasync function makeNewChat(){\n\t\t//userName = userName ? userName : sessionStorage.getItem(\"userName\")\n\t\t//await axios.post('/RoomList', {id:roomName, password:pw, owner_id:userName});\n\t}\n\n\tconst [NewRoomName, setNewRoomName] = useState(\"\");\n\t//const [, setRoomName] = useState(\"\");\n\tconst handleRoomNameChange = useCallback((e:any) => {\n\t\tsetNewRoomName(e.target.value);\n\t\t//checkedRoomInfo(e.target.value)\n\t}, []);\n\t// private room checkbox\n\tconst [IsPrivateRoom, setIsPrivateRoom] = useState(false);\n\tconst PrivateRoomCheckHandler = useCallback( (e:any) => {\n\t\tsetIsPrivateRoom(!IsPrivateRoom);\n\t},[IsPrivateRoom]);\n\t// room pwd\n\tconst [RoomPWD, setRoomPWD] = useState(\"\");\n\tconst handelRoomPWD = useCallback((e:any) => {\n\t\tsetRoomPWD(e.target.value)\n\t}, []);\n\n\n\n\treturn (\n\t<div id=\"App-Container\">\n\t\t<span className=\"App-Left\">\n\t\t\t<div className=\"list-box\">\n\t\t\t\t<div className=\"listName\">\n\t\t\t\t\tGame\n\t\t\t\t\t<button type=\"button\" className=\"plusbtn\" onClick={openGameListModal}>\n\t\t\t\t\t\t<img src={plusbtn} width=\"30\" height=\"30\"/>\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t\t<GameListModal open={GameListModalState} close={closeGameListModal} header=\"New Game\" makeRoom={makeNewGame}>\n\t\t\t\t\t<span><input type=\"radio\" name=\"speed\" value=\"5\" /> easy &nbsp;&nbsp;</span>\n\t\t\t\t\t<span><input type=\"radio\" name=\"speed\" value=\"10\" /> normal &nbsp;&nbsp;</span>\n\t\t\t\t\t<span><input type=\"radio\" name=\"speed\" value=\"20\" /> hard </span>\n\t\t\t\t</GameListModal>\n\t\t\t\t<hr/>\n\n\t\t\t\t{gameList?.map(gameRoom=>\n\t\t\t\t\t<button type=\"button\" className=\"roomList\">\n\t\t\t\t\t\t<span className=\"roomList-left\">\n\t\t\t\t\t\t\t<div className=\"roomList-icon\">\n\t\t\t\t\t\t\t{gameRoom.mode === \"normal\" ? 'N' : <img src={speed} width=\"30\" height=\"30\"/>}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<span className=\"roomList-right\">\n\t\t\t\t\t\t\t<div className=\"player\">{gameRoom.player1}</div>\n\t\t\t\t\t\t\t<div>vs</div>\n\t\t\t\t\t\t\t<div className=\"player\">{gameRoom.player2}</div>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</button>\n\t\t\t\t)}\n\t\t\t</div>\n\n\t\t\t<div className=\"list-box\">\n\t\t\t\t<div className=\"listName\">\n\t\t\t\t\tChat<button type=\"button\" className=\"plusbtn\" onClick={openChatListModal}><img src={plusbtn} width=\"30\" height=\"30\"/></button>\n\t\t\t\t</div>\n\t\t\t\t<ChatListModal open={ChatListModalState} close={closeChatListModal} header=\"New Chatting Room\" makeRoom={makeNewChat}>\n\t\t\t\t\t<label >\n\t\t\t\t\t\t<b>Room Name:&nbsp;</b>\n\t\t\t\t\t\t<input onChange={handleRoomNameChange}></input>\n\t\t\t\t\t</label>\n\t\t\t\t\t<label>\n\t\t\t\t\t\t&nbsp;&nbsp;<input type=\"checkbox\" checked={IsPrivateRoom} onChange={(e) => PrivateRoomCheckHandler(e)} ></input> private\n\t\t\t\t\t</label>\n\t\t\t\t\t{IsPrivateRoom ?\n\t\t\t\t\t\t<div className=\"checkbox-pwd\">\n\t\t\t\t\t\t<b>&nbsp;&nbsp;&nbsp;&nbsp;password:&nbsp;</b>\n\t\t\t\t\t\t<input type=\"password\" onChange={handelRoomPWD}></input>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t: null\n\t\t\t\t\t}\n\t\t\t\t</ChatListModal>\n\t\t\t\t<hr/>\n\n\t\t\t\t{chatList?.map(chatRoom=>\n\t\t\t\t\t<button type=\"button\" className=\"roomList\">\n\t\t\t\t\t<span className=\"roomList-left\">\n\t\t\t\t\t\t<div className=\"roomList-num\">{chatRoom.num}</div>\n\t\t\t\t\t</span>\n\t\t\t\t\t<span className=\"roomList-right\">\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t{chatRoom.password != \"\" ? <img src={lock_icon} width=\"20\" height=\"20\"></img> : null}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"player\">\n\t\t\t\t\t\t\t{chatRoom.id}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</span>\n\t\t\t\t\t</button>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t</span>\n\t\t<span className=\"App-Right\">\n\t\t\t<RightList />\n\t\t</span>\n\t</div>\n\t)\n}\n\nexport default Lobby;","/goinfre/jinkim/bye_blackhole/client/src/Chat/PwRoomModal.tsx",["127"],"import React from 'react';\nimport \"./styles/MakeRoomModal.css\";\n\nconst PwRoomModal = ( props: any ) => {\n    const { open, close, header, enterRoom } = props;\n\n    return (\n        <div className={ open ? 'openMakeRoomModal MakeRoomModal' : 'MakeRoomModal' }>\n            { open ? (\n                <section>\n                    <header>\n                        {header}\n                        <button className=\"close\" onClick={close}> &times; </button>\n                    </header>\n                    <main>\n                        {props.children}\n                    </main>\n                    <footer>\n\t\t\t\t\t\t<a className=\"btn btn-dark\" onClick={enterRoom}><b>확인</b></a>\n                    </footer>\n                </section>\n            ) : null }\n        </div>\n    )\n}\n\nexport default PwRoomModal","/goinfre/jinkim/bye_blackhole/client/src/Chat/MakeRoomModal.tsx",[],"/goinfre/jinkim/bye_blackhole/client/src/Chat/NoEntryModal.tsx",[],"/goinfre/jinkim/bye_blackhole/client/src/Chat/Loading.tsx",[],"/goinfre/jinkim/bye_blackhole/client/src/Chat/Images.tsx",[],"/goinfre/jinkim/bye_blackhole/client/src/Chat/ChatInput.tsx",["128","129"],"import React, { useRef, useState } from \"react\";\nimport \"./styles/ChatInput.css\";\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport {Button} from \"react-bootstrap\";\n\nconst socketIOClient = require('socket.io-client')\n\n\nconst ChatInput = ({ userName, socket }: any) => {\n  const [chatMessage, setChatMessage] = useState(\"\");\n\n  const handleSubmit = (e:any) => {\n    e.preventDefault();\n    socket.emit(\"onSend\", {\n      userName: userName ? userName : sessionStorage.getItem(\"userName\"),\n      msg: chatMessage,\n      timeStamp: new Date().toLocaleTimeString(),\n    });\n    setChatMessage(\"\");\n  };\n\n  const onChatMessageChange = (e:any) => {\n    setChatMessage(e.target.value);\n  };\n\n  return (\n    <div>\n      <form className=\"ChatInput-form\" onSubmit={handleSubmit}>\n        <input type=\"text\" className=\"form-control\"\n          placeholder=\"Enter message\"\n          value={chatMessage}\n          onChange={onChatMessageChange}\n        ></input>\n        <Button type=\"button\" className=\"btn btn-sm\">send</Button>\n      </form>\n    </div>\n  );\n};\n\nexport default ChatInput;","/goinfre/jinkim/bye_blackhole/client/src/Chat/ChatLog.tsx",["130","131"],"/goinfre/jinkim/bye_blackhole/client/src/Chat/ChatOwnerModal.tsx",["132","133","134"],"import axios from 'axios';\nimport React, {useState, useCallback} from 'react';\nimport \"../Lobby/styles/Modal.scss\";\n\nconst ChatOwnerModal = ( props: any ) => {\n\tconst { open, close, chatRoomID, pwd} = props;\n\n\tasync function changePWD(){\n\t\t//await axios.post('chat/' + chatRoomID + '/admin/')\n\t\tclose();\n\t}\n\n\tconst [RoomPWD, setRoomPWD] = useState(pwd);\n\tconst handelRoomPWD = useCallback((e:any) => {\n\t\tsetRoomPWD(e.target.value)\n\t}, []);\n\n\treturn (\n\t\t<div className={ open ? 'openModal Modal' : 'Modal' }>\n\t\t\t{ open ? (\n\t\t\t\t<section>\n\t\t\t\t\t<header>\n\t\t\t\t\t\tChange Password\n\t\t\t\t\t\t<button className=\"close\" onClick={close}> &times; </button>\n\t\t\t\t\t</header>\n\t\t\t\t\t<main>\n\t\t\t\t\t\tpassword:&nbsp;\n\t\t\t\t\t\t<input onChange={handelRoomPWD} value={RoomPWD}></input>\n\t\t\t\t\t</main>\n\t\t\t\t\t<footer>\n\t\t\t\t\t\t<a className=\"btn btn-primary\" onClick={changePWD}><b>Change</b></a>\n\t\t\t\t\t</footer>\n\t\t\t\t</section>\n\t\t\t) : null }\n\t\t</div>\n\t)\n}\n\nexport default ChatOwnerModal","/goinfre/jinkim/bye_blackhole/client/src/Lobby/RightList.tsx",["135","136","137","138","139","140","141","142","143"],"/goinfre/jinkim/bye_blackhole/client/src/Chat/UserList.tsx",["144","145","146","147","148","149","150"],"/goinfre/jinkim/bye_blackhole/client/src/Lobby/GameListModal.tsx",[],"/goinfre/jinkim/bye_blackhole/client/src/Lobby/ChatListModal.tsx",[],"/goinfre/jinkim/bye_blackhole/client/src/images/Images.tsx",["151","152","153","154","155","156"],"/goinfre/jinkim/bye_blackhole/client/src/Chat/UserListModal.tsx",["157","158"],"import axios from 'axios';\nimport React from 'react';\nimport \"../Lobby/styles/UserInfoModal.scss\";\n\nconst UserListModal = ( props: any ) => {\n\tconst { open, close, targetID} = props;\n\n\tasync function kickUser(){\n\t\t//await axios.post('chat/' + chatRoomID + '/kick/' + targetID)\n\t\t\n\t}\n\n\treturn (\n\t\t<div className={ open ? 'openModal Modal' : 'Modal' }>\n\t\t\t{ open ? (\n\t\t\t\t<section>\n\t\t\t\t\t<div className=\"head\">\n\t\t\t\t\t\t<button className=\"close\" onClick={close}> &times; </button>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"content\">\n\t\t\t\t\t\t{targetID}\n\t\t\t\t\t</div>\n\t\t\t\t\t<hr/>\n\t\t\t\t\t<div className='bottom'>\n\t\t\t\t\t\t<span className=\"onoffbtn\">\n\t\t\t\t\t\t\t<input type=\"checkbox\" id=\"switch1\" name=\"switch1\" className=\"input__on-off\"/>\n\t\t\t\t\t\t\t<label htmlFor=\"switch1\" className=\"label__on-off\">\n\t\t\t\t\t\t\t\t<span className=\"marble\"></span>\n\t\t\t\t\t\t\t\t<span className=\"on\">Mute</span>\n\t\t\t\t\t\t\t\t<span className=\"off\">Unmute</span>\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t<input type=\"checkbox\" id=\"switch2\" name=\"switch2\" className=\"input__on-off\"/>\n\t\t\t\t\t\t\t<label htmlFor=\"switch2\" className=\"label__on-off\">\n\t\t\t\t\t\t\t\t<span className=\"marble\"></span>\n\t\t\t\t\t\t\t\t<span className=\"on\">Ban</span>\n\t\t\t\t\t\t\t\t<span className=\"off\">UnBan</span>\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<div><a className=\"btn button\" onClick={kickUser}><b>Kick</b></a></div>\n\t\t\t\t\t</div>\n\t\t\t\t</section>\n\t\t\t) : null }\n\t\t</div>\n\t)\n}\n\nexport default UserListModal","/goinfre/jinkim/bye_blackhole/client/src/Lobby/UserInfoModal.tsx",["159"],"import React from 'react';\nimport \"./styles/UserInfoModal.scss\";\n\ninterface Iprops {\n\topen: any,\n\tclose: any,\n\tmyID: string,\n\ttargetID: string,\n\tWinLoseNum: {win:number, lose:number},\n\tMatchHistory: {id:string, result:boolean}[],\n}\n\nconst UserInfoModal = ( props: Iprops ) => {\n\tconst { open, close, myID, targetID, WinLoseNum, MatchHistory} = props;\n\n\treturn (\n\t\t<div className={ open ? 'openModal Modal' : 'Modal' }>\n\t\t\t{ open ? (\n\t\t\t\t<section>\n\t\t\t\t\t<div className=\"head\">\n\t\t\t\t\t\t<button className=\"close\" onClick={close}> &times; </button>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"content\">\n\t\t\t\t\t\t<div className=\"header\">\n\t\t\t\t\t\t\t<div className=\"name\">{targetID}</div>\n\t\t\t\t\t\t\t<span className=\"num win-color\">W {WinLoseNum.win}</span>\n\t\t\t\t\t\t\t<span className=\"num lose-color\"> &nbsp;&nbsp; L {WinLoseNum.lose}</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<hr/>\n\t\t\t\t\t\t<div className=\"main\">\n\t\t\t\t\t\t\t{MatchHistory?.map(match=>\n\t\t\t\t\t\t\t<div className={match.result ? 'matchHistory win-backColor' : 'matchHistory lose-backColor'}>\n\t\t\t\t\t\t\t\t<span className='match-left'>{match.id}</span>\n\t\t\t\t\t\t\t\t<span className={match.result ? 'match-right win-color' : 'match-right lose-color'}>{match.result ? 'Win' : 'Lose'}</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"bottom\">\n\t\t\t\t\t{myID === targetID ? \n\t\t\t\t\t\t<a className=\"btn button\" onClick={()=> document.location.href = '/Admin/' + targetID}><b>Admin</b></a> :\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t<span className=\"onoffbtn\">\n\t\t\t\t\t\t\t<input type=\"checkbox\" id=\"switch1\" name=\"switch1\" className=\"input__on-off\"/>\n\t\t\t\t\t\t\t<label htmlFor=\"switch1\" className=\"label__on-off\">\n\t\t\t\t\t\t\t\t<span className=\"marble\"></span>\n\t\t\t\t\t\t\t\t<span className=\"on\">Friend</span>\n\t\t\t\t\t\t\t\t<span className=\"off\">Unfriend</span>\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<span className=\"onoffbtn\">\n\t\t\t\t\t\t\t<input type=\"checkbox\" id=\"switch2\" name=\"switch2\" className=\"input__on-off\"/>\n\t\t\t\t\t\t\t<label htmlFor=\"switch2\" className=\"label__on-off\">\n\t\t\t\t\t\t\t\t<span className=\"marble\"></span>\n\t\t\t\t\t\t\t\t<span className=\"on\">Unblock</span>\n\t\t\t\t\t\t\t\t<span className=\"off\">Block</span>\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<div><a className=\"btn button\" href=\"/Game\"><b>Game</b></a></div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t}\n\t\t\t\t\t</div>\n\t\t\t\t</section>\n\t\t\t) : null }\n\t\t</div>\n\t)\n}\n\nexport default UserInfoModal","/goinfre/jinkim/bye_blackhole/client/src/Home/Home.tsx",["160"],"/goinfre/jinkim/bye_blackhole/client/src/Images/Images.tsx",["161","162","163","164","165","166"],{"ruleId":"167","replacedBy":"168"},{"ruleId":"169","replacedBy":"170"},{"ruleId":"167","replacedBy":"168"},{"ruleId":"169","replacedBy":"170"},{"ruleId":"171","severity":1,"message":"172","line":20,"column":6,"nodeType":"173","endLine":20,"endColumn":8,"suggestions":"174"},{"ruleId":"175","severity":1,"message":"176","line":84,"column":26,"nodeType":"177","messageId":"178","endLine":84,"endColumn":28},{"ruleId":"179","severity":1,"message":"180","line":102,"column":52,"nodeType":"181","messageId":"182","endLine":102,"endColumn":54},{"ruleId":"183","severity":1,"message":"184","line":129,"column":4,"nodeType":"185","endLine":129,"endColumn":79},{"ruleId":"179","severity":1,"message":"186","line":153,"column":51,"nodeType":"181","messageId":"182","endLine":153,"endColumn":53},{"ruleId":"187","severity":1,"message":"188","line":153,"column":59,"nodeType":"185","endLine":153,"endColumn":103},{"ruleId":"183","severity":1,"message":"184","line":160,"column":4,"nodeType":"185","endLine":160,"endColumn":55},{"ruleId":"189","severity":1,"message":"190","line":38,"column":19,"nodeType":"191","messageId":"192","endLine":38,"endColumn":30},{"ruleId":"187","severity":1,"message":"188","line":60,"column":7,"nodeType":"185","endLine":60,"endColumn":49},{"ruleId":"189","severity":1,"message":"193","line":1,"column":8,"nodeType":"191","messageId":"192","endLine":1,"endColumn":13},{"ruleId":"189","severity":1,"message":"194","line":14,"column":19,"nodeType":"191","messageId":"192","endLine":14,"endColumn":30},{"ruleId":"189","severity":1,"message":"195","line":16,"column":19,"nodeType":"191","messageId":"192","endLine":16,"endColumn":30},{"ruleId":"189","severity":1,"message":"196","line":57,"column":9,"nodeType":"191","messageId":"192","endLine":57,"endColumn":20},{"ruleId":"189","severity":1,"message":"197","line":69,"column":9,"nodeType":"191","messageId":"192","endLine":69,"endColumn":16},{"ruleId":"187","severity":1,"message":"188","line":83,"column":7,"nodeType":"185","endLine":83,"endColumn":50},{"ruleId":"187","severity":1,"message":"188","line":97,"column":44,"nodeType":"185","endLine":97,"endColumn":85},{"ruleId":"187","severity":1,"message":"188","line":111,"column":80,"nodeType":"185","endLine":111,"endColumn":123},{"ruleId":"179","severity":1,"message":"186","line":138,"column":27,"nodeType":"181","messageId":"182","endLine":138,"endColumn":29},{"ruleId":"187","severity":1,"message":"188","line":138,"column":35,"nodeType":"185","endLine":138,"endColumn":79},{"ruleId":"183","severity":1,"message":"184","line":19,"column":7,"nodeType":"185","endLine":19,"endColumn":55},{"ruleId":"189","severity":1,"message":"198","line":1,"column":17,"nodeType":"191","messageId":"192","endLine":1,"endColumn":23},{"ruleId":"189","severity":1,"message":"199","line":6,"column":7,"nodeType":"191","messageId":"192","endLine":6,"endColumn":21},{"ruleId":"171","severity":1,"message":"200","line":12,"column":15,"nodeType":"201","endLine":12,"endColumn":71},{"ruleId":"187","severity":1,"message":"188","line":37,"column":12,"nodeType":"185","endLine":37,"endColumn":87},{"ruleId":"189","severity":1,"message":"193","line":1,"column":8,"nodeType":"191","messageId":"192","endLine":1,"endColumn":13},{"ruleId":"189","severity":1,"message":"202","line":6,"column":23,"nodeType":"191","messageId":"192","endLine":6,"endColumn":33},{"ruleId":"183","severity":1,"message":"184","line":31,"column":7,"nodeType":"185","endLine":31,"endColumn":58},{"ruleId":"189","severity":1,"message":"193","line":1,"column":8,"nodeType":"191","messageId":"192","endLine":1,"endColumn":13},{"ruleId":"189","severity":1,"message":"203","line":10,"column":22,"nodeType":"191","messageId":"192","endLine":10,"endColumn":36},{"ruleId":"189","severity":1,"message":"204","line":12,"column":21,"nodeType":"191","messageId":"192","endLine":12,"endColumn":34},{"ruleId":"189","severity":1,"message":"205","line":14,"column":21,"nodeType":"191","messageId":"192","endLine":14,"endColumn":34},{"ruleId":"189","severity":1,"message":"206","line":31,"column":21,"nodeType":"191","messageId":"192","endLine":31,"endColumn":34},{"ruleId":"189","severity":1,"message":"207","line":32,"column":23,"nodeType":"191","messageId":"192","endLine":32,"endColumn":38},{"ruleId":"187","severity":1,"message":"188","line":61,"column":4,"nodeType":"185","endLine":61,"endColumn":47},{"ruleId":"187","severity":1,"message":"188","line":68,"column":5,"nodeType":"185","endLine":68,"endColumn":82},{"ruleId":"187","severity":1,"message":"188","line":79,"column":5,"nodeType":"185","endLine":79,"endColumn":82},{"ruleId":"189","severity":1,"message":"208","line":1,"column":17,"nodeType":"191","messageId":"192","endLine":1,"endColumn":28},{"ruleId":"189","severity":1,"message":"193","line":6,"column":8,"nodeType":"191","messageId":"192","endLine":6,"endColumn":13},{"ruleId":"189","severity":1,"message":"209","line":11,"column":17,"nodeType":"191","messageId":"192","endLine":11,"endColumn":26},{"ruleId":"171","severity":1,"message":"210","line":22,"column":5,"nodeType":"173","endLine":22,"endColumn":13,"suggestions":"211"},{"ruleId":"175","severity":1,"message":"212","line":26,"column":37,"nodeType":"177","messageId":"213","endLine":26,"endColumn":39},{"ruleId":"187","severity":1,"message":"188","line":76,"column":13,"nodeType":"185","endLine":76,"endColumn":84},{"ruleId":"187","severity":1,"message":"188","line":78,"column":8,"nodeType":"185","endLine":78,"endColumn":125},{"ruleId":"179","severity":1,"message":"180","line":10,"column":18,"nodeType":"181","messageId":"182","endLine":10,"endColumn":20},{"ruleId":"179","severity":1,"message":"180","line":12,"column":23,"nodeType":"181","messageId":"182","endLine":12,"endColumn":25},{"ruleId":"179","severity":1,"message":"180","line":14,"column":27,"nodeType":"181","messageId":"182","endLine":14,"endColumn":29},{"ruleId":"179","severity":1,"message":"180","line":16,"column":24,"nodeType":"181","messageId":"182","endLine":16,"endColumn":26},{"ruleId":"179","severity":1,"message":"180","line":18,"column":21,"nodeType":"181","messageId":"182","endLine":18,"endColumn":23},{"ruleId":"179","severity":1,"message":"180","line":20,"column":23,"nodeType":"181","messageId":"182","endLine":20,"endColumn":25},{"ruleId":"189","severity":1,"message":"193","line":1,"column":8,"nodeType":"191","messageId":"192","endLine":1,"endColumn":13},{"ruleId":"183","severity":1,"message":"184","line":39,"column":12,"nodeType":"185","endLine":39,"endColumn":57},{"ruleId":"183","severity":1,"message":"184","line":41,"column":7,"nodeType":"185","endLine":41,"endColumn":94},{"ruleId":"187","severity":1,"message":"188","line":33,"column":4,"nodeType":"185","endLine":33,"endColumn":63},{"ruleId":"179","severity":1,"message":"180","line":9,"column":18,"nodeType":"181","messageId":"182","endLine":9,"endColumn":20},{"ruleId":"179","severity":1,"message":"180","line":11,"column":23,"nodeType":"181","messageId":"182","endLine":11,"endColumn":25},{"ruleId":"179","severity":1,"message":"180","line":13,"column":27,"nodeType":"181","messageId":"182","endLine":13,"endColumn":29},{"ruleId":"179","severity":1,"message":"180","line":15,"column":24,"nodeType":"181","messageId":"182","endLine":15,"endColumn":26},{"ruleId":"179","severity":1,"message":"180","line":17,"column":21,"nodeType":"181","messageId":"182","endLine":17,"endColumn":23},{"ruleId":"179","severity":1,"message":"180","line":19,"column":23,"nodeType":"181","messageId":"182","endLine":19,"endColumn":25},"no-native-reassign",["214"],"no-negated-in-lhs",["215"],"react-hooks/exhaustive-deps","React Hook useCallback has missing dependencies: 'checkedRoomInfo' and 'setRoomName'. Either include them or remove the dependency array. If 'setRoomName' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["216"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","Expected '!==' and instead saw '!='.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","@typescript-eslint/no-unused-vars","'setRoomInfo' is assigned a value but never used.","Identifier","unusedVar","'axios' is defined but never used.","'setGameList' is assigned a value but never used.","'setChatList' is assigned a value but never used.","'NewRoomName' is assigned a value but never used.","'RoomPWD' is assigned a value but never used.","'useRef' is defined but never used.","'socketIOClient' is assigned a value but never used.","Assignments to the 'userName' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","ConditionalExpression","'chatRoomID' is assigned a value but never used.","'setFriendsList' is assigned a value but never used.","'setOthersList' is assigned a value but never used.","'setMyChatList' is assigned a value but never used.","'setWinLoseNum' is assigned a value but never used.","'setMatchHistory' is assigned a value but never used.","'useCallback' is defined but never used.","'setMyInfo' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'userSorting'. Either include it or remove the dependency array.",["217"],"Array.prototype.find() expects a value to be returned at the end of arrow function.","expectedAtEnd","no-global-assign","no-unsafe-negation",{"desc":"218","fix":"219"},{"desc":"220","fix":"221"},"Update the dependencies array to be: [checkedRoomInfo, setRoomName]",{"range":"222","text":"223"},"Update the dependencies array to be: [socket, userSorting]",{"range":"224","text":"225"},[636,638],"[checkedRoomInfo, setRoomName]",[939,947],"[socket, userSorting]"]