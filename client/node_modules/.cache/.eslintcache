[{"/goinfre/jinkim/bye_blackhole/client/src/index.tsx":"1","/goinfre/jinkim/bye_blackhole/client/src/reportWebVitals.js":"2","/goinfre/jinkim/bye_blackhole/client/src/App.tsx":"3","/goinfre/jinkim/bye_blackhole/client/src/Chat/Chat.tsx":"4","/goinfre/jinkim/bye_blackhole/client/src/Chat/Waiting.tsx":"5","/goinfre/jinkim/bye_blackhole/client/src/Chat/Home.tsx":"6","/goinfre/jinkim/bye_blackhole/client/src/Chat/RoomList.tsx":"7","/goinfre/jinkim/bye_blackhole/client/src/Chat/ChatInput.tsx":"8","/goinfre/jinkim/bye_blackhole/client/src/Chat/ChatLog.tsx":"9","/goinfre/jinkim/bye_blackhole/client/src/Chat/UserList.tsx":"10","/goinfre/jinkim/bye_blackhole/client/src/Chat/PwRoomModal.tsx":"11","/goinfre/jinkim/bye_blackhole/client/src/Chat/Loading.tsx":"12","/goinfre/jinkim/bye_blackhole/client/src/Chat/NoEntryModal.tsx":"13","/goinfre/jinkim/bye_blackhole/client/src/Chat/MakeRoomModal.tsx":"14","/goinfre/jinkim/bye_blackhole/client/src/Chat/Images.tsx":"15"},{"size":567,"mtime":1624940631746,"results":"16","hashOfConfig":"17"},{"size":362,"mtime":1624940631746,"results":"18","hashOfConfig":"17"},{"size":1338,"mtime":1624940631742,"results":"19","hashOfConfig":"17"},{"size":1508,"mtime":1624940631742,"results":"20","hashOfConfig":"17"},{"size":5086,"mtime":1624966187034,"results":"21","hashOfConfig":"17"},{"size":1137,"mtime":1624940631743,"results":"22","hashOfConfig":"17"},{"size":5059,"mtime":1624941954617,"results":"23","hashOfConfig":"17"},{"size":1107,"mtime":1624940631742,"results":"24","hashOfConfig":"17"},{"size":1726,"mtime":1624940631742,"results":"25","hashOfConfig":"17"},{"size":859,"mtime":1624940631743,"results":"26","hashOfConfig":"17"},{"size":813,"mtime":1624940631743,"results":"27","hashOfConfig":"17"},{"size":134,"mtime":1624940631743,"results":"28","hashOfConfig":"17"},{"size":632,"mtime":1624940631743,"results":"29","hashOfConfig":"17"},{"size":838,"mtime":1624940631743,"results":"30","hashOfConfig":"17"},{"size":621,"mtime":1624940631743,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1vvj4by",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"/goinfre/jinkim/bye_blackhole/client/src/index.tsx",[],["70","71"],"/goinfre/jinkim/bye_blackhole/client/src/reportWebVitals.js",[],["72","73"],"/goinfre/jinkim/bye_blackhole/client/src/App.tsx",[],"/goinfre/jinkim/bye_blackhole/client/src/Chat/Chat.tsx",[],"/goinfre/jinkim/bye_blackhole/client/src/Chat/Waiting.tsx",["74","75","76","77","78","79","80","81","82","83","84","85","86","87"],"/goinfre/jinkim/bye_blackhole/client/src/Chat/Home.tsx",["88"],"import React from \"react\";\nimport \"./styles/Home.css\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport images from './Images';\n\ninterface HomeObj{\n\tuserName:any,\n\tsetUserName:(value:any)=>void,\n\ticon:any,\n\tsetIcon:(value:any)=>void\n}\n\nconst Home = ({ userName, setUserName, icon, setIcon }: HomeObj) => {\n  const handleUserNameChange = (e:any) => {\n    setUserName(e.target.value);\n  };\n  const handleIconChange = (e:any) => {\n    setIcon(e.target.value);\n  };\n\n  sessionStorage.setItem(\"userName\", userName);\n  sessionStorage.setItem(\"icon\", icon);\n\n  return (\n    <div className=\"Home-container\">\n      <label><b>ID</b></label>\n      <input onChange={handleUserNameChange}></input>\n\n\t  <div className=\"icon-container\">\n\t\t{images.map(({value, src}) =>\n\t\t\t<span className=\"icon\">\n\t\t\t<input type=\"radio\" name=\"icon\" value={value} onChange={handleIconChange} className=\"icon-input\"/>\n\t\t\t<img src={src} width=\"50\" height=\"50\" className=\"icon-img\"></img>\n\t\t\t</span>\n\t\t)}\n\t  </div>\n\n\t  <div className=\"Join-button\">\n\t  \t<a className=\"btn btn-dark\" href=\"/RoomList\"><b>로그인</b></a>\n\t  </div>\n    </div>\n  );\n};\n\nexport default Home;","/goinfre/jinkim/bye_blackhole/client/src/Chat/RoomList.tsx",["89","90","91","92","93","94","95"],"import React, {useEffect, useState, useCallback, VFC} from \"react\";\nimport \"./styles/RoomList.scss\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport MakeRoomModal from './MakeRoomModal';\nimport PwRoomModal from './PwRoomModal';\nimport NoEntryModal from './NoEntryModal'\nimport axios from 'axios';\nimport lock_icon from '../images/private.png'\n\ninterface HomeObj{\n\tuserName:any,\n\troomName:any,\n\tsetRoomName:(value:any)=>void,\n}\n\nconst RoomList : VFC<HomeObj>  = ({ userName, roomName, setRoomName}) => {\n  const handleRoomNameChange = useCallback((e:any) => {\n    setRoomName(e.target.value);\n\tcheckedRoomInfo(e.target.value)\n  }, []);\n\n  //password\n  const [pw, setPw] = useState(\"\");\n  const handPwChange = useCallback((e:any) => {\n    setPw(e.target.value);\n  }, []);\n\n  const [bChecked, setChecked] = useState(false);\n  const checkHandler = useCallback( (e:any) => {\n    setChecked(!bChecked);\n  },[bChecked]);\n\n\n  //makeRoomModal\n  const [makeRoomModalOpen, setMakeRoomModalOpen] = useState(false);\n  const openMakeRoomModal = () => {\n\tsetMakeRoomModalOpen(true);\n  }\n  const closeMakeRoomModal = () => {\n\tsetMakeRoomModalOpen(false);\n  }\n  //pwRoomModal\n  const [pwRoomModalOpen, setPwRoomModalOpen] = useState(false);\n  const openPwRoomModal = () => {\n\tsetPwRoomModalOpen(true);\n  }\n  const closePwRoomModal = () => {\n\tsetPwRoomModalOpen(false);\n\tsetTryAgain(false)\n  }\n  //NoEntryModal\n  const [noEntryModalOpen, setNoEntryModalOpen] = useState(false);\n  const openNoEntryModal = () => {\n\tsetNoEntryModalOpen(true);\n  }\n  const closeNoEntryModal = () => {\n\tsetNoEntryModalOpen(false);\n  }\n\n  sessionStorage.setItem(\"roomName\", roomName);\n\n  const [roomListInfo, setRoomListInfo] = useState<{id:string, password:string, owner_id:string, num:number}[]>();\n\n  useEffect(() => {\n\tgetRoomList()\n  }, [])\n\n  async function makeRoom(){\n\t  userName = userName ? userName : sessionStorage.getItem(\"userName\")\n\t  await axios.post('/RoomList', {id:roomName, password:pw, owner_id:userName});\n  }\n\n  async function getRoomList() {\n\t  const res = await axios.get('/RoomList/list');\n\t  setRoomListInfo(res.data)\n\t  //setRoomListInfo([{id:\"r1\", password:\"1234\", owner_id:\"oid1\", num:1}, {id:\"r1\", password:\"\", owner_id:\"oid1\", num:1}])\n  }\n\n\n  const [roomInfo, setRoomInfo] = useState<{id:String, password:String, owner_id:String, num:number}>();\n\n  function checkedRoomInfo(roomId:string)\n  {\n\t  roomListInfo?.map(room=>{\n\t\t  if (room.id === roomId)\n\t\t  setRoomInfo(room)\n\t\t})\n  }\n\n\n  async function enterRoom()\n  {\n\tawait axios.patch('/RoomList/incNum/' + roomName)\n\tdocument.location.href = '/Chat';\n  }\n\n  async function enterTheRoom() {\n\t  if (roomInfo)\n\t  {\n\t\t\tif (roomInfo.num >= 10) //입장불가 modal\n\t\t\t\topenNoEntryModal()\n\t\t\telse if (roomInfo.num < 10 && roomInfo.password == \"\") //페이지 이동\n\t\t\t\tenterRoom()\n\t\t\telse //비밀번호 입력 modal\n\t\t\t\topenPwRoomModal()\n\t\t}\n\t}\n\n\t//input password check\n\tconst [inputPw, setInputPw] = useState();\n\tconst handleInputPwChange = (e:any) => {\n\t\tsetInputPw(e.target.value);\n\t};\n\n\t// password try again\n\tconst [tryAgain, setTryAgain] = useState(false);\n\n\tasync function enterPrivateRoom() {\n\t\tif (inputPw === roomInfo?.password)\n\t\t\tenterRoom()\n\t\telse\n\t\t\tsetTryAgain(true);\n\t}\n\n\n  return (\n    <div className=\"RoomList-container\">\n\t\t<div className=\"makeRoom-box\">\n\t\t\t<a className=\"btn btn-primary btn-sm makeRoom\" onClick={openMakeRoomModal}><b>방 만들기</b></a>\n\t\t\t<MakeRoomModal open={makeRoomModalOpen} close={closeMakeRoomModal} header=\"방 만들기\" makeRoom={makeRoom}>\n\t\t\t\t<label >\n\t\t\t\t\t<b>&nbsp;방 제목&nbsp;&nbsp;&nbsp;</b>\n\t\t\t\t\t<input onChange={handleRoomNameChange}></input>\n\t\t\t\t</label>\n\t\t\t\t<label>\n\t\t\t\t\t&nbsp;&nbsp;<input type=\"checkbox\" checked={bChecked} onChange={(e) => checkHandler(e)} ></input> private\n\t\t\t\t</label>\n\t\t\t\t{bChecked ?\n\t\t\t\t\t<div className=\"checkbox-pw\">\n\t\t\t\t\t<b>비밀번호&nbsp;</b>\n\t\t\t\t\t<input type=\"password\" onChange={handPwChange}></input>\n\t\t\t\t\t</div>\n\t\t\t\t\t: null\n\t\t\t\t}\n\t\t\t</MakeRoomModal>\n\t\t</div>\n\t\t<div className=\"middle\">\n\t\t\t{roomListInfo?.map(room=>\n\t\t\t\t<label>\n\t\t\t\t\t<input type=\"radio\" name=\"room\" value={room.id} onChange={handleRoomNameChange}/>\n\t\t\t\t\t<div className=\"box\">\n\t\t\t\t\t\t<div>{room.id}</div>\n\t\t\t\t\t\t<span className=\"lock-image\">{room.password != \"\" ? <img src={lock_icon} width=\"20\" height=\"20\"></img> : null}</span>\n\t\t\t\t\t\t<span className=\"room-num\">10/{room.num}</span>\n\t\t\t\t\t</div>\n\t\t\t\t</label>\n\t\t\t)}\n\t\t</div>\n\t\t<div className=\"Join-button\">\n\t\t\t<a className=\"btn btn-dark\" onClick={enterTheRoom}><b>입장하기</b></a>\n\t\t\t<NoEntryModal open={noEntryModalOpen} close={closeNoEntryModal} >\n\t\t\t\t정원이 다 찼습니다.\n\t\t\t</NoEntryModal>\n\t\t\t<PwRoomModal open={pwRoomModalOpen} close={closePwRoomModal} header=\"입장하기\" enterRoom={enterPrivateRoom}>\n\t\t\t\t<label>\n\t\t\t\t\t<b>비밀번호&nbsp;</b>\n\t\t\t\t\t<input type=\"password\" onChange={handleInputPwChange}></input>\n\t\t\t\t\t{tryAgain ? <span className=\"tryAgain\">&nbsp;다시 시도하십시오</span> : null}\n\t\t\t\t</label>\n\t\t\t</PwRoomModal>\n\t\t</div>\n    </div>\n  );\n};\n\nexport default RoomList;","/goinfre/jinkim/bye_blackhole/client/src/Chat/ChatInput.tsx",["96","97"],"import React, { useRef, useState } from \"react\";\nimport \"./styles/ChatInput.css\";\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport {Button} from \"react-bootstrap\";\n\nconst socketIOClient = require('socket.io-client')\n\n\nconst ChatInput = ({ userName, socket }: any) => {\n  const [chatMessage, setChatMessage] = useState(\"\");\n\n  const handleSubmit = (e:any) => {\n    e.preventDefault();\n    socket.emit(\"onSend\", {\n      userName: userName ? userName : sessionStorage.getItem(\"userName\"),\n      msg: chatMessage,\n      timeStamp: new Date().toLocaleTimeString(),\n    });\n    setChatMessage(\"\");\n  };\n\n  const onChatMessageChange = (e:any) => {\n    setChatMessage(e.target.value);\n  };\n\n  return (\n    <div>\n      <form className=\"ChatInput-form\" onSubmit={handleSubmit}>\n        <input type=\"text\" className=\"form-control\"\n          placeholder=\"메시지를 입력하세요.\"\n          value={chatMessage}\n          onChange={onChatMessageChange}\n        ></input>\n        <Button type=\"button\" className=\"btn btn-warning btn-sm\">전송</Button>\n      </form>\n    </div>\n  );\n};\n\nexport default ChatInput;","/goinfre/jinkim/bye_blackhole/client/src/Chat/ChatLog.tsx",["98"],"import React, { useEffect, useState } from \"react\";\nimport \"./styles/ChatLog.css\";\n\n\nconst ChatLog = ({ userName, socket }: any) => {\n  const [msgList, setMsgList] = useState<any[]>([]);\n\n  useEffect(() => {\n\t// messsgeItem : {msg: String, name: String, timeStamp: String}\n    socket.on(\"onReceive\", (messageItem: {userName:string, msg:string, timeStamp:string}) => {\n\t\tuserName = userName ? userName : sessionStorage.getItem(\"userName\")\n\t  if (userName === messageItem.userName)\n\t\tsetMsgList((msgList) => [...msgList, {myMsg: messageItem.msg, timeStamp: messageItem.timeStamp} as never]);\n\t  else\n\t\tsetMsgList((msgList) => [...msgList, messageItem]);\n      console.log(messageItem);\n\t  console.log(userName)\n    });\n    socket.on(\"onConnect\", (systemMessage: string) => {\n      setMsgList((msgList) => [...msgList, { sysMsg: systemMessage } as never]);\n    });\n    socket.on(\"onDisconnect\", (systemMessage: any) => {\n      setMsgList((msgList) => [...msgList, { sysMsg: systemMessage } as never]);\n    });\n    return () => {\n      socket.disconnect();\n    };\n  }, [socket]);\n\n  return (\n    <div>\n      {msgList.map((msg, idx) => (\n        <div key={idx}>\n\t\t  \t{msg.userName &&\n          \t\t<div className=\"msg-userName\">{msg.userName}</div>\n\t\t\t}\n\t\t\t{msg.msg &&\n\t\t\t\t<div className=\"msgLeft\">\n          \t\t\t<span className=\"msg-msg\">{msg.msg}</span>\n\t\t\t\t\t<span className=\"msg-timeStamp\">({msg.timeStamp})</span>\n\t\t\t\t</div>\n\t\t\t}\n\t\t\t{msg.myMsg &&\n\t\t\t\t<div className=\"msgRight\">\n\t\t\t\t\t<span className=\"msg-timeStamp\">({msg.timeStamp})</span>\n          \t\t\t<span className=\"msg-msg\">{msg.myMsg}</span>\n\t\t\t\t</div>\n\t\t\t}\n\t\t  <div className=\"sysMsg\" >{msg.sysMsg}</div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default ChatLog;","/goinfre/jinkim/bye_blackhole/client/src/Chat/UserList.tsx",["99"],"import React, { useEffect, useState } from \"react\";\nimport \"./styles/UserList.css\"\n//import img from '../images/gamer_boy.png'\n\nconst UserList = ({ socket }: any) => {\n\tconst [userList, setUserList] = useState<{id: string, room: string, icon:any}[]>();\n\n\tuseEffect(() => {\n\t  socket.on(\"UserList\", (newUser:{id: string, room: string, icon:any}[]) => {\n\n\t\tsetUserList(newUser);\n\t  });\n\n\t  return () => {\n\t\tsocket.disconnect();\n\t  };\n\t}, [socket]);\n\n\treturn (\n\t\t<div>\n\t\t\t{userList?.map(user=>\n\t\t\t<div id=\"userList\">\n\t\t\t\t<span className=\"userIcon\">\n\t\t\t\t\t<img src={`data:image/jpeg;base64,${(user.icon).toString()}`} height=\"50\" width=\"50\" className=\"icon\"/>\n\t\t\t\t</span>\n\t\t\t\t<span className=\"userInfo\">\n\t\t\t\t\t<div className=\"id\">{user.id}</div>\n\t\t\t\t\t<div className=\"room\">{user.room}</div>\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\n\t);\n  };\n  export default UserList;\n","/goinfre/jinkim/bye_blackhole/client/src/Chat/PwRoomModal.tsx",["100"],"import React from 'react';\nimport \"./styles/MakeRoomModal.css\";\n\nconst PwRoomModal = ( props: any ) => {\n    const { open, close, header, enterRoom } = props;\n\n    return (\n        <div className={ open ? 'openMakeRoomModal MakeRoomModal' : 'MakeRoomModal' }>\n            { open ? (\n                <section>\n                    <header>\n                        {header}\n                        <button className=\"close\" onClick={close}> &times; </button>\n                    </header>\n                    <main>\n                        {props.children}\n                    </main>\n                    <footer>\n\t\t\t\t\t\t<a className=\"btn btn-dark\" onClick={enterRoom}><b>확인</b></a>\n                    </footer>\n                </section>\n            ) : null }\n        </div>\n    )\n}\n\nexport default PwRoomModal","/goinfre/jinkim/bye_blackhole/client/src/Chat/Loading.tsx",[],"/goinfre/jinkim/bye_blackhole/client/src/Chat/NoEntryModal.tsx",[],"/goinfre/jinkim/bye_blackhole/client/src/Chat/MakeRoomModal.tsx",[],"/goinfre/jinkim/bye_blackhole/client/src/Chat/Images.tsx",[],{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","replacedBy":"104"},{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","severity":1,"message":"106","line":1,"column":8,"nodeType":"107","messageId":"108","endLine":1,"endColumn":13},{"ruleId":"109","severity":1,"message":"110","line":13,"column":2,"nodeType":"107","endLine":13,"endColumn":11,"suggestions":"111"},{"ruleId":"109","severity":1,"message":"112","line":21,"column":2,"nodeType":"107","endLine":21,"endColumn":11,"suggestions":"113"},{"ruleId":"109","severity":1,"message":"114","line":28,"column":2,"nodeType":"107","endLine":28,"endColumn":11,"suggestions":"115"},{"ruleId":"109","severity":1,"message":"116","line":35,"column":2,"nodeType":"107","endLine":35,"endColumn":11,"suggestions":"117"},{"ruleId":"109","severity":1,"message":"118","line":42,"column":2,"nodeType":"107","endLine":42,"endColumn":11,"suggestions":"119"},{"ruleId":"120","severity":1,"message":"121","line":54,"column":52,"nodeType":"122","endLine":54,"endColumn":95},{"ruleId":"120","severity":1,"message":"121","line":61,"column":37,"nodeType":"122","endLine":61,"endColumn":78},{"ruleId":"120","severity":1,"message":"121","line":74,"column":52,"nodeType":"122","endLine":74,"endColumn":95},{"ruleId":"123","severity":1,"message":"124","line":84,"column":27,"nodeType":"125","messageId":"126","endLine":84,"endColumn":29},{"ruleId":"120","severity":1,"message":"121","line":84,"column":35,"nodeType":"122","endLine":84,"endColumn":79},{"ruleId":"120","severity":1,"message":"121","line":97,"column":46,"nodeType":"122","endLine":97,"endColumn":89},{"ruleId":"120","severity":1,"message":"121","line":103,"column":7,"nodeType":"122","endLine":103,"endColumn":74},{"ruleId":"120","severity":1,"message":"121","line":113,"column":7,"nodeType":"122","endLine":113,"endColumn":74},{"ruleId":"120","severity":1,"message":"121","line":33,"column":4,"nodeType":"122","endLine":33,"endColumn":63},{"ruleId":"109","severity":1,"message":"127","line":20,"column":6,"nodeType":"128","endLine":20,"endColumn":8,"suggestions":"129"},{"ruleId":"130","severity":1,"message":"131","line":84,"column":26,"nodeType":"132","messageId":"133","endLine":84,"endColumn":28},{"ruleId":"123","severity":1,"message":"134","line":102,"column":52,"nodeType":"125","messageId":"126","endLine":102,"endColumn":54},{"ruleId":"135","severity":1,"message":"136","line":129,"column":4,"nodeType":"122","endLine":129,"endColumn":79},{"ruleId":"123","severity":1,"message":"124","line":153,"column":51,"nodeType":"125","messageId":"126","endLine":153,"endColumn":53},{"ruleId":"120","severity":1,"message":"121","line":153,"column":59,"nodeType":"122","endLine":153,"endColumn":103},{"ruleId":"135","severity":1,"message":"136","line":160,"column":4,"nodeType":"122","endLine":160,"endColumn":55},{"ruleId":"105","severity":1,"message":"137","line":1,"column":17,"nodeType":"107","messageId":"108","endLine":1,"endColumn":23},{"ruleId":"105","severity":1,"message":"138","line":6,"column":7,"nodeType":"107","messageId":"108","endLine":6,"endColumn":21},{"ruleId":"109","severity":1,"message":"139","line":11,"column":14,"nodeType":"140","endLine":11,"endColumn":70},{"ruleId":"120","severity":1,"message":"121","line":24,"column":6,"nodeType":"122","endLine":24,"endColumn":109},{"ruleId":"135","severity":1,"message":"136","line":19,"column":7,"nodeType":"122","endLine":19,"endColumn":55},"no-native-reassign",["141"],"no-negated-in-lhs",["142"],"@typescript-eslint/no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setGameList'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [] as a second argument to the useEffect Hook.",["143"],"React Hook useEffect contains a call to 'setChatList'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [] as a second argument to the useEffect Hook.",["144"],"React Hook useEffect contains a call to 'setFriendsList'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [] as a second argument to the useEffect Hook.",["145"],"React Hook useEffect contains a call to 'setOthersList'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [] as a second argument to the useEffect Hook.",["146"],"React Hook useEffect contains a call to 'setMyChatList'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [] as a second argument to the useEffect Hook.",["147"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","React Hook useCallback has missing dependencies: 'checkedRoomInfo' and 'setRoomName'. Either include them or remove the dependency array. If 'setRoomName' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["148"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","Expected '===' and instead saw '=='.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'useRef' is defined but never used.","'socketIOClient' is assigned a value but never used.","Assignments to the 'userName' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","ConditionalExpression","no-global-assign","no-unsafe-negation",{"desc":"149","fix":"150"},{"desc":"149","fix":"151"},{"desc":"149","fix":"152"},{"desc":"149","fix":"153"},{"desc":"149","fix":"154"},{"desc":"155","fix":"156"},"Add dependencies array: []",{"range":"157","text":"158"},{"range":"159","text":"158"},{"range":"160","text":"158"},{"range":"161","text":"158"},{"range":"162","text":"158"},"Update the dependencies array to be: [checkedRoomInfo, setRoomName]",{"range":"163","text":"164"},[746,746],", []",[1064,1064],[1435,1435],[1802,1802],[2052,2052],[636,638],"[checkedRoomInfo, setRoomName]"]