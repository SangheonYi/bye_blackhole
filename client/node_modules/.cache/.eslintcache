[{"/Users/jinkim/bye_blackhole/client/src/index.tsx":"1","/Users/jinkim/bye_blackhole/client/src/reportWebVitals.js":"2","/Users/jinkim/bye_blackhole/client/src/App.tsx":"3","/Users/jinkim/bye_blackhole/client/src/Chat/Chat.tsx":"4","/Users/jinkim/bye_blackhole/client/src/Chat/RoomList.tsx":"5","/Users/jinkim/bye_blackhole/client/src/Lobby/Lobby.tsx":"6","/Users/jinkim/bye_blackhole/client/src/Chat/ChatOwnerModal.tsx":"7","/Users/jinkim/bye_blackhole/client/src/Chat/ChatInput.tsx":"8","/Users/jinkim/bye_blackhole/client/src/Chat/PwRoomModal.tsx":"9","/Users/jinkim/bye_blackhole/client/src/Chat/UserList.tsx":"10","/Users/jinkim/bye_blackhole/client/src/Chat/NoEntryModal.tsx":"11","/Users/jinkim/bye_blackhole/client/src/Chat/ChatLog.tsx":"12","/Users/jinkim/bye_blackhole/client/src/Chat/Loading.tsx":"13","/Users/jinkim/bye_blackhole/client/src/Chat/MakeRoomModal.tsx":"14","/Users/jinkim/bye_blackhole/client/src/Lobby/ChatListModal.tsx":"15","/Users/jinkim/bye_blackhole/client/src/Lobby/GameListModal.tsx":"16","/Users/jinkim/bye_blackhole/client/src/Chat/UserListModal.tsx":"17","/Users/jinkim/bye_blackhole/client/src/Images/Images.tsx":"18","/Users/jinkim/bye_blackhole/client/src/Login/Login.tsx":"19","/Users/jinkim/bye_blackhole/client/src/Lobby/ChatList.tsx":"20","/Users/jinkim/bye_blackhole/client/src/Lobby/GameList.tsx":"21","/Users/jinkim/bye_blackhole/client/src/Admin/Admin.tsx":"22","/Users/jinkim/bye_blackhole/client/src/SideBar/SideBar.tsx":"23","/Users/jinkim/bye_blackhole/client/src/SideBar/UserInfoModal.tsx":"24","/Users/jinkim/bye_blackhole/client/src/Lobby/PwdCheckModal.tsx":"25","/Users/jinkim/bye_blackhole/client/src/SideBar/GetChatList.tsx":"26"},{"size":567,"mtime":1626135082829,"results":"27","hashOfConfig":"28"},{"size":362,"mtime":1626135082829,"results":"29","hashOfConfig":"28"},{"size":1183,"mtime":1626135082826,"results":"30","hashOfConfig":"28"},{"size":2725,"mtime":1626463581907,"results":"31","hashOfConfig":"28"},{"size":5059,"mtime":1625929725408,"results":"32","hashOfConfig":"28"},{"size":1811,"mtime":1626463393147,"results":"33","hashOfConfig":"28"},{"size":935,"mtime":1626135082826,"results":"34","hashOfConfig":"28"},{"size":1083,"mtime":1626135082826,"results":"35","hashOfConfig":"28"},{"size":813,"mtime":1624311788553,"results":"36","hashOfConfig":"28"},{"size":3260,"mtime":1626135082826,"results":"37","hashOfConfig":"28"},{"size":632,"mtime":1624311788553,"results":"38","hashOfConfig":"28"},{"size":3721,"mtime":1626135082826,"results":"39","hashOfConfig":"28"},{"size":134,"mtime":1626135082826,"results":"40","hashOfConfig":"28"},{"size":838,"mtime":1625603956387,"results":"41","hashOfConfig":"28"},{"size":2142,"mtime":1626497450751,"results":"42","hashOfConfig":"28"},{"size":1215,"mtime":1626497579110,"results":"43","hashOfConfig":"28"},{"size":1371,"mtime":1626463652771,"results":"44","hashOfConfig":"28"},{"size":933,"mtime":1626135082827,"results":"45","hashOfConfig":"28"},{"size":434,"mtime":1626135082829,"results":"46","hashOfConfig":"28"},{"size":1593,"mtime":1626490317929,"results":"47","hashOfConfig":"28"},{"size":927,"mtime":1626488847978,"results":"48","hashOfConfig":"28"},{"size":2391,"mtime":1626497996088,"results":"49","hashOfConfig":"28"},{"size":2620,"mtime":1626496461935,"results":"50","hashOfConfig":"28"},{"size":2917,"mtime":1626496548406,"results":"51","hashOfConfig":"28"},{"size":1370,"mtime":1626495231343,"results":"52","hashOfConfig":"28"},{"size":827,"mtime":1626495292125,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"1bdmnrm",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"56"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"56"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"56"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"56"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"56"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"69"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"56"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"56"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"56"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"56"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"56"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128"},"/Users/jinkim/bye_blackhole/client/src/index.tsx",[],["129","130"],"/Users/jinkim/bye_blackhole/client/src/reportWebVitals.js",[],["131","132"],"/Users/jinkim/bye_blackhole/client/src/App.tsx",["133"],"//import logo from './logo.svg';\nimport React, {useState} from \"react\";\nimport './App.scss';\nimport Chat from \"./Chat/Chat\";\nimport Admin from \"./Admin/Admin\";\n//import RoomList from \"./Chat/RoomList\"\nimport Lobby from \"./Lobby/Lobby\"\nimport Login from './Login/Login'\nimport \"./Chat/styles/global.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nfunction App() {\n\treturn (\n\t<div className=\"App\">\n\t\t<Router>\n\t\t  <Switch>\n\t\t\t{\n\t\t\t<Route exact path=\"/\" render={() => \n\t\t\t\t<Login />\n\t\t\t}/>\n\t\t\t}\n\t\t\t<Route path=\"/Admin\" exact render={() =>\n\t\t\t\t<Admin/>\n\t\t\t}/>\n\t\t\t<Route path=\"/Lobby\" exact render={() =>\n\t\t\t\t<Lobby/>\n\t\t\t}/>\n\t\t\t<Route path=\"/Chat\" exact render={() =>\n\t\t\t\t<Chat/>\n\t\t\t}/>\n\t\t\t{/*\n\t\t\t<Route path=\"/RoomList\" exact render={() => <RoomList\n\t\t\t\tNickname={Nickname}\n\t\t\t\troomName={roomName}\n\t\t\t\tsetRoomName={setRoomName}\n\t\t\t  />}>\n\t\t\t\n\t\t\t<Route\n\t\t\t  path=\"/Chat\"\n\t\t\t  exact\n\t\t\t  render={() => <Chat Nickname={Nickname} roomName={roomName} icon={icon}/>}\n\t\t\t></Route>*/}\n\t\t\t<Route\n\t\t\t\trender={({location}) => (\n\t\t\t\t\t  <div>\n\t\t\t\t\t\tNot Found {location.pathname}\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t/>\n\t\t  </Switch>\n\t\t</Router>\n\t</div>\n\t);\n  }\n\n\nexport default App;","/Users/jinkim/bye_blackhole/client/src/Chat/Chat.tsx",["134","135","136"],"import React, { useEffect, useState } from \"react\";\nimport ChatInput from \"./ChatInput\";\nimport ChatLog from \"./ChatLog\";\nimport Loading from \"./Loading\";\nimport UserList from \"./UserList\";\nimport SideBar from \"../SideBar/SideBar\";\nimport \"./styles/Chat.scss\"\nimport setting from '../Images/setting.png'\nimport ChatOwnerModal from \"./ChatOwnerModal\";\nimport axios from \"axios\";\nimport useSwr from 'swr';\nconst socketIOClient = require('socket.io-client')\n\nconst Chat = () => {\n\t\n\tconst [currentSocket, setCurrentSocket] = useState(socketIOClient());\n\tconst [MyID, setMyID] = useState('')\n\tconst [MyIcon, setMyIcon] = useState('')\n\tconst [roomName, setRoomName] = useState('')\n\n\tconst fetcher = async (url:string) => {\n\t\tconst res = await axios.get(url)\n\t\treturn res.data;\n\t}\n\tconst {data, error} = useSwr<{room_id:string, room_num:string, room_owner: string}>('/Chat/' + roomName, fetcher)\n\n\tuseEffect(() => {\n\t\tsetCurrentSocket(socketIOClient(\"http://localhost:8080\"));\n\t\t\n\t\tconst id = sessionStorage.getItem('nickname')\n\t\tconst icon = sessionStorage.getItem('icon')\n\t\tconst room = sessionStorage.getItem('roomName')\n\t\tif (id) setMyID(id)\n\t\tif (icon) setMyIcon(icon)\n\t\tif (room) setRoomName(room)\n\t\t\n\t});\n\t\n\tconst myInfo = {\n\t\troomName: roomName,\n\t\tuserName: MyID,\n\t\ticon: MyIcon,\n\t};\n\n\tif (currentSocket) {\n\t\tcurrentSocket.on(\"connect\", () => {\n\t\t\tcurrentSocket.emit(\"join\", myInfo);\n\t\t});\n\t}\n\n\t\n\n\t//chat owner modal\n\tconst [ChatOwnerModalState, setChatOwnerModalState] = useState(false);\n\tconst openChatOwnerModal = () => {\n\t\tsetChatOwnerModalState(true);\n\t}\n\tconst closeChatOwnerModal = () => {\n\t\tsetChatOwnerModalState(false);\n\t}\n\n\treturn (\n\t<div id=\"App-Container\">\n\t\t{currentSocket ? (\n\t\t<>\n\t\t<span className=\"App-Left\">\n\t\t\t<div id=\"chat-container\">\n\t\t\t<div className=\"chat-top\">\n\t\t\t\t<span className=\"RoomInfo-num\">{data?.room_num}</span>\n\t\t\t\t<span>{data?.room_id}</span>\n\t\t\t\t{MyID === data?.room_owner ? \n\t\t\t\t\t<button className=\"setting-btn\" onClick={openChatOwnerModal}>\n\t\t\t\t\t\t<img src={setting} width=\"30\" height=\"30\"></img>\n\t\t\t\t\t</button>\n\t\t\t\t\t: null\n\t\t\t\t}\n\t\t\t</div>\n\t\t\t<ChatOwnerModal open={ChatOwnerModalState} close={closeChatOwnerModal} chatRoomID={data?.room_id}></ChatOwnerModal>\n\t\t\t<div className=\"chat-bottom\">\n\t\t\t\t<span className=\"left-chatLog\">\n\t\t\t\t\t<div className=\"chatLog-top\">\n\t\t\t\t\t\t<ChatLog socket={currentSocket}/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"chatLog-bottom\">\n\t\t\t\t\t\t<ChatInput socket={currentSocket}/>\n\t\t\t\t\t</div>\n\t\t\t\t</span>\n\t\t\t\t<span className=\"right-chatUser\">\n\t\t\t\t\t<UserList socket={currentSocket}></UserList>\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t\t</div>\n\t\t</span>\n\t\t<span className=\"App-Right\">\n\t\t\t\t<SideBar />\n\t\t</span>\n\t\t</>\n\t\t) : (\n\t\t  <Loading></Loading>\n\t\t)}\n\t</div>\n  );\n};\n\nexport default Chat;\n","/Users/jinkim/bye_blackhole/client/src/Chat/RoomList.tsx",["137","138","139","140","141","142","143"],"import React, {useEffect, useState, useCallback, VFC} from \"react\";\nimport \"./styles/RoomList.scss\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport MakeRoomModal from './MakeRoomModal';\nimport PwRoomModal from './PwRoomModal';\nimport NoEntryModal from './NoEntryModal'\nimport axios from 'axios';\nimport lock_icon from '../Images/private.png'\n\ninterface HomeObj{\n\tuserName:any,\n\troomName:any,\n\tsetRoomName:(value:any)=>void,\n}\n\nconst RoomList : VFC<HomeObj>  = ({ userName, roomName, setRoomName}) => {\n  const handleRoomNameChange = useCallback((e:any) => {\n    setRoomName(e.target.value);\n\tcheckedRoomInfo(e.target.value)\n  }, []);\n\n  //password\n  const [pw, setPw] = useState(\"\");\n  const handPwChange = useCallback((e:any) => {\n    setPw(e.target.value);\n  }, []);\n\n  const [bChecked, setChecked] = useState(false);\n  const checkHandler = useCallback( (e:any) => {\n    setChecked(!bChecked);\n  },[bChecked]);\n\n\n  //makeRoomModal\n  const [makeRoomModalOpen, setMakeRoomModalOpen] = useState(false);\n  const openMakeRoomModal = () => {\n\tsetMakeRoomModalOpen(true);\n  }\n  const closeMakeRoomModal = () => {\n\tsetMakeRoomModalOpen(false);\n  }\n  //pwRoomModal\n  const [pwRoomModalOpen, setPwRoomModalOpen] = useState(false);\n  const openPwRoomModal = () => {\n\tsetPwRoomModalOpen(true);\n  }\n  const closePwRoomModal = () => {\n\tsetPwRoomModalOpen(false);\n\tsetTryAgain(false)\n  }\n  //NoEntryModal\n  const [noEntryModalOpen, setNoEntryModalOpen] = useState(false);\n  const openNoEntryModal = () => {\n\tsetNoEntryModalOpen(true);\n  }\n  const closeNoEntryModal = () => {\n\tsetNoEntryModalOpen(false);\n  }\n\n  sessionStorage.setItem(\"roomName\", roomName);\n\n  const [roomListInfo, setRoomListInfo] = useState<{id:string, password:string, owner_id:string, num:number}[]>();\n\n  useEffect(() => {\n\tgetRoomList()\n  }, [])\n\n  async function makeRoom(){\n\t  userName = userName ? userName : sessionStorage.getItem(\"userName\")\n\t  await axios.post('/RoomList', {id:roomName, password:pw, owner_id:userName});\n  }\n\n  async function getRoomList() {\n\t  const res = await axios.get('/RoomList/list');\n\t  setRoomListInfo(res.data)\n\t  //setRoomListInfo([{id:\"r1\", password:\"1234\", owner_id:\"oid1\", num:1}, {id:\"r1\", password:\"\", owner_id:\"oid1\", num:1}])\n  }\n\n\n  const [roomInfo, setRoomInfo] = useState<{id:String, password:String, owner_id:String, num:number}>();\n\n  function checkedRoomInfo(roomId:string)\n  {\n\t  roomListInfo?.map(room=>{\n\t\t  if (room.id === roomId)\n\t\t  setRoomInfo(room)\n\t\t})\n  }\n\n\n  async function enterRoom()\n  {\n\tawait axios.patch('/RoomList/incNum/' + roomName)\n\tdocument.location.href = '/Chat';\n  }\n\n  async function enterTheRoom() {\n\t  if (roomInfo)\n\t  {\n\t\t\tif (roomInfo.num >= 10) //입장불가 modal\n\t\t\t\topenNoEntryModal()\n\t\t\telse if (roomInfo.num < 10 && roomInfo.password == \"\") //페이지 이동\n\t\t\t\tenterRoom()\n\t\t\telse //비밀번호 입력 modal\n\t\t\t\topenPwRoomModal()\n\t\t}\n\t}\n\n\t//input password check\n\tconst [inputPw, setInputPw] = useState();\n\tconst handleInputPwChange = (e:any) => {\n\t\tsetInputPw(e.target.value);\n\t};\n\n\t// password try again\n\tconst [tryAgain, setTryAgain] = useState(false);\n\n\tasync function enterPrivateRoom() {\n\t\tif (inputPw === roomInfo?.password)\n\t\t\tenterRoom()\n\t\telse\n\t\t\tsetTryAgain(true);\n\t}\n\n\n  return (\n    <div className=\"RoomList-container\">\n\t\t<div className=\"makeRoom-box\">\n\t\t\t<a className=\"btn btn-primary btn-sm makeRoom\" onClick={openMakeRoomModal}><b>방 만들기</b></a>\n\t\t\t<MakeRoomModal open={makeRoomModalOpen} close={closeMakeRoomModal} header=\"방 만들기\" makeRoom={makeRoom}>\n\t\t\t\t<label >\n\t\t\t\t\t<b>&nbsp;방 제목&nbsp;&nbsp;&nbsp;</b>\n\t\t\t\t\t<input onChange={handleRoomNameChange}></input>\n\t\t\t\t</label>\n\t\t\t\t<label>\n\t\t\t\t\t&nbsp;&nbsp;<input type=\"checkbox\" checked={bChecked} onChange={(e) => checkHandler(e)} ></input> private\n\t\t\t\t</label>\n\t\t\t\t{bChecked ?\n\t\t\t\t\t<div className=\"checkbox-pw\">\n\t\t\t\t\t<b>비밀번호&nbsp;</b>\n\t\t\t\t\t<input type=\"password\" onChange={handPwChange}></input>\n\t\t\t\t\t</div>\n\t\t\t\t\t: null\n\t\t\t\t}\n\t\t\t</MakeRoomModal>\n\t\t</div>\n\t\t<div className=\"middle\">\n\t\t\t{roomListInfo?.map(room=>\n\t\t\t\t<label>\n\t\t\t\t\t<input type=\"radio\" name=\"room\" value={room.id} onChange={handleRoomNameChange}/>\n\t\t\t\t\t<div className=\"box\">\n\t\t\t\t\t\t<div>{room.id}</div>\n\t\t\t\t\t\t<span className=\"lock-image\">{room.password != \"\" ? <img src={lock_icon} width=\"20\" height=\"20\"></img> : null}</span>\n\t\t\t\t\t\t<span className=\"room-num\">10/{room.num}</span>\n\t\t\t\t\t</div>\n\t\t\t\t</label>\n\t\t\t)}\n\t\t</div>\n\t\t<div className=\"Join-button\">\n\t\t\t<a className=\"btn btn-dark\" onClick={enterTheRoom}><b>입장하기</b></a>\n\t\t\t<NoEntryModal open={noEntryModalOpen} close={closeNoEntryModal} >\n\t\t\t\t정원이 다 찼습니다.\n\t\t\t</NoEntryModal>\n\t\t\t<PwRoomModal open={pwRoomModalOpen} close={closePwRoomModal} header=\"입장하기\" enterRoom={enterPrivateRoom}>\n\t\t\t\t<label>\n\t\t\t\t\t<b>비밀번호&nbsp;</b>\n\t\t\t\t\t<input type=\"password\" onChange={handleInputPwChange}></input>\n\t\t\t\t\t{tryAgain ? <span className=\"tryAgain\">&nbsp;다시 시도하십시오</span> : null}\n\t\t\t\t</label>\n\t\t\t</PwRoomModal>\n\t\t</div>\n    </div>\n  );\n};\n\nexport default RoomList;",["144","145"],"/Users/jinkim/bye_blackhole/client/src/Lobby/Lobby.tsx",["146","147","148","149","150"],"import axios from \"axios\";\nimport {useEffect, useState, useCallback} from \"react\";\nimport \"./styles/Lobby.scss\"\nimport plusbtn from \"../Images/plusbutton.png\"\nimport SideBar from '../SideBar/SideBar'\nimport GameListModal from './GameListModal'\nimport ChatListModal from './ChatListModal'\nimport ChatList from './ChatList'\nimport GameList from './GameList'\n\nconst Lobby = () => {\n\tconst [MyID, setMyID] = useState('')\n\n\tuseEffect(() => {\n\t\tconst id = sessionStorage.getItem('nickname')\n\t\tif (id) setMyID(id)\n\t})\n\n\t//game list modal\n\tconst [GameListModalState, setGameListModalState] = useState(false);\n\tconst openGameListModal = () => {\n\t\tsetGameListModalState(true);\n\t}\n\tconst closeGameListModal = () => {\n\t\tsetGameListModalState(false);\n\t}\n\n\t//chat list modal\n\tconst [ChatListModalState, setChatListModalState] = useState(false);\n\tconst openChatListModal = () => {\n\t\tsetChatListModalState(true);\n\t}\n\tconst closeChatListModal = () => {\n\t\tsetChatListModalState(false);\n\t}\n\n\treturn (\n\t<div id=\"App-Container\">\n\t\t<span className=\"App-Left\">\n\t\t\t<div className=\"list-box\">\n\t\t\t\t<div className=\"listName\">\n\t\t\t\t\tGame\n\t\t\t\t\t<button type=\"button\" className=\"plusbtn\" onClick={openGameListModal}>\n\t\t\t\t\t\t<img src={plusbtn} width=\"30\" height=\"30\"/>\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t\t<GameListModal open={GameListModalState} close={closeGameListModal} MyID={MyID}/>\n\t\t\t\t<hr/>\n\t\t\t\t<GameList/>\n\t\t\t</div>\n\n\t\t\t<div className=\"list-box\">\n\t\t\t\t<div className=\"listName\">\n\t\t\t\t\tChat<button type=\"button\" className=\"plusbtn\" onClick={openChatListModal}><img src={plusbtn} width=\"30\" height=\"30\"/></button>\n\t\t\t\t</div>\n\t\t\t\t<ChatListModal open={ChatListModalState} close={closeChatListModal} MyID={MyID}/>\n\t\t\t\t<hr/>\n\t\t\t\t<ChatList/>\n\t\t\t</div>\n\t\t</span>\n\t\t<span className=\"App-Right\">\n\t\t\t<SideBar />\n\t\t</span>\n\t</div>\n\t)\n}\n\nexport default Lobby;","/Users/jinkim/bye_blackhole/client/src/Chat/ChatOwnerModal.tsx",["151","152","153"],"import axios from 'axios';\nimport React, {useState, useCallback} from 'react';\nimport \"../Lobby/styles/Modal.scss\";\n\nconst ChatOwnerModal = ( props: any ) => {\n\tconst { open, close, chatRoomID} = props;\n\n\tasync function changePWD(){\n\t\t//await axios.post('chat/' + chatRoomID + '/admin/')\n\t\tclose();\n\t}\n\n\tconst [RoomPWD, setRoomPWD] = useState('');\n\tconst handelRoomPWD = useCallback((e:any) => {\n\t\tsetRoomPWD(e.target.value)\n\t}, []);\n\n\treturn (\n\t\t<div className={ open ? 'openModal Modal' : 'Modal' }>\n\t\t\t{ open ? (\n\t\t\t\t<section>\n\t\t\t\t\t<header>\n\t\t\t\t\t\tChange Password\n\t\t\t\t\t\t<button className=\"close\" onClick={close}> &times; </button>\n\t\t\t\t\t</header>\n\t\t\t\t\t<main>\n\t\t\t\t\t\tpassword:&nbsp;\n\t\t\t\t\t\t<input onChange={handelRoomPWD} value={RoomPWD}></input>\n\t\t\t\t\t</main>\n\t\t\t\t\t<footer>\n\t\t\t\t\t\t<a className=\"btn btn-primary\" onClick={changePWD}><b>Change</b></a>\n\t\t\t\t\t</footer>\n\t\t\t\t</section>\n\t\t\t) : null }\n\t\t</div>\n\t)\n}\n\nexport default ChatOwnerModal","/Users/jinkim/bye_blackhole/client/src/Chat/ChatInput.tsx",["154","155"],"import React, { useEffect, useRef, useState } from \"react\";\nimport \"./styles/ChatInput.css\";\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport {Button} from \"react-bootstrap\";\n\nconst ChatInput = ({socket}: any) => {\n\tconst [chatMessage, setChatMessage] = useState(\"\");\n\tconst [MyID, setMyID] = useState('')\n\n\tuseEffect(() => {\n\t\tconst id = sessionStorage.getItem('nickname')\n\t\tif (id) setMyID(id)\n\t})\n\n\tconst handleSubmit = (e:any) => {\n\t\te.preventDefault();\n\t\tsocket.emit(\"onSend\", {\n\t\t\tuserName: MyID,\n\t\t\tmsg: chatMessage,\n\t\t\ttimeStamp: new Date().toLocaleTimeString(),\n\t\t});\n\t\tsetChatMessage(\"\");\n\t};\n\n  const onChatMessageChange = (e:any) => {\n    setChatMessage(e.target.value);\n  };\n\n  return (\n    <div>\n      <form className=\"ChatInput-form\" onSubmit={handleSubmit}>\n        <input type=\"text\" className=\"form-control\"\n          placeholder=\"Enter message\"\n          value={chatMessage}\n          onChange={onChatMessageChange}\n        ></input>\n        <Button type=\"button\" className=\"btn btn-sm\">send</Button>\n      </form>\n    </div>\n  );\n};\n\nexport default ChatInput;","/Users/jinkim/bye_blackhole/client/src/Chat/PwRoomModal.tsx",["156"],"import React from 'react';\nimport \"./styles/MakeRoomModal.css\";\n\nconst PwRoomModal = ( props: any ) => {\n    const { open, close, header, enterRoom } = props;\n\n    return (\n        <div className={ open ? 'openMakeRoomModal MakeRoomModal' : 'MakeRoomModal' }>\n            { open ? (\n                <section>\n                    <header>\n                        {header}\n                        <button className=\"close\" onClick={close}> &times; </button>\n                    </header>\n                    <main>\n                        {props.children}\n                    </main>\n                    <footer>\n\t\t\t\t\t\t<a className=\"btn btn-dark\" onClick={enterRoom}><b>확인</b></a>\n                    </footer>\n                </section>\n            ) : null }\n        </div>\n    )\n}\n\nexport default PwRoomModal","/Users/jinkim/bye_blackhole/client/src/Chat/UserList.tsx",["157","158","159","160","161","162","163"],"import React, { useCallback, useEffect, useState } from \"react\";\nimport \"./styles/UserList.scss\"\nimport {findImg} from '../Images/Images'\nimport crown from '../Images/crown.png'\nimport UserListModal from './UserListModal'\nimport axios from \"axios\";\n\nconst UserList = ({ socket }: any) => {\n\tconst [userList, setUserList] = useState<{id: string, icon:string, status:string}[]>([{id:'2222', icon:'woman_icon', status:'administrator'}, {id:'3333', icon:'man_icon', status:'none'}, {id:'jinkim', icon:'gamer_boy', status:'owner'}, {id:'2222', icon:'woman_icon', status:'administrator'}, {id:'3333', icon:'man_icon', status:'none'}]);\n\n\tconst [myInfo, setMyInfo] = useState<{id: string, status:string}>({id:'jinkim', status:'administrator'})\n\n\tuseEffect(() => {\n\t\tsocket.on(\"UserList\", (newUser:{id: string, icon:string, status:string}[]) => {\n\t\t\tsetUserList(newUser);\n\t\t\tuserSorting();\n\t\t});\n\n\t\treturn () => {\n\t\t\tsocket.disconnect();\n\t\t};\n\t}, [socket]);\n\n\tfunction userSorting()\n\t{\n\t\tconst owner = userList.find((ele) => {\n\t\t\tif (ele.status === 'owner')\n\t\t\t\treturn true;\n\t\t})\n\t\tlet tmp = [{id:owner?.id, icon: owner?.icon, status:owner?.status}]\n\n\t\tlet idx = userList.indexOf(owner as never)\n\t\tif (idx > -1) userList.splice(idx, 1)\n\n\t\tuserList.forEach((ele) => {\n\t\t\tif (ele.status === 'administrator')\n\t\t\t{\n\t\t\t\ttmp.push(ele);\n\t\t\t\tidx = userList.indexOf(ele as never)\n\t\t\t\tif (idx > -1) userList.splice(idx, 1)\n\t\t\t}\n\t\t})\n\n\t\tuserList.forEach((ele) => { tmp.push(ele); })\n\t\tsetUserList(tmp as never);\n\t}\n\n\t//UserListModal\n\tconst [chatUser, setChatUser] = useState('')\n\tconst [UserListModalState, setUserListModalState] = useState(false);\n\tconst openUserListModal = (id:string) => {\n\t\tsetUserListModalState(true);\n\t\tsetChatUser(id);\n\t}\n\tconst closeUserListModal = () => {\n\t\tsetUserListModalState(false);\n\t}\n\n\t//owner button\n\tasync function plusBtn(id:string){\n\t\t//const rtn = await axios.get('chat/chatRoomID/admin/plus' + id)\n\t\t//setUserList(rtn.data)\n\n\t}\n\tasync function minusBtn(id:string){\n\t\t//await axios.get('chat/chatRoomID/admin/minus' + id)\n\t\t//setUserList(rtn.data)\n\t}\n\n\treturn (\n\t\t<div className=\"userList-container\">\n\t\t\t{userList?.map(user=>\n\t\t\t<div className=\"userList-box\">\n\t\t\t\t<button className=\"userList-btn\" onClick={() => myInfo.status === 'administrator' && 'jinkim' !== user.id && user.status === 'none' ? openUserListModal(user.id): null}>\n\t\t\t\t\t<span className=\"iconBox\">\n\t\t\t\t\t\t<span><img src={findImg(user.icon)} width=\"30\" height=\"30\" className=\"icon\"/></span>\n\t\t\t\t\t\t<span>{user.status !== 'none' ?\n\t\t\t\t\t\t\t<img src={crown} width=\"20\" height=\"20\" className={user.status === 'owner' ? 'crown owner' : 'crown administrator'}/>\n\t\t\t\t\t\t\t: null\n\t\t\t\t\t\t}</span>\n\t\t\t\t\t</span>\n\t\t\t\t\t<span className='id'>{user.id}</span>\n\t\t\t\t</button>\n\t\t\t\t<span>{myInfo.status === 'owner' && user.status === 'none' ?\n\t\t\t\t\t<button className=\"owner-plusBtn\" onClick={() => plusBtn(user.id)}>+</button>\n\t\t\t\t\t: null\n\t\t\t\t}</span>\n\t\t\t\t<span>{myInfo.status === 'owner' && user.status === 'administrator' ?\n\t\t\t\t\t<button className=\"owner-xBtn\" onClick={() => minusBtn(user.id)}>x</button>\n\t\t\t\t\t: null\n\t\t\t\t}</span>\n\t\t\t</div>\n\t\t\t)}\n\t\t\t<UserListModal open={UserListModalState} close={closeUserListModal} targetID={chatUser}></UserListModal>\n\t\t</div>\n\n\t);\n  };\n  export default UserList;\n","/Users/jinkim/bye_blackhole/client/src/Chat/NoEntryModal.tsx",[],"/Users/jinkim/bye_blackhole/client/src/Chat/ChatLog.tsx",["164","165"],"import React, { useEffect, useState } from \"react\";\nimport \"./styles/ChatLog.scss\";\nimport {findImg} from '../Images/Images'\nimport axios from \"axios\";\n\nconst ChatLog = ({socket}: any) => {\n\tconst [msgList, setMsgList] = useState<any[]>([{userName:'jinkim', icon:'gamer_boy', msg:'hello', timeStamp:'2021-01-01 00:00'}, {myMsg:'mymsgworlddddddddddddddddddddddddddddddddddddddasdfasdfasdfasdf', timeStamp:'2021-01-01 00:00'}, {sysMsg:'sysMsg님이 입장했습니다'},{userName:'2222', icon:'gamer_girl',msg:'worlddddddddddddddddddddddddddddddddddddddasdfasdfasdfasdf', timeStamp:'2021-01-01 00:00'}, {myMsg:'mymsg', timeStamp:'2021-01-01 00:00'},{myMsg:'mymsgworlddddddddddddddddddddddddddddddddddddddasdfasdfasdfasdf', timeStamp:'2021-01-01 00:00'}, {userName:'2222', icon:'gamer_girl',msg:'worlddddddddddddddddddddddddddddddddddddddasdfasdfasdfasdf', timeStamp:'2021-01-01 00:00'}, {userName:'2222', icon:'gamer_girl',msg:'worlddddddddddddddddddddddddddddddddddddddasdfasdfasdfasdf', timeStamp:'2021-01-01 00:00'}, {userName:'2222', icon:'gamer_girl',msg:'worlddddddddddddddddddddddddddddddddddddddasdfasdfasdfasdf', timeStamp:'2021-01-01 00:00'}, {userName:'2222', icon:'gamer_girl',msg:'worlddddddddddddddddddddddddddddddddddddddasdfasdfasdfasdf', timeStamp:'2021-01-01 00:00'}, {userName:'2222', icon:'gamer_girl',msg:'worlddddddddddddddddddddddddddddddddddddddasdfasdfasdfasdf', timeStamp:'2021-01-01 00:00'}, {userName:'2222', icon:'gamer_girl',msg:'worlddddddddddddddddddddddddddddddddddddddasdfasdfasdfasdf', timeStamp:'2021-01-01 00:00'}, {userName:'2222', icon:'gamer_girl',msg:'worlddddddddddddddddddddddddddddddddddddddasdfasdfasdfasdf', timeStamp:'2021-01-01 00:00'}, {userName:'2222', icon:'gamer_girl',msg:'worlddddddddddddddddddddddddddddddddddddddasdfasdfasdfasdf', timeStamp:'2021-01-01 00:00'}]);\n\n\tconst [MyID, setMyID] = useState('')\n\tconst [roomName, setRoomName] = useState('')\n\t\n\tuseEffect(() => {\n\t\tconst id = sessionStorage.getItem('nickname')\n\t\tconst room = sessionStorage.getItem('roomName')\n\t\tif (id) setMyID(id)\n\t\tif (room) setRoomName(room)\n\n\n\t\tsocket.on(\"onReceive\", async(messageItem: {userName:string, msg:string, timeStamp:string}) => {\n\t\t\tif (MyID === messageItem.userName)\n\t\t\t\tsetMsgList((msgList) => [...msgList, {myMsg: messageItem.msg, timeStamp: messageItem.timeStamp} as never]);\n\t\t\telse\n\t\t\t\tsetMsgList((msgList) => [...msgList, messageItem]);\n\n\t\t\tawait axios.post('/chat/' + roomName, {id:messageItem.userName, timeStamp:messageItem.timeStamp, content:messageItem.msg})\n\t\t\t\n\t\t});\n\t\tsocket.on(\"onConnect\", async (systemMessage: string) => {\n\t\t\tsetMsgList((msgList) => [...msgList, { sysMsg: systemMessage } as never]);\n\t\t\t\n\t\t\tawait axios.post('/chat/' + roomName, {sysMsg: systemMessage})\n\t\t});\n\t\tsocket.on(\"onDisconnect\", async(systemMessage: any) => {\n\t\t\tsetMsgList((msgList) => [...msgList, { sysMsg: systemMessage } as never]);\n\n\t\t\tawait axios.post('/chat/' + roomName, {sysMsg: systemMessage})\n\t\t});\n\t\treturn () => {\n\t\t\tsocket.disconnect();\n\t\t};\n\t}, [socket]);\n\n\treturn (\n\t<div>\n\t\t{msgList.map((msg, idx) => (\n\t\t<div key={idx}>\n\t\t\t{msg.msg &&\n\t\t\t\t<div className=\"msgLeft\">\n\t\t\t\t\t<span><img src={findImg(msg.icon)}  width=\"30\" height=\"30\" className=\"msg-icon\"/></span>\n\t\t\t\t\t<span>\n\t\t\t\t\t\t{msg.userName && <div className=\"msg-userName\">{msg.userName}</div>}\n\t\t\t\t\t\t<div className=\"msg-left\">{msg.msg}</div>\n\t\t\t\t\t</span>\n\t\t\t\t\t<span className=\"msg-timeStamp\">({msg.timeStamp})</span>\n\t\t\t\t</div>\n\t\t\t}\n\t\t\t{msg.myMsg &&\n\t\t\t\t<div className=\"msgRight\">\n\t\t\t\t\t<span className=\"msg-right\">{msg.myMsg}</span>\n\t\t\t\t\t<span className=\"msg-timeStamp\">({msg.timeStamp})</span>\n\t\t\t\t</div>\n\t\t\t}\n\t\t\t<div className=\"sysMsg\" >{msg.sysMsg}</div>\n\t\t</div>\n\t\t))}\n\t</div>\n\t);\n};\n\nexport default ChatLog;","/Users/jinkim/bye_blackhole/client/src/Chat/Loading.tsx",[],"/Users/jinkim/bye_blackhole/client/src/Chat/MakeRoomModal.tsx",[],"/Users/jinkim/bye_blackhole/client/src/Lobby/ChatListModal.tsx",["166","167"],"import React, {useState, useCallback} from 'react';\nimport axios from \"axios\";\nimport \"./styles/Modal.scss\";\n\nconst ChatListModal = ( props: any ) => {\n\tconst { open, close, MyID} = props;\n\n\tconst [NewRoomName, setNewRoomName] = useState(\"\");\n\tconst [RoomPWD, setRoomPWD] = useState(\"\");\n\tconst [IsProtectedRoom, setIsProtectedRoom] = useState(false);\n\tconst [IsUniqueName, setIsUniqueName] = useState(true)\n\n\n\tconst handleRoomNameChange = useCallback((e:any) => {\n\t\tsetNewRoomName(e.target.value);\n\t}, []);\n\tconst handelRoomPWD = useCallback((e:any) => {\n\t\tsetRoomPWD(e.target.value)\n\t}, []);\n\n\tconst ProtectedRoomCheckHandler = useCallback( (e:any) => {\n\t\tsetRoomPWD('')\n\t\tsetIsProtectedRoom(!IsProtectedRoom);\n\t},[IsProtectedRoom]);\n\n\n\tfunction makeNewChat(){\n\t\tif (RoomPWD === '')\n\t\t\tvar security = 'public'\n\t\telse\n\t\t\tvar security = 'protected'\n\t\taxios.put('/Lobby/chatCreate/' + NewRoomName, {password:RoomPWD, owner_id:MyID, security:security})\n\t\t.then((res) => {\n\t\t\tdocument.location.href = '/chat'\n\t\t\tsessionStorage.setItem('roomName', NewRoomName)\n\t\t})\n\t\t.catch((err) => {\n\t\t\tsetIsUniqueName(false)\n\t\t})\n\t}\n\n\treturn (\n\t\t<div className={ open ? 'openModal Modal' : 'Modal' }>\n\t\t\t{ open ? (\n\t\t\t\t<section>\n\t\t\t\t\t<header>\n\t\t\t\t\t\tNew Chatting Room\n\t\t\t\t\t\t<button className=\"close\" onClick={close}> &times; </button>\n\t\t\t\t\t</header>\n\t\t\t\t\t<main>\n\t\t\t\t\t\t<label >\n\t\t\t\t\t\t\t<b>Room Name:&nbsp;</b>\n\t\t\t\t\t\t\t<input onChange={handleRoomNameChange} maxLength={20}></input>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t&nbsp;&nbsp;<input type=\"checkbox\" checked={IsProtectedRoom} onChange={(e) => ProtectedRoomCheckHandler(e)}></input> protected\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t{IsUniqueName ? null : <label className=\"error\">이미 존재하는 방입니다.</label>}\n\t\t\t\t\t\t{IsProtectedRoom ?\n\t\t\t\t\t\t\t<div className=\"checkbox-pwd\">\n\t\t\t\t\t\t\t<b>&nbsp;&nbsp;&nbsp;&nbsp;password:&nbsp;</b>\n\t\t\t\t\t\t\t<input type=\"password\" onChange={handelRoomPWD}></input>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t: null\n\t\t\t\t\t\t}\n\t\t\t\t\t</main>\n\t\t\t\t\t<footer>\n\t\t\t\t\t\t<a className=\"btn btn-primary\" onClick={makeNewChat}><b>Enter</b></a>\n\t\t\t\t\t</footer>\n\t\t\t\t</section>\n\t\t\t) : null }\n\t\t</div>\n\t)\n}\n\nexport default ChatListModal","/Users/jinkim/bye_blackhole/client/src/Lobby/GameListModal.tsx",["168"],"import React , {useState, useCallback}from 'react';\nimport axios from \"axios\";\nimport \"./styles/Modal.scss\";\n\nconst GameListModal = ( props: any ) => {\n\tconst { open, close, MyID} = props;\n\n\tconst [IsSpeed, setIsSpeed] = useState(false)\n\n\tconst modeHandler = useCallback((e:any) => {\n\t\tif (e.target.value === 'speed')\n\t\t\tsetIsSpeed(true)\n\t\telse\n\t\t\tsetIsSpeed(false)\n\t}, [])\n\n\tfunction makeNewGame(){\n\t\taxios.put('/Lobby/GameCreate', {nickname:MyID, speed:IsSpeed, ladder:false})\n\t\t.then((res) => {\n\t\t\tdocument.location.href = '/Game'\n\t\t})\n\t\t.catch((err) => {\n\t\t\t//매칭실패!!\n\t\t})\n\t}\n\n\treturn (\n\t\t<div className={ open ? 'openModal Modal' : 'Modal' }>\n\t\t\t{ open ? (\n\t\t\t\t<section>\n\t\t\t\t\t<header>\n\t\t\t\t\t\tNew Game\n\t\t\t\t\t\t<button className=\"close\" onClick={close}> &times; </button>\n\t\t\t\t\t</header>\n\t\t\t\t\t<main>\n\t\t\t\t\t\t<span><input type=\"radio\" name=\"speed\" value=\"normal\" onClick={modeHandler} /> normal &nbsp;&nbsp;</span>\n\t\t\t\t\t\t<span><input type=\"radio\" name=\"speed\" value=\"speed\" onClick={modeHandler} /> speed </span>\n\t\t\t\t\t</main>\n\t\t\t\t\t<footer>\n\t\t\t\t\t\t<a className=\"btn btn-primary\" onClick={makeNewGame}><b>Matching Start</b></a>\n\t\t\t\t\t</footer>\n\t\t\t\t</section>\n\t\t\t) : null }\n\t\t</div>\n\t)\n}\n\nexport default GameListModal","/Users/jinkim/bye_blackhole/client/src/Chat/UserListModal.tsx",["169","170"],"import axios from 'axios';\nimport React from 'react';\nimport \"../SideBar/styles/UserInfoModal.scss\";\n\nconst UserListModal = ( props: any ) => {\n\tconst { open, close, targetID} = props;\n\n\tasync function kickUser(){\n\t\t//await axios.post('chat/' + chatRoomID + '/kick/' + targetID)\n\t\t\n\t}\n\n\treturn (\n\t\t<div className={ open ? 'openModal Modal' : 'Modal' }>\n\t\t\t{ open ? (\n\t\t\t\t<section>\n\t\t\t\t\t<div className=\"head\">\n\t\t\t\t\t\t<button className=\"close\" onClick={close}> &times; </button>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"content\">\n\t\t\t\t\t\t{targetID}\n\t\t\t\t\t</div>\n\t\t\t\t\t<hr/>\n\t\t\t\t\t<div className='bottom'>\n\t\t\t\t\t\t<span className=\"onoffbtn\">\n\t\t\t\t\t\t\t<input type=\"checkbox\" id=\"switch1\" name=\"switch1\" className=\"input__on-off\"/>\n\t\t\t\t\t\t\t<label htmlFor=\"switch1\" className=\"label__on-off\">\n\t\t\t\t\t\t\t\t<span className=\"marble\"></span>\n\t\t\t\t\t\t\t\t<span className=\"on\">Mute</span>\n\t\t\t\t\t\t\t\t<span className=\"off\">Unmute</span>\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t<input type=\"checkbox\" id=\"switch2\" name=\"switch2\" className=\"input__on-off\"/>\n\t\t\t\t\t\t\t<label htmlFor=\"switch2\" className=\"label__on-off\">\n\t\t\t\t\t\t\t\t<span className=\"marble\"></span>\n\t\t\t\t\t\t\t\t<span className=\"on\">Ban</span>\n\t\t\t\t\t\t\t\t<span className=\"off\">UnBan</span>\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<div><a className=\"btn button\" onClick={kickUser}><b>Kick</b></a></div>\n\t\t\t\t\t</div>\n\t\t\t\t</section>\n\t\t\t) : null }\n\t\t</div>\n\t)\n}\n\nexport default UserListModal","/Users/jinkim/bye_blackhole/client/src/Images/Images.tsx",["171","172","173","174","175","176"],"import gamer_boy from './gamer_boy.png'\nimport gamer_girl from './gamer_girl.png'\nimport gamer_keyboard from './gamer_keyboard.png'\nimport gamer_woman from './gamer_woman.png'\nimport man_icon from './man_icon.png'\nimport woman_icon from './woman_icon.png'\n\nexport const findImg = (icon_name:string) => {\n\tif ('gamer_boy' == icon_name)\n\t\treturn (gamer_boy)\n\telse if('gamer_girl' == icon_name)\n\t\treturn (gamer_girl)\n\telse if('gamer_keyboard' == icon_name)\n\t\treturn (gamer_keyboard)\n\telse if('gamer_woman' == icon_name)\n\t\treturn (gamer_woman)\n\telse if('man_icon' == icon_name)\n\t\treturn (man_icon)\n\telse if('woman_icon' == icon_name)\n\t\treturn (woman_icon)\n}\n\nexport const allImages = [\n\t{value: 'gamer_keyboard', src: gamer_keyboard},\n\t{value: 'gamer_woman', src: gamer_woman},\n\t{value: 'gamer_boy', src: gamer_boy},\n\t{value: 'gamer_girl', src: gamer_girl},\n\t{value: 'man_icon', src: man_icon},\n\t{value: 'woman_icon', src: woman_icon},\n]","/Users/jinkim/bye_blackhole/client/src/Login/Login.tsx",["177"],"import React, { useEffect, useState } from \"react\";\n\nconst Login = () => {\n\tconst [IntraID, setIntraID] = useState('')\n\n\tconst handleIntraIDChange = (e:any) => {\n\t\tsetIntraID(e.target.value);\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<input onChange={handleIntraIDChange}></input>\n\t\t\t<button onClick= {() => {\n\t\t\t\tdocument.location.href = \"/Admin\"\n\t\t\t\tsessionStorage.setItem('intraID', IntraID)\n\t\t\t}}>Login</button>\n\t\t</div>\n\t)\n}\nexport default Login","/Users/jinkim/bye_blackhole/client/src/Lobby/ChatList.tsx",["178","179","180","181","182","183"],"import {useEffect, useState, useCallback} from \"react\";\nimport axios from \"axios\";\nimport useSwr from 'swr';\nimport lock from '../Images/lock.png'\nimport unlock from '../Images/unlock.png'\nimport \"./styles/ChatList.scss\"\nimport PwdCheckModal from \"./PwdCheckModal\";\n\nconst ChatList = () => {\n\tconst fetcher = async (url:string) => {\n\t\tconst res = await axios.get(url)\n\t\treturn res.data;\n\t}\n\n\tconst {data, error} = useSwr<{title:string, num:number, security:string}[]>('Lobby/chatList', fetcher)\n\n\tconst [ClickedRoomTitle, setClickedRoomTitle] = useState('')\n\tconst [PwdCheckModalState, setPwdCheckModalState] = useState(false);\n\n\tconst openPwdCheckModal = (title:string) => {\n\t\tsetPwdCheckModalState(true);\n\t\tsetClickedRoomTitle(title)\n\t}\n\tconst closePwdCheckModal = () => {\n\t\tsetPwdCheckModalState(false);\n\t}\n\n\treturn (\n\t<>\n\t{data?.map(chatRoom=>\n\t\t<button type=\"button\" className=\"chatList\" onClick={() => {\n\t\t\tif (chatRoom.security === 'protected')\n\t\t\t\topenPwdCheckModal(chatRoom.title)\n\t\t\telse\n\t\t\t\tdocument.location.href = '/chat'\n\t\t\t\tsessionStorage.setItem('roomName', chatRoom.title)\n\t\t}}>\n\t\t\t<span className=\"chatList-left\">\n\t\t\t\t<div className=\"chatList-num\">{chatRoom.num}</div>\n\t\t\t</span>\n\t\t\t<span className=\"lock\">\n\t\t\t\t{chatRoom.security != \"protected\" ? <img src={unlock} width=\"20\" height=\"20\"/> : <img src={lock} width=\"20\" height=\"20\"/>}\n\t\t\t</span>\n\t\t\t<span className=\"roomName\">\n\t\t\t\t{chatRoom.title}\n\t\t\t</span>\n\n\t\t</button>\n\t)}\n\t<PwdCheckModal open={PwdCheckModalState} close={closePwdCheckModal} chatRoomID={ClickedRoomTitle}></PwdCheckModal>\n\t</>\n\t)\n}\n\nexport default ChatList","/Users/jinkim/bye_blackhole/client/src/Lobby/GameList.tsx",["184","185","186","187","188"],"import {useEffect, useState, useCallback} from \"react\";\nimport axios from \"axios\";\nimport useSwr from 'swr';\nimport speed from '../Images/speed.png'\nimport \"./styles/GameList.scss\"\n\nconst GameList = () => {\n\tconst fetcher = async (url:string) => {\n\t\tconst res = await axios.get(url)\n\t\treturn res.data;\n\t}\n\n\tconst {data, error} = useSwr<{p1:string, p2:string, speed:boolean, ladder:boolean}[]>('Lobby/gameList', fetcher)\n\n\treturn (\n\t<>\n\t{data?.map(gameRoom=>\n\t\t<button type=\"button\" className=\"GameList\">\n\t\t\t<span className=\"GameList-left\">\n\t\t\t\t<div className={gameRoom.ladder ? \"GameList-icon ladder\" : \"GameList-icon\"}>\n\t\t\t\t\t{gameRoom.speed ? <img src={speed} width=\"30\" height=\"30\"/> : 'N'}\n\t\t\t\t</div>\n\t\t\t</span>\n\t\t\t<span className=\"GameList-right\">\n\t\t\t\t<div className=\"player\">{gameRoom.p1}</div>\n\t\t\t\t<div>vs</div>\n\t\t\t\t<div className=\"player\">{gameRoom.p2}</div>\n\t\t\t</span>\n\t\t</button>\n\t)}\n\t</>\n\t)\n}\n\nexport default GameList","/Users/jinkim/bye_blackhole/client/src/Admin/Admin.tsx",["189","190","191","192"],"/Users/jinkim/bye_blackhole/client/src/SideBar/SideBar.tsx",["193","194","195","196","197"],"import axios from \"axios\";\nimport useSwr from 'swr';\nimport {useEffect, useState} from \"react\";\nimport \"./styles/SideBar.scss\"\nimport {findImg} from '../Images/Images'\nimport UserInfoModal from \"./UserInfoModal\";\nimport GetChatList from './GetChatList'\n\nconst SideBar = () => {\n\tconst [MyID, setMyID] = useState('')\n\tconst [MyIcon, setMyIcon] = useState('')\n\t\n\tuseEffect(() => {\n\t\tconst id = sessionStorage.getItem('nickname')\n\t\tconst icon = sessionStorage.getItem('icon')\n\t\tif (id) setMyID(id)\n\t\tif (icon) setMyIcon(icon)\n\t})\n\t\n\tconst fetcher = async (url:string) => {\n\t\tconst res = await axios.get(url)\n\t\treturn res.data;\n\t}\n\n\tconst {data, error} = useSwr<{id:string, icon:string, state:string, isFriend:boolean}[]>('/Lobby/userList/' + MyID, fetcher)\n\n\n\t//UserInfoModal\n\tconst [TargetID, setTargetID] = useState('');\n\tconst [UserInfoModalState, setUserInfoModalState] = useState(false);\n\tconst openUserInfoModal = async(id:string) => {\n\t\tsetUserInfoModalState(true);\n\t\tsetTargetID(id);\n\t}\n\tconst closeUserInfoModal = () => {\n\t\tsetUserInfoModalState(false);\n\t}\n\n\treturn(\n\t<aside>\n\t\t<div className=\"top\">\n\t\t\t<span className=\"MyID\">{MyID}</span>\n\t\t\t<button type=\"button\" className=\"myIcon\" onClick={() => openUserInfoModal(MyID)}>\n\t\t\t\t<img src={findImg(MyIcon)} width=\"30\" height=\"30\"></img>\n\t\t\t</button>\n\t\t</div>\n\t\t<div className=\"bottom\">\n\t\t\t<div className=\"title\"># friends</div>\n\t\t\t{data?.map(user=> user.isFriend ?\n\t\t\t\t<button type=\"button\" className=\"user-btn\" onClick={() => openUserInfoModal(user.id)}>\n\t\t\t\t\t<img src={findImg(user.icon)}  width=\"20\" height=\"20\" className=\"user-icon\"/>\n\t\t\t\t\t{user.state === \"on\" ? <span className=\"userState online\">·</span> : null}\n\t\t\t\t\t{user.state === \"off\" ? <span className=\"userState offline\">·</span> : null}\n\t\t\t\t\t{user.state === \"gaming\" ? <span className=\"userState gaming\">·</span> : null}\n\t\t\t\t\t{user.id}\n\t\t\t\t</button>\n\t\t\t\t: null\n\t\t\t)}\n\t\t\t<div className=\"title\"># others</div>\n\t\t\t{data?.map(user => user.isFriend ? null :\n\t\t\t\t<button type=\"button\" className=\"user-btn\" onClick={() => openUserInfoModal(user.id)}>\n\t\t\t\t\t<img src={findImg(user.icon)}  width=\"20\" height=\"20\" className=\"user-icon\"/>\n\t\t\t\t\t{user.state === \"on\" ? <span className=\"userState online\">·</span> : null}\n\t\t\t\t\t{user.state === \"off\" ? <span className=\"userState offline\">·</span> : null}\n\t\t\t\t\t{user.state === \"gaming\" ? <span className=\"userState gaming\">·</span> : null}\n\t\t\t\t\t{user.id}\n\t\t\t\t</button>\n\t\t\t)}\n\t\t\t\n\t\t\t<GetChatList myID={MyID}/>\n\n\t\t\t<UserInfoModal open={UserInfoModalState} close={closeUserInfoModal} myID={MyID} targetID={TargetID}/>\n\t\t</div>\n\t</aside>\n\t)\n}\nexport default SideBar;","/Users/jinkim/bye_blackhole/client/src/SideBar/UserInfoModal.tsx",["198","199","200","201","202","203"],"import React, { useEffect, useState } from 'react';\nimport axios from \"axios\";\nimport useSwr from 'swr';\nimport \"./styles/UserInfoModal.scss\";\n\nconst UserInfoModal = ( props: any) => {\n\tconst { open, close, myID, targetID} = props;\n\n\tconst fetcher = async (url:string) => {\n\t\tconst res = await axios.get(url)\n\t\treturn res.data;\n\t}\n\n\tconst {data, error} = useSwr<{history:{win:boolean, p2:string}[] ,friend:boolean, block:boolean, win:number, lose:number} | {history:{win:boolean, p2:string}[], win:number, lose:number}>('/profile/' + myID + '/' + targetID, fetcher)\n\n\tasync function makeDM(){\n\t\tif (myID.localeCompare(targetID) < 0)\n\t\t\tvar chatRoomName = 'DM_' + myID + '_' + targetID\n\t\telse\n\t\t\tvar chatRoomName = 'DM_' + targetID + '_' + myID\n\t\tawait axios.put('/Lobby/chatCreate/' + chatRoomName, {password:'', owner_id:myID, security:'private'})\n\t\tdocument.location.href = '/chat'\n\t\tsessionStorage.setItem('roomName', chatRoomName)\n\t}\n\n\treturn (\n\t\t<div className={ open ? 'openModal Modal' : 'Modal' }>\n\t\t\t{ open ? (\n\t\t\t\t<section>\n\t\t\t\t\t<div className=\"head\">\n\t\t\t\t\t\t<button className=\"close\" onClick={close}> &times; </button>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"content\">\n\t\t\t\t\t\t<div className=\"header\">\n\t\t\t\t\t\t\t<div className=\"name\">{targetID}</div>\n\t\t\t\t\t\t\t<span className=\"num win-color\">W {data?.win}</span>\n\t\t\t\t\t\t\t<span className=\"num lose-color\"> &nbsp;&nbsp; L {data?.lose}</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<hr/>\n\t\t\t\t\t\t<div className=\"main\">\n\t\t\t\t\t\t\t{data?.history?.map(match=>\n\t\t\t\t\t\t\t<div className={match.win ? 'matchHistory win-backColor' : 'matchHistory lose-backColor'}>\n\t\t\t\t\t\t\t\t<span className='match-left'>{match.p2}</span>\n\t\t\t\t\t\t\t\t<span className={match.win ? 'match-right win-color' : 'match-right lose-color'}>{match.win ? 'Win' : 'Lose'}</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"bottom\">\n\t\t\t\t\t{myID === targetID ? \n\t\t\t\t\t\t<a className=\"btn button\" onClick={()=> document.location.href = '/Admin/'}><b>Admin</b></a>\n\t\t\t\t\t\t:\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t<span className=\"onoffbtn\">\n\t\t\t\t\t\t\t<input type=\"checkbox\" id=\"switch1\" name=\"switch1\" className=\"input__on-off\"/>\n\t\t\t\t\t\t\t<label htmlFor=\"switch1\" className=\"label__on-off\">\n\t\t\t\t\t\t\t\t<span className=\"marble\"></span>\n\t\t\t\t\t\t\t\t<span className=\"on\">Friend</span>\n\t\t\t\t\t\t\t\t<span className=\"off\">Unfriend</span>\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<span className=\"onoffbtn\">\n\t\t\t\t\t\t\t<input type=\"checkbox\" id=\"switch2\" name=\"switch2\" className=\"input__on-off\"/>\n\t\t\t\t\t\t\t<label htmlFor=\"switch2\" className=\"label__on-off\">\n\t\t\t\t\t\t\t\t<span className=\"marble\"></span>\n\t\t\t\t\t\t\t\t<span className=\"on\">Unblock</span>\n\t\t\t\t\t\t\t\t<span className=\"off\">Block</span>\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<a className=\"btn button\" href=\"Game\"><b>Game</b></a>\n\t\t\t\t\t\t\t<a className=\"btn button dm-button\" onClick={makeDM}><b>DM</b></a>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t}\n\t\t\t\t\t</div>\n\t\t\t\t</section>\n\t\t\t) : null }\n\t\t</div>\n\t)\n}\n\nexport default UserInfoModal","/Users/jinkim/bye_blackhole/client/src/Lobby/PwdCheckModal.tsx",["204","205"],"import React, {useState, useCallback, useEffect} from 'react';\nimport axios from \"axios\";\nimport \"./styles/Modal.scss\";\n\nconst PwdCheckModal = ( props: any ) => {\n\tconst { open, close, chatRoomID} = props;\n\n\tconst [MyID, setMyID] = useState('')\n\tconst [PWD, setPWD] = useState(\"\");\n\tconst [WorngPWD, setWrongPWD] = useState(false)\n\n\tuseEffect(() => {\n\t\tconst id = sessionStorage.getItem('nickname')\n\t\tif (id) setMyID(id)\n\t})\n\n\tconst handelPWD = useCallback((e:any) => {\n\t\tsetPWD(e.target.value)\n\t}, []);\n\n\tasync function confirmPWD(){\n\t\taxios.post('/Lobby/enter/' + chatRoomID, {id:MyID, password:PWD})\n\t\t.then((res) => {\n\t\t\tdocument.location.href = '/Chat';\n\t\t\tsessionStorage.setItem('roomName', chatRoomID)\n\t\t})\n\t\t.catch((err) => {\n\t\t\tsetWrongPWD(true)\n\t\t})\n\t}\n\n\treturn (\n\t\t<div className={ open ? 'openModal Modal' : 'Modal' }>\n\t\t\t{ open ? (\n\t\t\t\t<section>\n\t\t\t\t\t<header>\n\t\t\t\t\t\tEnter Password\n\t\t\t\t\t\t<button className=\"close\" onClick={() => {\n\t\t\t\t\t\t\tclose()\n\t\t\t\t\t\t\tsetWrongPWD(false)\n\t\t\t\t\t\t}}> &times; </button>\n\t\t\t\t\t</header>\n\t\t\t\t\t<main>\n\t\t\t\t\t\tpassword: <input onChange={handelPWD}></input>\n\t\t\t\t\t\t{WorngPWD ? <label className=\"error\">틀린 비밀번호입니다.</label> : null}\n\t\t\t\t\t</main>\n\t\t\t\t\t<footer>\n\t\t\t\t\t\t<a className=\"btn btn-primary\" onClick={confirmPWD}><b>Enter</b></a>\n\t\t\t\t\t</footer>\n\t\t\t\t</section>\n\t\t\t) : null }\n\t\t</div>\n\t)\n}\n\nexport default PwdCheckModal","/Users/jinkim/bye_blackhole/client/src/SideBar/GetChatList.tsx",["206"],"import axios from \"axios\";\nimport useSwr from 'swr';\nimport \"./styles/GetChatList.scss\"\n\nconst GetChatList = (props: any) => {\n\tconst {myID} = props\n\n\tconst fetcher = async (url:string) => {\n\t\tconst res = await axios.get(url)\n\t\treturn res.data;\n\t}\n\n\tconst {data, error} = useSwr<{title:string, num: number}[]>('/Lobby/myChatList/' + myID, fetcher)\n\treturn (\n\t<>\n\t\t<div className=\"title\"># my chats</div>\n\t\t{data?.map(chat=>\n\t\t\t<div className=\"chat\">\n\t\t\t\t<button type=\"button\" className=\"chat-btn\" onClick={() => {\n\t\t\t\t\t\tdocument.location.href = '/Chat';\n\t\t\t\t\t\tsessionStorage.setItem('roomName', chat.title);\n\t\t\t\t}}>\n\t\t\t\t\t<span className=\"chatNum\">{chat.num}</span>\n\t\t\t\t\t<span>&nbsp;{chat.title}</span>\n\t\t\t\t</button>\n\t\t\t\t<button type=\"button\" className=\"chatLeave\">X</button>\n\t\t\t</div>\n\t\t)}\n\t</>\n\t)\n}\n\nexport default GetChatList",{"ruleId":"207","replacedBy":"208"},{"ruleId":"209","replacedBy":"210"},{"ruleId":"207","replacedBy":"208"},{"ruleId":"209","replacedBy":"210"},{"ruleId":"211","severity":1,"message":"212","line":2,"column":16,"nodeType":"213","messageId":"214","endLine":2,"endColumn":24},{"ruleId":"211","severity":1,"message":"215","line":25,"column":15,"nodeType":"213","messageId":"214","endLine":25,"endColumn":20},{"ruleId":"216","severity":1,"message":"217","line":27,"column":2,"nodeType":"213","endLine":27,"endColumn":11,"suggestions":"218"},{"ruleId":"219","severity":1,"message":"220","line":73,"column":7,"nodeType":"221","endLine":73,"endColumn":49},{"ruleId":"216","severity":1,"message":"222","line":20,"column":6,"nodeType":"223","endLine":20,"endColumn":8,"suggestions":"224"},{"ruleId":"225","severity":1,"message":"226","line":84,"column":26,"nodeType":"227","messageId":"228","endLine":84,"endColumn":28},{"ruleId":"229","severity":1,"message":"230","line":102,"column":52,"nodeType":"231","messageId":"232","endLine":102,"endColumn":54},{"ruleId":"233","severity":1,"message":"234","line":129,"column":4,"nodeType":"221","endLine":129,"endColumn":79},{"ruleId":"229","severity":1,"message":"235","line":153,"column":51,"nodeType":"231","messageId":"232","endLine":153,"endColumn":53},{"ruleId":"219","severity":1,"message":"220","line":153,"column":59,"nodeType":"221","endLine":153,"endColumn":103},{"ruleId":"233","severity":1,"message":"234","line":160,"column":4,"nodeType":"221","endLine":160,"endColumn":55},{"ruleId":"207","replacedBy":"236"},{"ruleId":"209","replacedBy":"237"},{"ruleId":"211","severity":1,"message":"238","line":1,"column":8,"nodeType":"213","messageId":"214","endLine":1,"endColumn":13},{"ruleId":"211","severity":1,"message":"239","line":2,"column":30,"nodeType":"213","messageId":"214","endLine":2,"endColumn":41},{"ruleId":"216","severity":1,"message":"240","line":14,"column":2,"nodeType":"213","endLine":14,"endColumn":11,"suggestions":"241"},{"ruleId":"219","severity":1,"message":"220","line":44,"column":7,"nodeType":"221","endLine":44,"endColumn":50},{"ruleId":"219","severity":1,"message":"220","line":54,"column":80,"nodeType":"221","endLine":54,"endColumn":123},{"ruleId":"211","severity":1,"message":"238","line":1,"column":8,"nodeType":"213","messageId":"214","endLine":1,"endColumn":13},{"ruleId":"211","severity":1,"message":"242","line":6,"column":23,"nodeType":"213","messageId":"214","endLine":6,"endColumn":33},{"ruleId":"233","severity":1,"message":"234","line":31,"column":7,"nodeType":"221","endLine":31,"endColumn":58},{"ruleId":"211","severity":1,"message":"243","line":1,"column":28,"nodeType":"213","messageId":"214","endLine":1,"endColumn":34},{"ruleId":"216","severity":1,"message":"240","line":10,"column":2,"nodeType":"213","endLine":10,"endColumn":11,"suggestions":"244"},{"ruleId":"233","severity":1,"message":"234","line":19,"column":7,"nodeType":"221","endLine":19,"endColumn":55},{"ruleId":"211","severity":1,"message":"239","line":1,"column":17,"nodeType":"213","messageId":"214","endLine":1,"endColumn":28},{"ruleId":"211","severity":1,"message":"238","line":6,"column":8,"nodeType":"213","messageId":"214","endLine":6,"endColumn":13},{"ruleId":"211","severity":1,"message":"245","line":11,"column":17,"nodeType":"213","messageId":"214","endLine":11,"endColumn":26},{"ruleId":"216","severity":1,"message":"246","line":22,"column":5,"nodeType":"223","endLine":22,"endColumn":13,"suggestions":"247"},{"ruleId":"225","severity":1,"message":"248","line":26,"column":37,"nodeType":"227","messageId":"249","endLine":26,"endColumn":39},{"ruleId":"219","severity":1,"message":"220","line":76,"column":13,"nodeType":"221","endLine":76,"endColumn":84},{"ruleId":"219","severity":1,"message":"220","line":78,"column":8,"nodeType":"221","endLine":78,"endColumn":125},{"ruleId":"216","severity":1,"message":"250","line":41,"column":5,"nodeType":"223","endLine":41,"endColumn":13,"suggestions":"251"},{"ruleId":"219","severity":1,"message":"220","line":49,"column":12,"nodeType":"221","endLine":49,"endColumn":87},{"ruleId":"252","severity":1,"message":"253","line":31,"column":8,"nodeType":"213","messageId":"254","endLine":31,"endColumn":16},{"ruleId":"233","severity":1,"message":"234","line":68,"column":7,"nodeType":"221","endLine":68,"endColumn":60},{"ruleId":"233","severity":1,"message":"234","line":40,"column":7,"nodeType":"221","endLine":40,"endColumn":60},{"ruleId":"211","severity":1,"message":"238","line":1,"column":8,"nodeType":"213","messageId":"214","endLine":1,"endColumn":13},{"ruleId":"233","severity":1,"message":"234","line":39,"column":12,"nodeType":"221","endLine":39,"endColumn":57},{"ruleId":"229","severity":1,"message":"230","line":9,"column":18,"nodeType":"231","messageId":"232","endLine":9,"endColumn":20},{"ruleId":"229","severity":1,"message":"230","line":11,"column":23,"nodeType":"231","messageId":"232","endLine":11,"endColumn":25},{"ruleId":"229","severity":1,"message":"230","line":13,"column":27,"nodeType":"231","messageId":"232","endLine":13,"endColumn":29},{"ruleId":"229","severity":1,"message":"230","line":15,"column":24,"nodeType":"231","messageId":"232","endLine":15,"endColumn":26},{"ruleId":"229","severity":1,"message":"230","line":17,"column":21,"nodeType":"231","messageId":"232","endLine":17,"endColumn":23},{"ruleId":"229","severity":1,"message":"230","line":19,"column":23,"nodeType":"231","messageId":"232","endLine":19,"endColumn":25},{"ruleId":"211","severity":1,"message":"255","line":1,"column":17,"nodeType":"213","messageId":"214","endLine":1,"endColumn":26},{"ruleId":"211","severity":1,"message":"255","line":1,"column":9,"nodeType":"213","messageId":"214","endLine":1,"endColumn":18},{"ruleId":"211","severity":1,"message":"239","line":1,"column":30,"nodeType":"213","messageId":"214","endLine":1,"endColumn":41},{"ruleId":"211","severity":1,"message":"215","line":15,"column":15,"nodeType":"213","messageId":"214","endLine":15,"endColumn":20},{"ruleId":"229","severity":1,"message":"235","line":42,"column":24,"nodeType":"231","messageId":"232","endLine":42,"endColumn":26},{"ruleId":"219","severity":1,"message":"220","line":42,"column":41,"nodeType":"221","endLine":42,"endColumn":83},{"ruleId":"219","severity":1,"message":"220","line":42,"column":86,"nodeType":"221","endLine":42,"endColumn":126},{"ruleId":"211","severity":1,"message":"255","line":1,"column":9,"nodeType":"213","messageId":"214","endLine":1,"endColumn":18},{"ruleId":"211","severity":1,"message":"212","line":1,"column":20,"nodeType":"213","messageId":"214","endLine":1,"endColumn":28},{"ruleId":"211","severity":1,"message":"239","line":1,"column":30,"nodeType":"213","messageId":"214","endLine":1,"endColumn":41},{"ruleId":"211","severity":1,"message":"215","line":13,"column":15,"nodeType":"213","messageId":"214","endLine":13,"endColumn":20},{"ruleId":"219","severity":1,"message":"220","line":21,"column":24,"nodeType":"221","endLine":21,"endColumn":65},{"ruleId":"216","severity":1,"message":"256","line":16,"column":2,"nodeType":"213","endLine":16,"endColumn":11,"suggestions":"257"},{"ruleId":"219","severity":1,"message":"220","line":61,"column":5,"nodeType":"221","endLine":61,"endColumn":57},{"ruleId":"219","severity":1,"message":"220","line":73,"column":5,"nodeType":"221","endLine":73,"endColumn":64},{"ruleId":"233","severity":1,"message":"234","line":81,"column":5,"nodeType":"221","endLine":81,"endColumn":67},{"ruleId":"216","severity":1,"message":"240","line":13,"column":2,"nodeType":"213","endLine":13,"endColumn":11,"suggestions":"258"},{"ruleId":"211","severity":1,"message":"215","line":25,"column":15,"nodeType":"213","messageId":"214","endLine":25,"endColumn":20},{"ruleId":"219","severity":1,"message":"220","line":44,"column":5,"nodeType":"221","endLine":44,"endColumn":55},{"ruleId":"219","severity":1,"message":"220","line":51,"column":6,"nodeType":"221","endLine":51,"endColumn":83},{"ruleId":"219","severity":1,"message":"220","line":62,"column":6,"nodeType":"221","endLine":62,"endColumn":83},{"ruleId":"211","severity":1,"message":"255","line":1,"column":17,"nodeType":"213","messageId":"214","endLine":1,"endColumn":26},{"ruleId":"211","severity":1,"message":"212","line":1,"column":28,"nodeType":"213","messageId":"214","endLine":1,"endColumn":36},{"ruleId":"211","severity":1,"message":"215","line":14,"column":15,"nodeType":"213","messageId":"214","endLine":14,"endColumn":20},{"ruleId":"252","severity":1,"message":"259","line":20,"column":8,"nodeType":"213","messageId":"254","endLine":20,"endColumn":20},{"ruleId":"233","severity":1,"message":"234","line":51,"column":7,"nodeType":"221","endLine":51,"endColumn":83},{"ruleId":"233","severity":1,"message":"234","line":72,"column":8,"nodeType":"221","endLine":72,"endColumn":61},{"ruleId":"216","severity":1,"message":"240","line":12,"column":2,"nodeType":"213","endLine":12,"endColumn":11,"suggestions":"260"},{"ruleId":"233","severity":1,"message":"234","line":48,"column":7,"nodeType":"221","endLine":48,"endColumn":59},{"ruleId":"211","severity":1,"message":"215","line":13,"column":15,"nodeType":"213","messageId":"214","endLine":13,"endColumn":20},"no-native-reassign",["261"],"no-negated-in-lhs",["262"],"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'error' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setCurrentSocket'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [] as a second argument to the useEffect Hook.",["263"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useCallback has missing dependencies: 'checkedRoomInfo' and 'setRoomName'. Either include them or remove the dependency array. If 'setRoomName' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["264"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","Expected '!==' and instead saw '!='.",["261"],["262"],"'axios' is defined but never used.","'useCallback' is defined but never used.","React Hook useEffect contains a call to 'setMyID'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [] as a second argument to the useEffect Hook.",["265"],"'chatRoomID' is assigned a value but never used.","'useRef' is defined but never used.",["266"],"'setMyInfo' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'userSorting'. Either include it or remove the dependency array.",["267"],"Array.prototype.find() expects a value to be returned at the end of arrow function.","expectedAtEnd","React Hook useEffect has missing dependencies: 'MyID' and 'roomName'. Either include them or remove the dependency array.",["268"],"@typescript-eslint/no-redeclare","'security' is already defined.","redeclared","'useEffect' is defined but never used.","React Hook useEffect contains a call to 'setIntraID'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [] as a second argument to the useEffect Hook.",["269"],["270"],"'chatRoomName' is already defined.",["271"],"no-global-assign","no-unsafe-negation",{"desc":"272","fix":"273"},{"desc":"274","fix":"275"},{"desc":"272","fix":"276"},{"desc":"272","fix":"277"},{"desc":"278","fix":"279"},{"desc":"280","fix":"281"},{"desc":"272","fix":"282"},{"desc":"272","fix":"283"},{"desc":"272","fix":"284"},"Add dependencies array: []",{"range":"285","text":"286"},"Update the dependencies array to be: [checkedRoomInfo, setRoomName]",{"range":"287","text":"288"},{"range":"289","text":"286"},{"range":"290","text":"286"},"Update the dependencies array to be: [socket, userSorting]",{"range":"291","text":"292"},"Update the dependencies array to be: [MyID, roomName, socket]",{"range":"293","text":"294"},{"range":"295","text":"286"},{"range":"296","text":"286"},{"range":"297","text":"286"},[1203,1203],", []",[636,638],"[checkedRoomInfo, setRoomName]",[509,509],[402,402],[939,947],"[socket, userSorting]",[2983,2991],"[MyID, roomName, socket]",[886,886],[525,525],[423,423]]