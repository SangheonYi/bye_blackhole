[{"/Users/jinkim/bye_blackhole/client/src/index.tsx":"1","/Users/jinkim/bye_blackhole/client/src/reportWebVitals.js":"2","/Users/jinkim/bye_blackhole/client/src/App.tsx":"3","/Users/jinkim/bye_blackhole/client/src/Chat/Chat.tsx":"4","/Users/jinkim/bye_blackhole/client/src/Lobby/Lobby.tsx":"5","/Users/jinkim/bye_blackhole/client/src/Chat/ChatInput.tsx":"6","/Users/jinkim/bye_blackhole/client/src/Chat/UserList.tsx":"7","/Users/jinkim/bye_blackhole/client/src/Chat/ChatLog.tsx":"8","/Users/jinkim/bye_blackhole/client/src/Chat/Loading.tsx":"9","/Users/jinkim/bye_blackhole/client/src/Lobby/ChatListModal.tsx":"10","/Users/jinkim/bye_blackhole/client/src/Lobby/GameListModal.tsx":"11","/Users/jinkim/bye_blackhole/client/src/Chat/UserListModal.tsx":"12","/Users/jinkim/bye_blackhole/client/src/Images/Images.tsx":"13","/Users/jinkim/bye_blackhole/client/src/Login/Login.tsx":"14","/Users/jinkim/bye_blackhole/client/src/Lobby/ChatList.tsx":"15","/Users/jinkim/bye_blackhole/client/src/Lobby/GameList.tsx":"16","/Users/jinkim/bye_blackhole/client/src/Admin/Admin.tsx":"17","/Users/jinkim/bye_blackhole/client/src/SideBar/SideBar.tsx":"18","/Users/jinkim/bye_blackhole/client/src/SideBar/UserInfoModal.tsx":"19","/Users/jinkim/bye_blackhole/client/src/Lobby/PwdCheckModal.tsx":"20","/Users/jinkim/bye_blackhole/client/src/SideBar/GetChatList.tsx":"21","/Users/jinkim/bye_blackhole/client/src/Chat/ChatSettingModal.tsx":"22"},{"size":567,"mtime":1626135082829,"results":"23","hashOfConfig":"24"},{"size":362,"mtime":1626135082829,"results":"25","hashOfConfig":"24"},{"size":851,"mtime":1626653257954,"results":"26","hashOfConfig":"24"},{"size":3458,"mtime":1626788928597,"results":"27","hashOfConfig":"24"},{"size":1823,"mtime":1626753884627,"results":"28","hashOfConfig":"24"},{"size":1247,"mtime":1626788553581,"results":"29","hashOfConfig":"24"},{"size":2347,"mtime":1626789490485,"results":"30","hashOfConfig":"24"},{"size":1926,"mtime":1626789302077,"results":"31","hashOfConfig":"24"},{"size":134,"mtime":1626135082826,"results":"32","hashOfConfig":"24"},{"size":2123,"mtime":1626769305709,"results":"33","hashOfConfig":"24"},{"size":1210,"mtime":1626769437801,"results":"34","hashOfConfig":"24"},{"size":1407,"mtime":1626750065674,"results":"35","hashOfConfig":"24"},{"size":933,"mtime":1626135082827,"results":"36","hashOfConfig":"24"},{"size":434,"mtime":1626135082829,"results":"37","hashOfConfig":"24"},{"size":1771,"mtime":1626771254816,"results":"38","hashOfConfig":"24"},{"size":927,"mtime":1626488847978,"results":"39","hashOfConfig":"24"},{"size":2642,"mtime":1626768735446,"results":"40","hashOfConfig":"24"},{"size":2706,"mtime":1626771589776,"results":"41","hashOfConfig":"24"},{"size":3589,"mtime":1626772540118,"results":"42","hashOfConfig":"24"},{"size":1248,"mtime":1626771315461,"results":"43","hashOfConfig":"24"},{"size":1578,"mtime":1626749864904,"results":"44","hashOfConfig":"24"},{"size":1850,"mtime":1626773034073,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"1bdmnrm",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"48"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"48"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"48"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"48"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"48"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107"},"/Users/jinkim/bye_blackhole/client/src/index.tsx",[],["108","109"],"/Users/jinkim/bye_blackhole/client/src/reportWebVitals.js",[],["110","111"],"/Users/jinkim/bye_blackhole/client/src/App.tsx",["112"],"//import logo from './logo.svg';\nimport React, {useState} from \"react\";\nimport './App.scss';\nimport Chat from \"./Chat/Chat\";\nimport Admin from \"./Admin/Admin\";\nimport Lobby from \"./Lobby/Lobby\"\nimport Login from './Login/Login'\nimport \"./Chat/styles/global.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nfunction App() {\n\treturn (\n\t<div className=\"App\">\n\t\t<Router>\n\t\t  <Switch>\n\t\t\t{\n\t\t\t<Route exact path=\"/\" render={() => \n\t\t\t\t<Login />\n\t\t\t}/>\n\t\t\t}\n\t\t\t<Route path=\"/Admin\" exact render={() =>\n\t\t\t\t<Admin/>\n\t\t\t}/>\n\t\t\t<Route path=\"/Lobby\" exact render={() =>\n\t\t\t\t<Lobby/>\n\t\t\t}/>\n\t\t\t<Route path=\"/Chat\" exact render={() =>\n\t\t\t\t<Chat/>\n\t\t\t}/>\n\t\t\t<Route\n\t\t\t\trender={({location}) => (\n\t\t\t\t\t  <div>\n\t\t\t\t\t\tNot Found {location.pathname}\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t/>\n\t\t  </Switch>\n\t\t</Router>\n\t</div>\n\t);\n  }\n\n\nexport default App;","/Users/jinkim/bye_blackhole/client/src/Chat/Chat.tsx",["113","114","115"],"/Users/jinkim/bye_blackhole/client/src/Lobby/Lobby.tsx",["116","117","118","119","120"],"import axios from \"axios\";\nimport {useEffect, useState, useCallback} from \"react\";\nimport \"./styles/Lobby.scss\"\nimport plusbtn from \"../Images/plusbutton.png\"\nimport SideBar from '../SideBar/SideBar'\nimport GameListModal from './GameListModal'\nimport ChatListModal from './ChatListModal'\nimport ChatList from './ChatList'\nimport GameList from './GameList'\n\nconst Lobby = () => {\n\tconst [MyID, setMyID] = useState('')\n\n\tuseEffect(() => {\n\t\tconst id = sessionStorage.getItem('nickname')\n\t\tif (id) setMyID(id)\n\t})\n\n\t//game list modal\n\tconst [GameListModalState, setGameListModalState] = useState(false);\n\tconst openGameListModal = () => {\n\t\tsetGameListModalState(true);\n\t}\n\tconst closeGameListModal = () => {\n\t\tsetGameListModalState(false);\n\t}\n\n\t//chat list modal\n\tconst [ChatListModalState, setChatListModalState] = useState(false);\n\tconst openChatListModal = () => {\n\t\tsetChatListModalState(true);\n\t}\n\tconst closeChatListModal = () => {\n\t\tsetChatListModalState(false);\n\t}\n\n\treturn (\n\t<div id=\"App-Container\">\n\t\t<span className=\"App-Left\">\n\t\t\t<div className=\"list-box\">\n\t\t\t\t<div className=\"listName\">\n\t\t\t\t\tGame\n\t\t\t\t\t<button type=\"button\" className=\"plusbtn\" onClick={openGameListModal}>\n\t\t\t\t\t\t<img src={plusbtn} width=\"30\" height=\"30\"/>\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t\t<GameListModal open={GameListModalState} close={closeGameListModal} MyID={MyID}/>\n\t\t\t\t<hr/>\n\t\t\t\t<GameList/>\n\t\t\t</div>\n\n\t\t\t<div className=\"list-box\">\n\t\t\t\t<div className=\"listName\">\n\t\t\t\t\tChat<button type=\"button\" className=\"plusbtn\" onClick={openChatListModal}><img src={plusbtn} width=\"30\" height=\"30\"/></button>\n\t\t\t\t</div>\n\t\t\t\t<ChatListModal open={ChatListModalState} close={closeChatListModal} MyID={MyID}/>\n\t\t\t\t<hr/>\n\t\t\t\t<ChatList MyID={MyID}/>\n\t\t\t</div>\n\t\t</span>\n\t\t<span className=\"App-Right\">\n\t\t\t<SideBar />\n\t\t</span>\n\t</div>\n\t)\n}\n\nexport default Lobby;","/Users/jinkim/bye_blackhole/client/src/Chat/ChatInput.tsx",["121","122"],"import React, { useEffect, useRef, useState } from \"react\";\nimport \"./styles/ChatInput.css\";\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport {Button} from \"react-bootstrap\";\n\nconst ChatInput = ({socket}: any) => {\n\tconst [chatMessage, setChatMessage] = useState(\"\");\n\tconst [MyID, setMyID] = useState('')\n\tconst [roomName, setRoomName] = useState('')\n\n\tuseEffect(() => {\n\t\tconst id = sessionStorage.getItem('nickname')\n\t\tconst room = sessionStorage.getItem('roomName')\n\t\tif (id) setMyID(id)\n\t\tif (room) setRoomName(room)\n\t})\n\n\tconst handleSubmit = (e:any) => {\n\t\te.preventDefault();\n\t\tsocket.emit(\"onSend\", {\n\t\t\ttitle: roomName,\n\t\t\tnickname: MyID,\n\t\t\tmsg: chatMessage,\n\t\t\tdate: new Date().toLocaleTimeString(),\n\t\t});\n\t\tsetChatMessage(\"\");\n\t};\n\n  const onChatMessageChange = (e:any) => {\n    setChatMessage(e.target.value);\n  };\n\n  return (\n    <div>\n      <form className=\"ChatInput-form\" onSubmit={handleSubmit}>\n        <input type=\"text\" className=\"form-control\"\n          placeholder=\"Enter message\"\n          value={chatMessage}\n          onChange={onChatMessageChange}\n        ></input>\n        <Button type=\"button\" className=\"btn btn-sm\" onClick={handleSubmit}>send</Button>\n      </form>\n    </div>\n  );\n};\n\nexport default ChatInput;","/Users/jinkim/bye_blackhole/client/src/Chat/UserList.tsx",["123","124","125","126","127","128","129"],"/Users/jinkim/bye_blackhole/client/src/Chat/ChatLog.tsx",["130","131","132","133"],"/Users/jinkim/bye_blackhole/client/src/Chat/Loading.tsx",[],"/Users/jinkim/bye_blackhole/client/src/Lobby/ChatListModal.tsx",["134","135"],"import React, {useState, useCallback} from 'react';\nimport axios from \"axios\";\nimport \"./styles/Modal.scss\";\n\nconst ChatListModal = ( props: any ) => {\n\tconst { open, close, MyID} = props;\n\n\tconst [NewRoomName, setNewRoomName] = useState(\"\");\n\tconst [RoomPWD, setRoomPWD] = useState(\"\");\n\tconst [IsProtectedRoom, setIsProtectedRoom] = useState(false);\n\tconst [IsUniqueName, setIsUniqueName] = useState(true)\n\n\n\tconst handleRoomNameChange = useCallback((e:any) => {\n\t\tsetNewRoomName(e.target.value);\n\t}, []);\n\tconst handelRoomPWD = useCallback((e:any) => {\n\t\tsetRoomPWD(e.target.value)\n\t}, []);\n\n\tconst ProtectedRoomCheckHandler = useCallback( (e:any) => {\n\t\tsetRoomPWD('')\n\t\tsetIsProtectedRoom(!IsProtectedRoom);\n\t},[IsProtectedRoom]);\n\n\n\tfunction makeNewChat(){\n\t\tif (RoomPWD === '')\n\t\t\tvar security = 'public'\n\t\telse\n\t\t\tvar security = 'protected'\n\t\taxios.post('/Lobby/chatCreate', {title:NewRoomName, password:RoomPWD, owner_id:MyID, security:security})\n\t\t.then((res) => {\n\t\t\tdocument.location.href = '/chat'\n\t\t\tsessionStorage.setItem('roomName', NewRoomName)\n\t\t})\n\t\t.catch((err) => {\n\t\t\tsetIsUniqueName(false)\n\t\t})\n\t}\n\n\treturn (\n\t\t<div className={ open ? 'openModal Modal' : 'Modal' }>\n\t\t\t{ open ? (\n\t\t\t\t<section>\n\t\t\t\t\t<header>\n\t\t\t\t\t\tNew Chatting Room\n\t\t\t\t\t\t<button className=\"close\" onClick={close}> &times; </button>\n\t\t\t\t\t</header>\n\t\t\t\t\t<main>\n\t\t\t\t\t\t<label >\n\t\t\t\t\t\t\t<b>Room Name:&nbsp;</b>\n\t\t\t\t\t\t\t<input onChange={handleRoomNameChange} maxLength={20}></input>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t&nbsp;&nbsp;<input type=\"checkbox\" checked={IsProtectedRoom} onChange={(e) => ProtectedRoomCheckHandler(e)}></input> protected\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t{IsUniqueName ? null : <label className=\"error\">이미 존재하는 방입니다.</label>}\n\t\t\t\t\t\t{IsProtectedRoom ?\n\t\t\t\t\t\t\t<div className=\"checkbox-pwd\">\n\t\t\t\t\t\t\t<b>password:&nbsp;</b>\n\t\t\t\t\t\t\t<input type=\"password\" onChange={handelRoomPWD}></input>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t: null\n\t\t\t\t\t\t}\n\t\t\t\t\t</main>\n\t\t\t\t\t<footer>\n\t\t\t\t\t\t<a className=\"btn btn-primary\" onClick={makeNewChat}><b>Enter</b></a>\n\t\t\t\t\t</footer>\n\t\t\t\t</section>\n\t\t\t) : null }\n\t\t</div>\n\t)\n}\n\nexport default ChatListModal","/Users/jinkim/bye_blackhole/client/src/Lobby/GameListModal.tsx",["136"],"import React , {useState, useCallback}from 'react';\nimport axios from \"axios\";\nimport \"./styles/Modal.scss\";\n\nconst GameListModal = ( props: any ) => {\n\tconst { open, close, MyID} = props;\n\n\tconst [IsSpeed, setIsSpeed] = useState(false)\n\n\tconst modeHandler = useCallback((e:any) => {\n\t\tif (e.target.value === 'speed')\n\t\t\tsetIsSpeed(true)\n\t\telse\n\t\t\tsetIsSpeed(false)\n\t}, [])\n\n\tfunction makeNewGame(){\n\t\taxios.post('/Lobby/GameCreate', {id:MyID, speed:IsSpeed, ladder:false})\n\t\t.then((res) => {\n\t\t\tdocument.location.href = '/Game'\n\t\t})\n\t\t.catch((err) => {\n\t\t\t//매칭실패!!\n\t\t})\n\t}\n\n\treturn (\n\t\t<div className={ open ? 'openModal Modal' : 'Modal' }>\n\t\t\t{ open ? (\n\t\t\t\t<section>\n\t\t\t\t\t<header>\n\t\t\t\t\t\tNew Game\n\t\t\t\t\t\t<button className=\"close\" onClick={close}> &times; </button>\n\t\t\t\t\t</header>\n\t\t\t\t\t<main>\n\t\t\t\t\t\t<span><input type=\"radio\" name=\"speed\" value=\"normal\" onClick={modeHandler} /> normal &nbsp;&nbsp;</span>\n\t\t\t\t\t\t<span><input type=\"radio\" name=\"speed\" value=\"speed\" onClick={modeHandler} /> speed </span>\n\t\t\t\t\t</main>\n\t\t\t\t\t<footer>\n\t\t\t\t\t\t<a className=\"btn btn-primary\" onClick={makeNewGame}><b>Matching Start</b></a>\n\t\t\t\t\t</footer>\n\t\t\t\t</section>\n\t\t\t) : null }\n\t\t</div>\n\t)\n}\n\nexport default GameListModal","/Users/jinkim/bye_blackhole/client/src/Chat/UserListModal.tsx",["137","138"],"import axios from 'axios';\nimport React from 'react';\nimport \"../SideBar/styles/UserInfoModal.scss\";\n\nconst UserListModal = ( props: any ) => {\n\tconst { open, close, targetID, roomName, getRoomInfoMutate} = props;\n\n\tasync function kickUser(){\n\t\tawait axios.get('chat/kick?title=' + roomName + '&id=' + targetID)\n\t\tclose()\n\t\tgetRoomInfoMutate()\n\t}\n\n\tasync function BanUser(){\n\t\tawait axios.get('chat/ban?title=' + roomName + '&id=' + targetID)\n\t\tclose()\n\t\tgetRoomInfoMutate()\n\t}\n\n\treturn (\n\t\t<div className={ open ? 'openModal Modal' : 'Modal' }>\n\t\t\t{ open ? (\n\t\t\t\t<section>\n\t\t\t\t\t<div className=\"head\">\n\t\t\t\t\t\t<button className=\"close\" onClick={close}> &times; </button>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"content targetID\">\n\t\t\t\t\t\t{targetID}\n\t\t\t\t\t</div>\n\t\t\t\t\t<hr/>\n\t\t\t\t\t<div className='bottom'>\n\t\t\t\t\t\t<span className=\"onoffbtn\">\n\t\t\t\t\t\t\t<input type=\"checkbox\" id=\"switch1\" name=\"switch1\" className=\"input__on-off\"/>\n\t\t\t\t\t\t\t<label htmlFor=\"switch1\" className=\"label__on-off\">\n\t\t\t\t\t\t\t\t<span className=\"marble\"></span>\n\t\t\t\t\t\t\t\t<span className=\"on\">Mute</span>\n\t\t\t\t\t\t\t\t<span className=\"off\">Unmute</span>\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<span><a className=\"btn button\" onClick={kickUser}><b>Kick</b></a></span>\n\t\t\t\t\t\t\t<span><a className=\"btn button kick-button\" onClick={BanUser}><b>Ban</b></a></span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</section>\n\t\t\t) : null }\n\t\t</div>\n\t)\n}\n\nexport default UserListModal","/Users/jinkim/bye_blackhole/client/src/Images/Images.tsx",["139","140","141","142","143","144"],"import gamer_boy from './gamer_boy.png'\nimport gamer_girl from './gamer_girl.png'\nimport gamer_keyboard from './gamer_keyboard.png'\nimport gamer_woman from './gamer_woman.png'\nimport man_icon from './man_icon.png'\nimport woman_icon from './woman_icon.png'\n\nexport const findImg = (icon_name:string) => {\n\tif ('gamer_boy' == icon_name)\n\t\treturn (gamer_boy)\n\telse if('gamer_girl' == icon_name)\n\t\treturn (gamer_girl)\n\telse if('gamer_keyboard' == icon_name)\n\t\treturn (gamer_keyboard)\n\telse if('gamer_woman' == icon_name)\n\t\treturn (gamer_woman)\n\telse if('man_icon' == icon_name)\n\t\treturn (man_icon)\n\telse if('woman_icon' == icon_name)\n\t\treturn (woman_icon)\n}\n\nexport const allImages = [\n\t{value: 'gamer_keyboard', src: gamer_keyboard},\n\t{value: 'gamer_woman', src: gamer_woman},\n\t{value: 'gamer_boy', src: gamer_boy},\n\t{value: 'gamer_girl', src: gamer_girl},\n\t{value: 'man_icon', src: man_icon},\n\t{value: 'woman_icon', src: woman_icon},\n]","/Users/jinkim/bye_blackhole/client/src/Login/Login.tsx",["145"],"import React, { useEffect, useState } from \"react\";\n\nconst Login = () => {\n\tconst [IntraID, setIntraID] = useState('')\n\n\tconst handleIntraIDChange = (e:any) => {\n\t\tsetIntraID(e.target.value);\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<input onChange={handleIntraIDChange}></input>\n\t\t\t<button onClick= {() => {\n\t\t\t\tdocument.location.href = \"/Admin\"\n\t\t\t\tsessionStorage.setItem('intraID', IntraID)\n\t\t\t}}>Login</button>\n\t\t</div>\n\t)\n}\nexport default Login","/Users/jinkim/bye_blackhole/client/src/Lobby/ChatList.tsx",["146","147","148","149","150","151"],"import {useEffect, useState, useCallback} from \"react\";\nimport axios from \"axios\";\nimport useSwr from 'swr';\nimport lock from '../Images/lock.png'\nimport unlock from '../Images/unlock.png'\nimport \"./styles/ChatList.scss\"\nimport PwdCheckModal from \"./PwdCheckModal\";\n\nconst ChatList = (props: any) => {\n\tconst {MyID} = props\n\n\tconst fetcher = async (url:string) => {\n\t\tconst res = await axios.get(url)\n\t\treturn res.data;\n\t}\n\n\tconst {data, error} = useSwr<{title:string, num:number, security:string}[]>('Lobby/chatList', fetcher)\n\n\tconst [ClickedRoomTitle, setClickedRoomTitle] = useState('')\n\tconst [PwdCheckModalState, setPwdCheckModalState] = useState(false);\n\n\tconst openPwdCheckModal = (title:string) => {\n\t\tsetPwdCheckModalState(true);\n\t\tsetClickedRoomTitle(title)\n\t}\n\tconst closePwdCheckModal = () => {\n\t\tsetPwdCheckModalState(false);\n\t}\n\n\tasync function enterPublicRoom(title:string) {\n\t\tawait axios.post('/Lobby/enter', {title:title, id:MyID, password:''})\n\t\tdocument.location.href = '/chat'\n\t\tsessionStorage.setItem('roomName', title)\n\t}\n\n\treturn (\n\t<>\n\t{data?.map(chatRoom=>\n\t\t<button type=\"button\" className=\"chatList\" onClick={() => {\n\t\t\tif (chatRoom.security === 'protected')\n\t\t\t\topenPwdCheckModal(chatRoom.title)\n\t\t\telse\n\t\t\t\tenterPublicRoom(chatRoom.title)\n\t\t}}>\n\t\t\t<span className=\"chatList-left\">\n\t\t\t\t<div className=\"chatList-num\">{chatRoom.num}</div>\n\t\t\t</span>\n\t\t\t<span className=\"lock\">\n\t\t\t\t{chatRoom.security != \"protected\" ? <img src={unlock} width=\"20\" height=\"20\"/> : <img src={lock} width=\"20\" height=\"20\"/>}\n\t\t\t</span>\n\t\t\t<span className=\"roomName\">\n\t\t\t\t{chatRoom.title}\n\t\t\t</span>\n\n\t\t</button>\n\t)}\n\t<PwdCheckModal open={PwdCheckModalState} close={closePwdCheckModal} chatRoomID={ClickedRoomTitle} MyID={MyID} />\n\t</>\n\t)\n}\n\nexport default ChatList","/Users/jinkim/bye_blackhole/client/src/Lobby/GameList.tsx",["152","153","154","155","156"],"import {useEffect, useState, useCallback} from \"react\";\nimport axios from \"axios\";\nimport useSwr from 'swr';\nimport speed from '../Images/speed.png'\nimport \"./styles/GameList.scss\"\n\nconst GameList = () => {\n\tconst fetcher = async (url:string) => {\n\t\tconst res = await axios.get(url)\n\t\treturn res.data;\n\t}\n\n\tconst {data, error} = useSwr<{p1:string, p2:string, speed:boolean, ladder:boolean}[]>('Lobby/gameList', fetcher)\n\n\treturn (\n\t<>\n\t{data?.map(gameRoom=>\n\t\t<button type=\"button\" className=\"GameList\">\n\t\t\t<span className=\"GameList-left\">\n\t\t\t\t<div className={gameRoom.ladder ? \"GameList-icon ladder\" : \"GameList-icon\"}>\n\t\t\t\t\t{gameRoom.speed ? <img src={speed} width=\"30\" height=\"30\"/> : 'N'}\n\t\t\t\t</div>\n\t\t\t</span>\n\t\t\t<span className=\"GameList-right\">\n\t\t\t\t<div className=\"player\">{gameRoom.p1}</div>\n\t\t\t\t<div>vs</div>\n\t\t\t\t<div className=\"player\">{gameRoom.p2}</div>\n\t\t\t</span>\n\t\t</button>\n\t)}\n\t</>\n\t)\n}\n\nexport default GameList","/Users/jinkim/bye_blackhole/client/src/Admin/Admin.tsx",["157","158","159","160"],"import React, {useEffect, useState}from \"react\";\nimport \"./styles/Admin.scss\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {allImages, findImg} from '../Images/Images';\nimport axios from \"axios\";\n\nconst Admin = () => {\n\tconst [IntraID, setIntraID] = useState('')\n\tconst [Nickname, setNickname] = useState('')\n\tconst [Icon, setIcon] = useState('')\n\tconst [OldNickname, setOldNickname] = useState('')\n\tconst [OldIcon, setOldIcon] = useState('')\n\tconst [SignUp, setSignUp] = useState(true)\n\tconst [IsUnique, setIsUnique] = useState(true)\n\n\tuseEffect(() => {\n\t\tconst intra_id = sessionStorage.getItem(\"intraID\")\n\t\tif (intra_id) setIntraID(intra_id);\n\n\t\tconst old_nickname = sessionStorage.getItem(\"nickname\");\n\t\tif (old_nickname) {\n\t\t\tsetOldNickname(old_nickname);\n\t\t\tsetSignUp(false);\n\t\t}\n\n\t\tconst old_icon = sessionStorage.getItem(\"icon\")\n\t\tif (old_icon) setOldIcon(old_icon)\n\t})\n\n\tconst handleNicknameChange = (e:any) => {\n\t\tsetNickname(e.target.value);\n\t};\n\tconst handleIconChange = (e:any) => {\n\t\tsetIcon(e.target.value);\n\t};\n\n\tasync function saveAdmin(isSignUp: boolean){\n\t\tconst body = {\n\t\t\tintra_id: IntraID,\n\t\t\ticon: Icon ? Icon : OldIcon,\n\t\t\tnickname: Nickname ? Nickname : OldNickname,\n\t\t}\n\t\tif (!SignUp)\n\t\t{\n\t\t\taxios.patch('/admin', body)\n\t\t\t.then((Response) => {\n\t\t\t\tif (Nickname) sessionStorage.setItem(\"nickname\", Nickname);\n\t\t\t\tif (Icon) sessionStorage.setItem(\"icon\", Icon);\n\t\t\t\tdocument.location.href=\"/lobby\"\n\t\t\t})\n\t\t\t.catch((Error) => {\n\t\t\t\tsetIsUnique(false)\n\t\t\t})\n\t\t}\n\t\telse\n\t\t{\n\t\t\taxios.post('/admin', body)\n\t\t\t.then((Response) => {\n\t\t\t\tif (Nickname) sessionStorage.setItem(\"nickname\", Nickname);\n\t\t\t\tif (Icon) sessionStorage.setItem(\"icon\", Icon);\n\t\t\t\tdocument.location.href=\"/lobby\"\n\t\t\t})\n\t\t\t.catch((Error) => {\n\t\t\t\tsetIsUnique(false)\n\t\t\t})\n\t\t}\n\t}\n\n\treturn (\n\t<div className=\"Admin-container\">\n\t\t{SignUp ? null : \n\t\t\t<div>\n\t\t\t\t<img src={findImg(OldIcon)} width=\"30\" height=\"30\"/>\n\t\t\t\t&nbsp;{OldNickname}\n\t\t\t\t<hr/>\n\t\t\t</div>\n\t\t}\n\t\t<input onChange={handleNicknameChange} placeholder=\"Nickname\" maxLength={10}/>\n\t\t{ IsUnique ? null:<div className=\"nickname-error\">이미 사용중인 닉네임입니다.</div>}\n\n\t\t<div className=\"icon-box\">\n\t\t{allImages.map(({value, src}) =>\n\t\t\t<span className=\"icon\">\n\t\t\t\t<input type=\"radio\" name=\"icon\" value={value} onChange={handleIconChange} className=\"icon-input\"/>\n\t\t\t\t<img src={src} width=\"50\" height=\"50\" className=\"icon-img\"></img>\n\t\t\t</span>\n\t\t)}\n\t\t</div>\n\n\t\t<div className=\"Join-button\">\n\t\t\t{\n\t\t\t\tSignUp && (!Nickname || !Icon) ? null :\n\t\t\t\t<a className=\"btn btn-dark\" onClick={() => saveAdmin(SignUp)}><b>OK</b></a>\n\t\t\t}\n\t\t</div>\n\t</div>\n\t);\n};\n\nexport default Admin;","/Users/jinkim/bye_blackhole/client/src/SideBar/SideBar.tsx",["161","162","163","164","165"],"import axios from \"axios\";\nimport useSwr from 'swr';\nimport {useEffect, useState} from \"react\";\nimport \"./styles/SideBar.scss\"\nimport {findImg} from '../Images/Images'\nimport UserInfoModal from \"./UserInfoModal\";\nimport GetChatList from './GetChatList'\n\nconst SideBar = () => {\n\tconst [MyID, setMyID] = useState('')\n\tconst [MyIcon, setMyIcon] = useState('')\n\t\n\tuseEffect(() => {\n\t\tconst id = sessionStorage.getItem('nickname')\n\t\tconst icon = sessionStorage.getItem('icon')\n\t\tif (id) setMyID(id)\n\t\tif (icon) setMyIcon(icon)\n\t})\n\t\n\tconst fetcher = async (url:string) => {\n\t\tif (MyID)\n\t\t{\n\t\t\tconst res = await axios.get(url)\n\t\t\treturn res.data;\n\t\t}\n\t}\n\n\tconst {data, error, mutate} = useSwr<{id:string, icon:string, state:string, isFriend:boolean}[]>('/Lobby/userList?id=' + MyID, fetcher)\n\n\n\t//UserInfoModal\n\tconst [TargetID, setTargetID] = useState('');\n\tconst [UserInfoModalState, setUserInfoModalState] = useState(false);\n\tconst openUserInfoModal = async(id:string) => {\n\t\tsetUserInfoModalState(true);\n\t\tsetTargetID(id);\n\t}\n\tconst closeUserInfoModal = () => {\n\t\tsetUserInfoModalState(false);\n\t\tmutate()\n\t}\n\n\treturn(\n\t<aside>\n\t\t<div className=\"top\">\n\t\t\t<span className=\"MyID\">{MyID}</span>\n\t\t\t<button type=\"button\" className=\"myIcon\" onClick={() => openUserInfoModal(MyID)}>\n\t\t\t\t<img src={findImg(MyIcon)} width=\"30\" height=\"30\"></img>\n\t\t\t</button>\n\t\t</div>\n\t\t<div className=\"bottom\">\n\t\t\t<div className=\"title\"># friends</div>\n\t\t\t{data?.map(user=> user.isFriend ?\n\t\t\t\t<div>\n\t\t\t\t<button type=\"button\" className=\"user-btn\" onClick={() => openUserInfoModal(user.id)}>\n\t\t\t\t\t<img src={findImg(user.icon)}  width=\"20\" height=\"20\" className=\"user-icon\"/>\n\t\t\t\t\t{user.state === \"on\" ? <span className=\"userState online\">·</span> : null}\n\t\t\t\t\t{user.state === \"off\" ? <span className=\"userState offline\">·</span> : null}\n\t\t\t\t\t{user.state === \"gaming\" ? <span className=\"userState gaming\">·</span> : null}\n\t\t\t\t\t{user.id}\n\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t\t: null\n\t\t\t)}\n\t\t\t<div className=\"title\"># others</div>\n\t\t\t{data?.map(user => user.isFriend ? null :\n\t\t\t\t<div>\n\t\t\t\t<button type=\"button\" className=\"user-btn\" onClick={() => openUserInfoModal(user.id)}>\n\t\t\t\t\t<img src={findImg(user.icon)}  width=\"20\" height=\"20\" className=\"user-icon\"/>\n\t\t\t\t\t{user.state === \"on\" ? <span className=\"userState online\">·</span> : null}\n\t\t\t\t\t{user.state === \"off\" ? <span className=\"userState offline\">·</span> : null}\n\t\t\t\t\t{user.state === \"gaming\" ? <span className=\"userState gaming\">·</span> : null}\n\t\t\t\t\t{user.id}\n\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t\t\n\t\t\t<GetChatList myID={MyID}/>\n\n\t\t\t<UserInfoModal open={UserInfoModalState} close={closeUserInfoModal} myID={MyID} targetID={TargetID}/>\n\t\t</div>\n\t</aside>\n\t)\n}\nexport default SideBar;","/Users/jinkim/bye_blackhole/client/src/SideBar/UserInfoModal.tsx",["166","167","168","169","170","171","172"],"import React, { useEffect, useState, useCallback } from 'react';\nimport axios from \"axios\";\nimport useSwr from 'swr';\nimport \"./styles/UserInfoModal.scss\";\n\nconst UserInfoModal = ( props: any) => {\n\tconst { open, close, myID, targetID} = props;\n\tconst [IsFriend, setIsFriend] = useState<boolean>()\n\tconst [IsBlock, setIsBlock] = useState<boolean>()\n\t\n\tconst fetcher = async (url:string) => {\n\t\tif (myID && targetID)\n\t\t{\n\t\t\tconst res = await axios.get(url)\n\t\t\tsetIsFriend(res.data.friend)\n\t\t\tsetIsBlock(res.data.block)\n\t\t\treturn res.data;\n\t\t}\n\t}\n\n\tconst {data, error} = useSwr<{history:{win:boolean, id:string}[] ,friend:boolean, block:boolean, win:number, lose:number} | {history:{win:boolean, id:string}[], win:number, lose:number}>('profile?myID=' + myID + '&otherID=' + targetID, fetcher)\n\n\tconst FriendHandler = useCallback( async() => {\n\t\tawait axios.put('profile/friend', {myID:myID, otherID:targetID, isFriend:!IsFriend})\n\t\tsetIsFriend(!IsFriend);\n\t},[IsFriend]);\n\t\n\tconst BlockHandler = useCallback( async() => {\n\t\tawait axios.put('profile/block', {myID:myID, otherID:targetID, isBlock:!IsBlock})\n\t\tsetIsBlock(!IsBlock);\n\t},[IsBlock]);\n\n\n\tasync function makeDM(){\n\t\tif (myID.localeCompare(targetID) < 0)\n\t\t\tvar chatRoomName = 'DM_' + myID + '_' + targetID\n\t\telse\n\t\t\tvar chatRoomName = 'DM_' + targetID + '_' + myID\n\t\tawait axios.post('/Lobby/chatCreate', {title: chatRoomName, password:'', owner_id:myID, security:'private'})\n\t\tdocument.location.href = '/chat'\n\t\tsessionStorage.setItem('roomName', chatRoomName)\n\t}\n\n\treturn (\n\t\t<div className={ open ? 'openModal Modal' : 'Modal' }>\n\t\t\t{ open ? (\n\t\t\t\t<section>\n\t\t\t\t\t<div className=\"head\">\n\t\t\t\t\t\t<button className=\"close\" onClick={close}> &times; </button>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"content\">\n\t\t\t\t\t\t<div className=\"header\">\n\t\t\t\t\t\t\t<div className=\"name\">{targetID}</div>\n\t\t\t\t\t\t\t<span className=\"num win-color\">W {data?.win}</span>\n\t\t\t\t\t\t\t<span className=\"num lose-color\"> &nbsp;&nbsp; L {data?.lose}</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<hr/>\n\t\t\t\t\t\t<div className=\"main\">\n\t\t\t\t\t\t\t{data?.history?.map(match=>\n\t\t\t\t\t\t\t<div className={match.win ? 'matchHistory win-backColor' : 'matchHistory lose-backColor'}>\n\t\t\t\t\t\t\t\t<span className='match-left'>{match.id}</span>\n\t\t\t\t\t\t\t\t<span className={match.win ? 'match-right win-color' : 'match-right lose-color'}>{match.win ? 'Win' : 'Lose'}</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"bottom\">\n\t\t\t\t\t{myID === targetID ? \n\t\t\t\t\t\t<a className=\"btn button\" onClick={()=> document.location.href = '/Admin/'}><b>Admin</b></a>\n\t\t\t\t\t\t:\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t<span className=\"onoffbtn\">\n\t\t\t\t\t\t\t<input type=\"checkbox\" id=\"switch1\" name=\"switch1\" className=\"input__on-off\" checked={IsFriend} onChange={FriendHandler}/>\n\t\t\t\t\t\t\t<label htmlFor=\"switch1\" className=\"label__on-off\">\n\t\t\t\t\t\t\t\t<span className=\"marble\"></span>\n\t\t\t\t\t\t\t\t<span className=\"on\">Friend</span>\n\t\t\t\t\t\t\t\t<span className=\"off\">Unfriend</span>\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<span className=\"onoffbtn\">\n\t\t\t\t\t\t\t<input type=\"checkbox\" id=\"switch2\" name=\"switch2\" className=\"input__on-off\" checked={!IsBlock} onChange={BlockHandler}/>\n\t\t\t\t\t\t\t<label htmlFor=\"switch2\" className=\"label__on-off\">\n\t\t\t\t\t\t\t\t<span className=\"marble\"></span>\n\t\t\t\t\t\t\t\t<span className=\"on\">Unblock</span>\n\t\t\t\t\t\t\t\t<span className=\"off\">Block</span>\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<a className=\"btn button\" href=\"Game\"><b>Game</b></a>\n\t\t\t\t\t\t\t<a className=\"btn button dm-button\" onClick={makeDM}><b>DM</b></a>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t}\n\t\t\t\t\t</div>\n\t\t\t\t</section>\n\t\t\t) : null }\n\t\t</div>\n\t)\n}\n\nexport default UserInfoModal","/Users/jinkim/bye_blackhole/client/src/Lobby/PwdCheckModal.tsx",["173","174"],"import React, {useState, useCallback, useEffect} from 'react';\nimport axios from \"axios\";\nimport \"./styles/Modal.scss\";\n\nconst PwdCheckModal = ( props: any ) => {\n\tconst { open, close, chatRoomID, MyID} = props;\n\n\tconst [PWD, setPWD] = useState(\"\");\n\tconst [WorngPWD, setWrongPWD] = useState(false)\n\n\tconst handelPWD = useCallback((e:any) => {\n\t\tsetPWD(e.target.value)\n\t}, []);\n\n\tasync function confirmPWD(){\n\t\taxios.post('/Lobby/enter', {title:chatRoomID, id:MyID, password:PWD})\n\t\t.then((res) => {\n\t\t\tdocument.location.href = '/Chat';\n\t\t\tsessionStorage.setItem('roomName', chatRoomID)\n\t\t})\n\t\t.catch((err) => {\n\t\t\tsetWrongPWD(true)\n\t\t})\n\t}\n\n\treturn (\n\t\t<div className={ open ? 'openModal Modal' : 'Modal' }>\n\t\t\t{ open ? (\n\t\t\t\t<section>\n\t\t\t\t\t<header>\n\t\t\t\t\t\tEnter Password\n\t\t\t\t\t\t<button className=\"close\" onClick={() => {\n\t\t\t\t\t\t\tclose()\n\t\t\t\t\t\t\tsetWrongPWD(false)\n\t\t\t\t\t\t}}> &times; </button>\n\t\t\t\t\t</header>\n\t\t\t\t\t<main>\n\t\t\t\t\t\tpassword: <input onChange={handelPWD}></input>\n\t\t\t\t\t\t{WorngPWD ? <label className=\"error\">틀린 비밀번호입니다.</label> : null}\n\t\t\t\t\t</main>\n\t\t\t\t\t<footer>\n\t\t\t\t\t\t<a className=\"btn btn-primary\" onClick={confirmPWD}><b>Enter</b></a>\n\t\t\t\t\t</footer>\n\t\t\t\t</section>\n\t\t\t) : null }\n\t\t</div>\n\t)\n}\n\nexport default PwdCheckModal","/Users/jinkim/bye_blackhole/client/src/SideBar/GetChatList.tsx",["175"],"import axios from \"axios\";\nimport useSwr from 'swr';\nimport \"./styles/GetChatList.scss\"\n\nconst GetChatList = (props: any) => {\n\tconst {myID} = props\n\n\tconst fetcher = async (url:string) => {\n\t\tif (myID)\n\t\t{\n\t\t\tconst res = await axios.get(url)\n\n\t\t\t//kick or ban\n\t\t\tif (window.location.pathname === '/chat')\n\t\t\t{\n\t\t\t\tconst currentRoom = sessionStorage.getItem('roomName')\n\t\t\t\tvar leave = true\n\t\t\t\t\n\t\t\t\tfor(let i = 0; i < res.data.length; i++)\n\t\t\t\t{\n\t\t\t\t\tif (res.data[i].title === currentRoom)\n\t\t\t\t\t\tleave = false\n\t\t\t\t}\n\n\t\t\t\tif (leave)\n\t\t\t\t{\n\t\t\t\t\twindow.location.href = '/lobby'\n\t\t\t\t\tsessionStorage.removeItem('roomName')\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn res.data;\n\t\t}\n\t}\n\n\tconst {data, error, mutate} = useSwr<{title:string, num: number}[]>('/Lobby/myChatList?id=' + myID, fetcher)\n\n\tconst DelChat = async(title:string) => {\n\t\tawait axios.delete('Lobby?title=' + title + '&id=' + myID)\n\t\tif (window.location.pathname === '/chat' && sessionStorage.getItem('roomName') === title)\n\t\t{\n\t\t\twindow.location.href = '/lobby'\n\t\t\tsessionStorage.removeItem('roomName')\n\t\t}\n\t\tmutate()\n\t}\n\n\treturn (\n\t<>\n\t\t<div className=\"title\"># my chats</div>\n\t\t{data?.map(chat=>\n\t\t\t<div className=\"chat\">\n\t\t\t\t<button type=\"button\" className=\"chat-btn\" onClick={() => {\n\t\t\t\t\t\tdocument.location.href = '/Chat';\n\t\t\t\t\t\tsessionStorage.setItem('roomName', chat.title);\n\t\t\t\t}}>\n\t\t\t\t\t<span className=\"chatNum\">{chat.num}</span>\n\t\t\t\t\t<span>&nbsp;{chat.title}</span>\n\t\t\t\t</button>\n\t\t\t\t<button type=\"button\" className=\"chatLeave\" onClick={() => DelChat(chat.title)}>X</button>\n\t\t\t</div>\n\t\t)}\n\t</>\n\t)\n}\n\nexport default GetChatList","/Users/jinkim/bye_blackhole/client/src/Chat/ChatSettingModal.tsx",["176","177","178"],"import axios from 'axios';\nimport useSwr from 'swr';\nimport React, {useState, useCallback} from 'react';\nimport \"./styles/ChatSettingModal.scss\";\n\nconst ChatSettingModal = ( props: any ) => {\n\tconst { open, close, chatRoomID, MyPermission} = props;\n\n\tasync function changePWD(){\n\t\tawait axios.post('chat/setting' , {title:chatRoomID, password:RoomPWD})\n\t\tclose();\n\t}\n\n\tconst fetcher = async (url:string) => {\n\t\tif (chatRoomID)\n\t\t{\n\t\t\tconst res = await axios.get(url)\n\t\t\treturn res.data;\n\t\t}\n\t}\n\tconst {data, error, mutate} = useSwr<{id:string}[]>('Chat/banList?title=' + chatRoomID, fetcher)\n\n\tasync function Unban(user: {id:string}){\n\t\tawait axios.get('chat/unban?title=' + chatRoomID + '&id=' + user)\n\t\tmutate()\n\t}\n\n\tconst [RoomPWD, setRoomPWD] = useState('');\n\tconst handelRoomPWD = useCallback((e:any) => {\n\t\tsetRoomPWD(e.target.value)\n\t}, []);\n\n\treturn (\n\t\t<div className={ open ? 'openModal Modal' : 'Modal' }>\n\t\t\t{ open ? (\n\t\t\t\t<section>\n\t\t\t\t\t<header>\n\t\t\t\t\t\tSetting\n\t\t\t\t\t\t<button className=\"close\" onClick={close}> &times; </button>\n\t\t\t\t\t</header>\n\t\t\t\t\t<main>\n\t\t\t\t\t\t<div className=\"ban-name\"><b>Banned users</b></div>\n\t\t\t\t\t\t<div className=\"ban-box\">\n\t\t\t\t\t\t\t{data?.map(user => \n\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<div className=\"ban-inlineBox\">\n\t\t\t\t\t\t\t\t\t<span className=\"ban-user\">{user}</span>\n\t\t\t\t\t\t\t\t\t<span className=\"unban\" onClick={() => Unban(user)}><a className=\"btn unban-btn\">x</a></span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<hr/>\n\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{MyPermission === 'owner' ? \n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t\t\tnew password:&nbsp;\n\t\t\t\t\t\t\t<input onChange={handelRoomPWD} value={RoomPWD}></input>\n\t\t\t\t\t\t\t&nbsp;\n\t\t\t\t\t\t\t<a className=\"btn btn-primary btn-sm\" onClick={changePWD}><b>Change</b></a>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t: null\n\t\t\t\t\t\t}\n\t\t\t\t\t</main>\n\t\t\t\t\t<footer>\n\t\t\t\t\t</footer>\n\t\t\t\t</section>\n\t\t\t) : null }\n\t\t</div>\n\t)\n}\n\nexport default ChatSettingModal",{"ruleId":"179","replacedBy":"180"},{"ruleId":"181","replacedBy":"182"},{"ruleId":"179","replacedBy":"180"},{"ruleId":"181","replacedBy":"182"},{"ruleId":"183","severity":1,"message":"184","line":2,"column":16,"nodeType":"185","messageId":"186","endLine":2,"endColumn":24},{"ruleId":"183","severity":1,"message":"187","line":34,"column":15,"nodeType":"185","messageId":"186","endLine":34,"endColumn":20},{"ruleId":"188","severity":1,"message":"189","line":60,"column":2,"nodeType":"185","endLine":60,"endColumn":11,"suggestions":"190"},{"ruleId":"191","severity":1,"message":"192","line":102,"column":7,"nodeType":"193","endLine":102,"endColumn":49},{"ruleId":"183","severity":1,"message":"194","line":1,"column":8,"nodeType":"185","messageId":"186","endLine":1,"endColumn":13},{"ruleId":"183","severity":1,"message":"195","line":2,"column":30,"nodeType":"185","messageId":"186","endLine":2,"endColumn":41},{"ruleId":"188","severity":1,"message":"189","line":14,"column":2,"nodeType":"185","endLine":14,"endColumn":11,"suggestions":"196"},{"ruleId":"191","severity":1,"message":"192","line":44,"column":7,"nodeType":"193","endLine":44,"endColumn":50},{"ruleId":"191","severity":1,"message":"192","line":54,"column":80,"nodeType":"193","endLine":54,"endColumn":123},{"ruleId":"183","severity":1,"message":"197","line":1,"column":28,"nodeType":"185","messageId":"186","endLine":1,"endColumn":34},{"ruleId":"188","severity":1,"message":"189","line":11,"column":2,"nodeType":"185","endLine":11,"endColumn":11,"suggestions":"198"},{"ruleId":"183","severity":1,"message":"195","line":1,"column":17,"nodeType":"185","messageId":"186","endLine":1,"endColumn":28},{"ruleId":"183","severity":1,"message":"199","line":1,"column":30,"nodeType":"185","messageId":"186","endLine":1,"endColumn":39},{"ruleId":"183","severity":1,"message":"200","line":7,"column":10,"nodeType":"185","messageId":"186","endLine":7,"endColumn":16},{"ruleId":"183","severity":1,"message":"201","line":31,"column":9,"nodeType":"185","messageId":"186","endLine":31,"endColumn":12},{"ruleId":"183","severity":1,"message":"201","line":35,"column":9,"nodeType":"185","messageId":"186","endLine":35,"endColumn":12},{"ruleId":"191","severity":1,"message":"192","line":45,"column":13,"nodeType":"193","endLine":45,"endColumn":84},{"ruleId":"191","severity":1,"message":"192","line":47,"column":8,"nodeType":"193","endLine":47,"endColumn":121},{"ruleId":"183","severity":1,"message":"194","line":4,"column":8,"nodeType":"185","messageId":"186","endLine":4,"endColumn":13},{"ruleId":"188","severity":1,"message":"189","line":11,"column":2,"nodeType":"185","endLine":11,"endColumn":11,"suggestions":"202"},{"ruleId":"188","severity":1,"message":"203","line":40,"column":5,"nodeType":"204","endLine":40,"endColumn":13,"suggestions":"205"},{"ruleId":"191","severity":1,"message":"192","line":48,"column":12,"nodeType":"193","endLine":48,"endColumn":87},{"ruleId":"206","severity":1,"message":"207","line":31,"column":8,"nodeType":"185","messageId":"208","endLine":31,"endColumn":16},{"ruleId":"209","severity":1,"message":"210","line":68,"column":7,"nodeType":"193","endLine":68,"endColumn":60},{"ruleId":"209","severity":1,"message":"210","line":40,"column":7,"nodeType":"193","endLine":40,"endColumn":60},{"ruleId":"209","severity":1,"message":"210","line":41,"column":14,"nodeType":"193","endLine":41,"endColumn":59},{"ruleId":"209","severity":1,"message":"210","line":42,"column":14,"nodeType":"193","endLine":42,"endColumn":70},{"ruleId":"211","severity":1,"message":"212","line":9,"column":18,"nodeType":"213","messageId":"214","endLine":9,"endColumn":20},{"ruleId":"211","severity":1,"message":"212","line":11,"column":23,"nodeType":"213","messageId":"214","endLine":11,"endColumn":25},{"ruleId":"211","severity":1,"message":"212","line":13,"column":27,"nodeType":"213","messageId":"214","endLine":13,"endColumn":29},{"ruleId":"211","severity":1,"message":"212","line":15,"column":24,"nodeType":"213","messageId":"214","endLine":15,"endColumn":26},{"ruleId":"211","severity":1,"message":"212","line":17,"column":21,"nodeType":"213","messageId":"214","endLine":17,"endColumn":23},{"ruleId":"211","severity":1,"message":"212","line":19,"column":23,"nodeType":"213","messageId":"214","endLine":19,"endColumn":25},{"ruleId":"183","severity":1,"message":"199","line":1,"column":17,"nodeType":"185","messageId":"186","endLine":1,"endColumn":26},{"ruleId":"183","severity":1,"message":"199","line":1,"column":9,"nodeType":"185","messageId":"186","endLine":1,"endColumn":18},{"ruleId":"183","severity":1,"message":"195","line":1,"column":30,"nodeType":"185","messageId":"186","endLine":1,"endColumn":41},{"ruleId":"183","severity":1,"message":"187","line":17,"column":15,"nodeType":"185","messageId":"186","endLine":17,"endColumn":20},{"ruleId":"211","severity":1,"message":"215","line":49,"column":24,"nodeType":"213","messageId":"214","endLine":49,"endColumn":26},{"ruleId":"191","severity":1,"message":"192","line":49,"column":41,"nodeType":"193","endLine":49,"endColumn":83},{"ruleId":"191","severity":1,"message":"192","line":49,"column":86,"nodeType":"193","endLine":49,"endColumn":126},{"ruleId":"183","severity":1,"message":"199","line":1,"column":9,"nodeType":"185","messageId":"186","endLine":1,"endColumn":18},{"ruleId":"183","severity":1,"message":"184","line":1,"column":20,"nodeType":"185","messageId":"186","endLine":1,"endColumn":28},{"ruleId":"183","severity":1,"message":"195","line":1,"column":30,"nodeType":"185","messageId":"186","endLine":1,"endColumn":41},{"ruleId":"183","severity":1,"message":"187","line":13,"column":15,"nodeType":"185","messageId":"186","endLine":13,"endColumn":20},{"ruleId":"191","severity":1,"message":"192","line":21,"column":24,"nodeType":"193","endLine":21,"endColumn":65},{"ruleId":"188","severity":1,"message":"216","line":16,"column":2,"nodeType":"185","endLine":16,"endColumn":11,"suggestions":"217"},{"ruleId":"191","severity":1,"message":"192","line":73,"column":5,"nodeType":"193","endLine":73,"endColumn":57},{"ruleId":"191","severity":1,"message":"192","line":85,"column":5,"nodeType":"193","endLine":85,"endColumn":64},{"ruleId":"209","severity":1,"message":"210","line":93,"column":5,"nodeType":"193","endLine":93,"endColumn":67},{"ruleId":"188","severity":1,"message":"189","line":13,"column":2,"nodeType":"185","endLine":13,"endColumn":11,"suggestions":"218"},{"ruleId":"183","severity":1,"message":"187","line":28,"column":15,"nodeType":"185","messageId":"186","endLine":28,"endColumn":20},{"ruleId":"191","severity":1,"message":"192","line":48,"column":5,"nodeType":"193","endLine":48,"endColumn":55},{"ruleId":"191","severity":1,"message":"192","line":56,"column":6,"nodeType":"193","endLine":56,"endColumn":83},{"ruleId":"191","severity":1,"message":"192","line":69,"column":6,"nodeType":"193","endLine":69,"endColumn":83},{"ruleId":"183","severity":1,"message":"199","line":1,"column":17,"nodeType":"185","messageId":"186","endLine":1,"endColumn":26},{"ruleId":"183","severity":1,"message":"187","line":21,"column":15,"nodeType":"185","messageId":"186","endLine":21,"endColumn":20},{"ruleId":"188","severity":1,"message":"219","line":26,"column":4,"nodeType":"204","endLine":26,"endColumn":14,"suggestions":"220"},{"ruleId":"188","severity":1,"message":"219","line":31,"column":4,"nodeType":"204","endLine":31,"endColumn":13,"suggestions":"221"},{"ruleId":"206","severity":1,"message":"222","line":38,"column":8,"nodeType":"185","messageId":"208","endLine":38,"endColumn":20},{"ruleId":"209","severity":1,"message":"210","line":69,"column":7,"nodeType":"193","endLine":69,"endColumn":83},{"ruleId":"209","severity":1,"message":"210","line":90,"column":8,"nodeType":"193","endLine":90,"endColumn":61},{"ruleId":"183","severity":1,"message":"199","line":1,"column":39,"nodeType":"185","messageId":"186","endLine":1,"endColumn":48},{"ruleId":"209","severity":1,"message":"210","line":42,"column":7,"nodeType":"193","endLine":42,"endColumn":59},{"ruleId":"183","severity":1,"message":"187","line":35,"column":15,"nodeType":"185","messageId":"186","endLine":35,"endColumn":20},{"ruleId":"183","severity":1,"message":"187","line":21,"column":15,"nodeType":"185","messageId":"186","endLine":21,"endColumn":20},{"ruleId":"209","severity":1,"message":"210","line":48,"column":62,"nodeType":"193","endLine":48,"endColumn":91},{"ruleId":"209","severity":1,"message":"210","line":60,"column":8,"nodeType":"193","endLine":60,"endColumn":66},"no-native-reassign",["223"],"no-negated-in-lhs",["224"],"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'error' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setMyID'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [] as a second argument to the useEffect Hook.",["225"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'axios' is defined but never used.","'useCallback' is defined but never used.",["226"],"'useRef' is defined but never used.",["227"],"'useEffect' is defined but never used.","'mutate' is defined but never used.","'rtn' is assigned a value but never used.",["228"],"React Hook useEffect has missing dependencies: 'MyID' and 'roomName'. Either include them or remove the dependency array.","ArrayExpression",["229"],"@typescript-eslint/no-redeclare","'security' is already defined.","redeclared","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","React Hook useEffect contains a call to 'setIntraID'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [] as a second argument to the useEffect Hook.",["230"],["231"],"React Hook useCallback has missing dependencies: 'myID' and 'targetID'. Either include them or remove the dependency array.",["232"],["233"],"'chatRoomName' is already defined.","no-global-assign","no-unsafe-negation",{"desc":"234","fix":"235"},{"desc":"234","fix":"236"},{"desc":"234","fix":"237"},{"desc":"234","fix":"238"},{"desc":"239","fix":"240"},{"desc":"234","fix":"241"},{"desc":"234","fix":"242"},{"desc":"243","fix":"244"},{"desc":"245","fix":"246"},"Add dependencies array: []",{"range":"247","text":"248"},{"range":"249","text":"248"},{"range":"250","text":"248"},{"range":"251","text":"248"},"Update the dependencies array to be: [MyID, roomName, socket]",{"range":"252","text":"253"},{"range":"254","text":"248"},{"range":"255","text":"248"},"Update the dependencies array to be: [IsFriend, myID, targetID]",{"range":"256","text":"257"},"Update the dependencies array to be: [IsBlock, myID, targetID]",{"range":"258","text":"259"},[1792,1792],", []",[509,509],[528,528],[497,497],[1214,1222],"[MyID, roomName, socket]",[886,886],[525,525],[958,968],"[IsFriend, myID, targetID]",[1132,1141],"[IsBlock, myID, targetID]"]