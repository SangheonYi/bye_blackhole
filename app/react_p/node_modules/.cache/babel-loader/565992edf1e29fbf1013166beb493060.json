{"ast":null,"code":"var _jsxFileName = \"/Users/jinkim/bye_blackhole/app/react_p/src/Chat/UserList.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport \"./UserList.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UserList = ({\n  socket\n}) => {\n  _s();\n\n  const [userList, setUserList] = useState();\n  const [iconImg, setIconImg] = useState({\n    data: \"\"\n  });\n  useEffect(() => {\n    socket.on(\"UserList\", newUser => {\n      setUserList(newUser);\n    });\n    return () => {\n      socket.disconnect();\n    };\n  }, [socket]);\n\n  function decondeBase64(base64data) {\n    let base64ToString = Buffer.from(base64data, \"base64\").toString();\n    setIconImg({\n      data: base64ToString\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: userList === null || userList === void 0 ? void 0 : userList.map(user => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"userList\",\n      children: [decondeBase64(user.icon), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: `data:image/jpeg;base64,${iconImg.data}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"id\",\n        children: user.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"room\",\n        children: user.room\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 4\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 3\n  }, this);\n};\n\n_s(UserList, \"3TmpxeCoplhnkPAisdu1JaP+9Po=\");\n\n_c = UserList;\nexport default UserList;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserList\");","map":{"version":3,"sources":["/Users/jinkim/bye_blackhole/app/react_p/src/Chat/UserList.tsx"],"names":["React","useEffect","useState","UserList","socket","userList","setUserList","iconImg","setIconImg","data","on","newUser","disconnect","decondeBase64","base64data","base64ToString","Buffer","from","toString","map","user","icon","id","room"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,gBAAP;;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAqB;AAAA;;AACrC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BJ,QAAQ,EAAxC;AACA,QAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAiB;AAACO,IAAAA,IAAI,EAAC;AAAN,GAAjB,CAAtC;AAEAR,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,MAAM,CAACM,EAAP,CAAU,UAAV,EAAuBC,OAAD,IAAoD;AAE3EL,MAAAA,WAAW,CAACK,OAAD,CAAX;AACE,KAHD;AAKA,WAAO,MAAM;AACdP,MAAAA,MAAM,CAACQ,UAAP;AACE,KAFD;AAGD,GATQ,EASN,CAACR,MAAD,CATM,CAAT;;AAWA,WAASS,aAAT,CAAuBC,UAAvB,EAAuC;AACtC,QAAIC,cAAc,GAAGC,MAAM,CAACC,IAAP,CAAYH,UAAZ,EAAwB,QAAxB,EAAkCI,QAAlC,EAArB;AACAV,IAAAA,UAAU,CAAC;AAACC,MAAAA,IAAI,EAAEM;AAAP,KAAD,CAAV;AACA;;AAED,sBACC;AAAA,cACCV,QADD,aACCA,QADD,uBACCA,QAAQ,CAAEc,GAAV,CAAcC,IAAI,iBAClB;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,iBACEP,aAAa,CAACO,IAAI,CAACC,IAAN,CADf,eAEC;AAAK,QAAA,GAAG,EAAG,0BAAyBd,OAAO,CAACE,IAAK;AAAjD;AAAA;AAAA;AAAA;AAAA,cAFD,eAGC;AAAK,QAAA,SAAS,EAAC,IAAf;AAAA,kBAAqBW,IAAI,CAACE;AAA1B;AAAA;AAAA;AAAA;AAAA,cAHD,eAIC;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,kBAAuBF,IAAI,CAACG;AAA5B;AAAA;AAAA;AAAA;AAAA,cAJD;AAAA;AAAA;AAAA;AAAA;AAAA,YADA;AADD;AAAA;AAAA;AAAA;AAAA,UADD;AAYE,CAhCH;;GAAMpB,Q;;KAAAA,Q;AAiCJ,eAAeA,QAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./UserList.css\"\n\nconst UserList = ({ socket }: any) => {\n\tconst [userList, setUserList] = useState<{id: string, room: string, icon:any}[]>();\n\tconst [iconImg, setIconImg] = useState<{data: string}>({data:\"\"});\n\n\tuseEffect(() => {\n\t  socket.on(\"UserList\", (newUser:{id: string, room: string, icon:any}[]) => {\n\n\t\tsetUserList(newUser);\n\t  });\n\n\t  return () => {\n\t\tsocket.disconnect();\n\t  };\n\t}, [socket]);\n\n\tfunction decondeBase64(base64data: any){\n\t\tlet base64ToString = Buffer.from(base64data, \"base64\").toString()\n\t\tsetIconImg({data: base64ToString})\n\t}\n\n\treturn (\n\t\t<div>\n\t\t{userList?.map(user=>\n\t\t\t<div className=\"userList\">\n\t\t\t\t{decondeBase64(user.icon)}\n\t\t\t\t<img src={`data:image/jpeg;base64,${iconImg.data}`} />\n\t\t\t\t<div className=\"id\">{user.id}</div>\n\t\t\t\t<div className=\"room\">{user.room}</div>\n\t\t\t</div>\n\t\t)}\n\t\t</div>\n\t);\n  };\n  export default UserList;\n"]},"metadata":{},"sourceType":"module"}