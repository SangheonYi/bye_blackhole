{"ast":null,"code":"var _jsxFileName = \"/Users/jinkim/bye_blackhole/app/react_p/src/Chat/AutoScroll.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useCallback, useEffect } from \"react\";\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AutoScroll = () => {\n  _s();\n\n  const scrollRef = useRef();\n  ;\n  const {\n    editDone\n  } = useSelector(state => state.board);\n  const scrollToBottom = useCallback(() => {\n    if (editDone) {\n      scrollRef.current.scrollIntoView({\n        behavior: 'smooth',\n        block: 'end',\n        inline: 'nearest'\n      });\n    }\n  }, [editDone]);\n  useEffect(() => {\n    AutoScroll();\n  }, [AutoScroll]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: scrollRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AutoScroll, \"1E6gS8F2jDfPw2onakNWh2hoJdE=\", false, function () {\n  return [useSelector];\n});\n\n_c = AutoScroll;\nexport default AutoScroll;\n\nvar _c;\n\n$RefreshReg$(_c, \"AutoScroll\");","map":{"version":3,"sources":["/Users/jinkim/bye_blackhole/app/react_p/src/Chat/AutoScroll.tsx"],"names":["React","useRef","useCallback","useEffect","useSelector","AutoScroll","scrollRef","editDone","state","board","scrollToBottom","current","scrollIntoView","behavior","block","inline"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,WAAxB,EAAqCC,SAArC,QAAsD,OAAtD;AACA,SAASC,WAAT,QAA4B,aAA5B;;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACvB,QAAMC,SAAa,GAAGL,MAAM,EAA5B;AAGC;AACD,QAAM;AAAEM,IAAAA;AAAF,MAAeH,WAAW,CAAEI,KAAD,IAAsBA,KAAK,CAACC,KAA7B,CAAhC;AAEA,QAAMC,cAAc,GAAGR,WAAW,CAAC,MAAM;AACvC,QAAIK,QAAJ,EAAc;AACZD,MAAAA,SAAS,CAACK,OAAV,CAAkBC,cAAlB,CAAiC;AAAEC,QAAAA,QAAQ,EAAE,QAAZ;AAAsBC,QAAAA,KAAK,EAAE,KAA7B;AAAoCC,QAAAA,MAAM,EAAE;AAA5C,OAAjC;AACD;AACF,GAJiC,EAI/B,CAACR,QAAD,CAJ+B,CAAlC;AAMAJ,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,UAAU;AACX,GAFQ,EAEN,CAACA,UAAD,CAFM,CAAT;AAKA,sBACE;AAAK,IAAA,GAAG,EAAEC;AAAV;AAAA;AAAA;AAAA;AAAA,UADF;AAID,CAtBD;;GAAMD,U;UAKiBD,W;;;KALjBC,U;AAuBN,eAAeA,UAAf","sourcesContent":["import React, { useRef, useCallback, useEffect } from \"react\";\nimport { useSelector } from 'react-redux';\n\nconst AutoScroll = () => {\n  const scrollRef:any = useRef();\n  interface rootState {\n\tboard: any;\n  };\n  const { editDone } = useSelector((state: rootState) => state.board);\n\n  const scrollToBottom = useCallback(() => {\n    if (editDone) {\n      scrollRef.current.scrollIntoView({ behavior: 'smooth', block: 'end', inline: 'nearest' });\n    }\n  }, [editDone]);\n\n  useEffect(() => {\n    AutoScroll();\n  }, [AutoScroll])\n\n\n  return (\n    <div ref={scrollRef}>\n    </div>\n  )\n};\nexport default AutoScroll;"]},"metadata":{},"sourceType":"module"}