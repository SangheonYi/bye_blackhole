{"ast":null,"code":"import _slicedToArray from\"/Users/jinkim/ts_5/app/react_p/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState,useRef}from'react';import{MessageListWrapper}from'./MessageList.styles';import{Message}from'../Message/Message';import{useAppState}from'../../AppStateContext';import{useScrollPosition}from'@n8tb1t/use-scroll-position';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var MessageList=function MessageList(props){var _useAppState=useAppState(),state=_useAppState.state;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),stopOnScroll=_useState2[0],setStopOnScroll=_useState2[1];var messagesEndRef=useRef(null);//This is our reference to the instance of this component in the DOM\n//const listBottomPos = messagesEndRef.current.getBoundingClientRect().bottom;\n//console.log(`listBottomPos: ${listBottomPos}`);\nvar scrollToBottom=function scrollToBottom(){var _messagesEndRef$curre;messagesEndRef===null||messagesEndRef===void 0?void 0:(_messagesEndRef$curre=messagesEndRef.current)===null||_messagesEndRef$curre===void 0?void 0:_messagesEndRef$curre.scrollIntoView({block:\"end\",inline:\"nearest\",behavior:\"smooth\"});};useScrollPosition(function(_ref){var prevPos=_ref.prevPos,currPos=_ref.currPos;//const bottom = messagesEndRef.current.scrollHeight - currPos.y;//=== e.target.clientHeight;\nvar isShow=currPos.y>prevPos.y;console.log(\"\".concat(isShow));if(isShow!==stopOnScroll)setStopOnScroll(isShow);},[]);useEffect(scrollToBottom,[state.messages]);var Messages=Array.from(state.messages).map(function(onemessage,i){return/*#__PURE__*/_jsxs(React.Fragment,{children:[/*#__PURE__*/_jsx(Message,{message:onemessage}),/*#__PURE__*/_jsx(\"div\",{ref:messagesEndRef})]},i);});return/*#__PURE__*/_jsx(MessageListWrapper,{children:Messages});};","map":{"version":3,"sources":["/Users/jinkim/ts_5/app/react_p/src/codes/components/MessageList/MessageList.tsx"],"names":["React","useEffect","useState","useRef","MessageListWrapper","Message","useAppState","useScrollPosition","MessageList","props","state","stopOnScroll","setStopOnScroll","messagesEndRef","scrollToBottom","current","scrollIntoView","block","inline","behavior","prevPos","currPos","isShow","y","console","log","messages","Messages","Array","from","map","onemessage","i"],"mappings":"qJAAA,MAAOA,CAAAA,KAAP,EAA2DC,SAA3D,CAAsEC,QAAtE,CAA4FC,MAA5F,KAAyG,OAAzG,CACA,OAAQC,kBAAR,KAAiC,sBAAjC,CACA,OAAQC,OAAR,KAAsB,oBAAtB,CACA,OAAQC,WAAR,KAA0B,uBAA1B,CACA,OAAQC,iBAAR,KAAgC,6BAAhC,C,wFAMA,MAAO,IAAMC,CAAAA,WAAwC,CAAG,QAA3CA,CAAAA,WAA2C,CAACC,KAAD,CAA6B,kBACjEH,WAAW,EADsD,CAC3EI,KAD2E,cAC3EA,KAD2E,eAE3CR,QAAQ,CAAC,KAAD,CAFmC,wCAE5ES,YAF4E,eAE9DC,eAF8D,eAGnF,GAAMC,CAAAA,cAAc,CAAGV,MAAM,CAAwB,IAAxB,CAA7B,CAA2D;AAC3D;AACA;AACA,GAAMW,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,EAAM,2BAC5BD,cAAc,OAAd,EAAAA,cAAc,SAAd,+BAAAA,cAAc,CAAEE,OAAhB,sEAAyBC,cAAzB,CAAwC,CAAEC,KAAK,CAAE,KAAT,CAAgBC,MAAM,CAAE,SAAxB,CAAmCC,QAAQ,CAAE,QAA7C,CAAxC,EACE,CAFH,CAIAZ,iBAAiB,CAAC,cAA0B,IAAvBa,CAAAA,OAAuB,MAAvBA,OAAuB,CAAdC,OAAc,MAAdA,OAAc,CAC1C;AACA,GAAMC,CAAAA,MAAM,CAAGD,OAAO,CAACE,CAAR,CAAYH,OAAO,CAACG,CAAnC,CACAC,OAAO,CAACC,GAAR,WAAeH,MAAf,GACA,GAAIA,MAAM,GAAKX,YAAf,CAA6BC,eAAe,CAACU,MAAD,CAAf,CAC9B,CALgB,CAKd,EALc,CAAjB,CAOArB,SAAS,CAACa,cAAD,CAAiB,CAACJ,KAAK,CAACgB,QAAP,CAAjB,CAAT,CAEA,GAAMC,CAAAA,QAAQ,CAAGC,KAAK,CAACC,IAAN,CAAWnB,KAAK,CAACgB,QAAjB,EAA2BI,GAA3B,CAA+B,SAACC,UAAD,CAAyBC,CAAzB,CAAuC,CACrF,mBACE,MAAC,KAAD,CAAO,QAAP,yBACE,KAAC,OAAD,EAAS,OAAO,CAAED,UAAlB,EADF,cAEE,YAAK,GAAG,CAAElB,cAAV,EAFF,GAAqBmB,CAArB,CADF,CAMD,CAPgB,CAAjB,CASA,mBAAO,KAAC,kBAAD,WAAqBL,QAArB,EAAP,CACD,CA7BM","sourcesContent":["import React, {useCallback, FunctionComponent, useReducer, useEffect, useState, useContext, useRef} from 'react'\nimport {MessageListWrapper} from './MessageList.styles'\nimport {Message} from '../Message/Message'\nimport {useAppState} from '../../AppStateContext'\nimport {useScrollPosition} from '@n8tb1t/use-scroll-position'\n\ninterface MessageListProps {\n  messages?: Array<any>\n}\n\nexport const MessageList: React.SFC<MessageListProps> = (props: MessageListProps) => {\n  const { state } = useAppState();\n  const [stopOnScroll, setStopOnScroll] = useState(false);\n  const messagesEndRef = useRef<null | HTMLDivElement>(null) //This is our reference to the instance of this component in the DOM\n  //const listBottomPos = messagesEndRef.current.getBoundingClientRect().bottom;\n  //console.log(`listBottomPos: ${listBottomPos}`);\n  const scrollToBottom = () => {\n   messagesEndRef?.current?.scrollIntoView({ block: \"end\", inline: \"nearest\", behavior: \"smooth\" });\n    }\n\n  useScrollPosition(({ prevPos, currPos }) => {\n    //const bottom = messagesEndRef.current.scrollHeight - currPos.y;//=== e.target.clientHeight;\n    const isShow = currPos.y > prevPos.y\n    console.log(`${isShow}`);\n    if (isShow !== stopOnScroll) setStopOnScroll(isShow)\n  }, [])\n\n  useEffect(scrollToBottom, [state.messages])\n\n  const Messages = Array.from(state.messages).map((onemessage: Array<any>, i: number) => {\n    return (\n      <React.Fragment key={i}>\n        <Message message={onemessage} />\n        <div ref={messagesEndRef} />\n      </React.Fragment>\n    );\n  });\n\n  return <MessageListWrapper>{Messages}</MessageListWrapper>\n}"]},"metadata":{},"sourceType":"module"}