{"ast":null,"code":"import _toConsumableArray from\"/Users/jinkim/bye_blackhole/app/react_p/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/Users/jinkim/bye_blackhole/app/react_p/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from\"react\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";var UserList=function UserList(_ref){var socket=_ref.socket;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),userList=_useState2[0],setUserList=_useState2[1];useEffect(function(){socket.on(\"UserList\",function(newUser){setUserList(function(userList){return[].concat(_toConsumableArray(userList),[newUser]);});});return function(){socket.disconnect();};},[socket]);return/*#__PURE__*/_jsx(\"div\",{children:userList.map(function(msg,idx){return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"div\",{children:[msg.id,\" \",msg.room]})},idx);})});};export default UserList;","map":{"version":3,"sources":["/Users/jinkim/bye_blackhole/app/react_p/src/Chat/UserList.tsx"],"names":["React","useEffect","useState","UserList","socket","userList","setUserList","on","newUser","disconnect","map","msg","idx","id","room"],"mappings":"oUAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,C,wFAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,MAAqB,IAAlBC,CAAAA,MAAkB,MAAlBA,MAAkB,eACLF,QAAQ,CAAQ,EAAR,CADH,wCAC9BG,QAD8B,eACpBC,WADoB,eAGrCL,SAAS,CAAC,UAAM,CACdG,MAAM,CAACG,EAAP,CAAU,UAAV,CAAsB,SAACC,OAAD,CAAqB,CAC5CF,WAAW,CAAC,SAACD,QAAD,qCAAkBA,QAAlB,GAA4BG,OAA5B,IAAD,CAAX,CACE,CAFD,EAIA,MAAO,WAAM,CACdJ,MAAM,CAACK,UAAP,GACE,CAFD,CAGD,CARQ,CAQN,CAACL,MAAD,CARM,CAAT,CAUA,mBACC,qBACCC,QAAQ,CAACK,GAAT,CAAa,SAACC,GAAD,CAAMC,GAAN,qBACZ,kCACD,uBAAMD,GAAG,CAACE,EAAV,KAAeF,GAAG,CAACG,IAAnB,GADC,EAAUF,GAAV,CADY,EAAb,CADD,EADD,CASE,CAtBH,CAuBE,cAAeT,CAAAA,QAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nconst UserList = ({ socket }: any) => {\n\tconst [userList, setUserList] = useState<any[]>([]);\n\n\tuseEffect(() => {\n\t  socket.on(\"UserList\", (newUser: string) => {\n\t\tsetUserList((userList) => [...userList, newUser]);\n\t  });\n\n\t  return () => {\n\t\tsocket.disconnect();\n\t  };\n\t}, [socket]);\n\n\treturn (\n\t\t<div>\n\t\t{userList.map((msg, idx) => (\n\t\t  <div key={idx}>\n\t\t\t<div>{msg.id} {msg.room}</div>\n\t\t  </div>\n\t\t))}\n\t  </div>\n\t);\n  };\n  export default UserList;\n"]},"metadata":{},"sourceType":"module"}