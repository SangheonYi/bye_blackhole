{"ast":null,"code":"var _jsxFileName = \"/Users/jinkim/bye_blackhole/app/react_p/src/Chat/ChatInput.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./ChatInput.css\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Button } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChatInput = ({\n  userName,\n  socket\n}) => {\n  _s();\n\n  const [chatMessage, setChatMessage] = useState(\"\");\n  console.log(userName);\n  console.log(localStorage.getItem(\"userName\"));\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    socket.emit(\"onSend\", {\n      userName: userName ? userName : localStorage.getItem(\"userName\"),\n      msg: chatMessage,\n      timeStamp: new Date().toLocaleTimeString()\n    });\n    setChatMessage(\"\");\n  };\n\n  const onChatMessageChange = e => {\n    setChatMessage(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"ChatInput-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        placeholder: \"\\uBA54\\uC2DC\\uC9C0\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694.\",\n        value: chatMessage,\n        onChange: onChatMessageChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"button\",\n        className: \"btn btn-warning btn-sm\",\n        children: \"\\uC804\\uC1A1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ChatInput, \"HzBHO9DpNxPM+oxUPEU4BWcU80k=\");\n\n_c = ChatInput;\nexport default ChatInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatInput\");","map":{"version":3,"sources":["/Users/jinkim/bye_blackhole/app/react_p/src/Chat/ChatInput.tsx"],"names":["React","useState","Button","ChatInput","userName","socket","chatMessage","setChatMessage","console","log","localStorage","getItem","handleSubmit","e","preventDefault","emit","msg","timeStamp","Date","toLocaleTimeString","onChatMessageChange","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAwBC,QAAxB,QAAwC,OAAxC;AAEA,OAAO,iBAAP;AACA,OAAO,sCAAP;AACA,SAAQC,MAAR,QAAqB,iBAArB;;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KAA+B;AAAA;;AAC/C,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAC,EAAD,CAA9C;AAEDO,EAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAYC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAZ;;AAEC,QAAMC,YAAY,GAAIC,CAAD,IAAW;AAC9BA,IAAAA,CAAC,CAACC,cAAF;AACAT,IAAAA,MAAM,CAACU,IAAP,CAAY,QAAZ,EAAsB;AACpBX,MAAAA,QAAQ,EAAEA,QAAQ,GAAGA,QAAH,GAAcM,YAAY,CAACC,OAAb,CAAqB,UAArB,CADZ;AAEpBK,MAAAA,GAAG,EAAEV,WAFe;AAGpBW,MAAAA,SAAS,EAAE,IAAIC,IAAJ,GAAWC,kBAAX;AAHS,KAAtB;AAKAZ,IAAAA,cAAc,CAAC,EAAD,CAAd;AACD,GARD;;AAUA,QAAMa,mBAAmB,GAAIP,CAAD,IAAW;AACrCN,IAAAA,cAAc,CAACM,CAAC,CAACQ,MAAF,CAASC,KAAV,CAAd;AACD,GAFD;;AAIA,sBACE;AAAA,2BACE;AAAM,MAAA,SAAS,EAAC,gBAAhB;AAAiC,MAAA,QAAQ,EAAEV,YAA3C;AAAA,8BACE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,SAAS,EAAC,cAA7B;AACE,QAAA,WAAW,EAAC,0DADd;AAEE,QAAA,KAAK,EAAEN,WAFT;AAGE,QAAA,QAAQ,EAAEc;AAHZ;AAAA;AAAA;AAAA;AAAA,cADF,eAME,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,wBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAhCD;;GAAMjB,S;;KAAAA,S;AAkCN,eAAeA,SAAf","sourcesContent":["import React, { useRef, useState } from \"react\";\nimport socketIOClient from \"socket.io-client\";\nimport \"./ChatInput.css\";\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport {Button} from \"react-bootstrap\";\n\nconst ChatInput = ({ userName, socket }: any) => {\n  const [chatMessage, setChatMessage] = useState(\"\");\n\n\tconsole.log(userName)\n\tconsole.log(localStorage.getItem(\"userName\"))\n\n  const handleSubmit = (e:any) => {\n    e.preventDefault();\n    socket.emit(\"onSend\", {\n      userName: userName ? userName : localStorage.getItem(\"userName\"),\n      msg: chatMessage,\n      timeStamp: new Date().toLocaleTimeString(),\n    });\n    setChatMessage(\"\");\n  };\n\n  const onChatMessageChange = (e:any) => {\n    setChatMessage(e.target.value);\n  };\n\n  return (\n    <div>\n      <form className=\"ChatInput-form\" onSubmit={handleSubmit}>\n        <input type=\"text\" className=\"form-control\"\n          placeholder=\"메시지를 입력하세요.\"\n          value={chatMessage}\n          onChange={onChatMessageChange}\n        ></input>\n        <Button type=\"button\" className=\"btn btn-warning btn-sm\">전송</Button>\n      </form>\n    </div>\n  );\n};\n\nexport default ChatInput;"]},"metadata":{},"sourceType":"module"}