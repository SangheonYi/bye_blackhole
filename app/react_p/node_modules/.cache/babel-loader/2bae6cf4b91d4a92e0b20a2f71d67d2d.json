{"ast":null,"code":"var _jsxFileName = \"/Users/jinkim/bye_blackhole/app/react_p/src/Chat/Chat.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport socketIOClient from \"socket.io-client\";\nimport ChatInput from \"./ChatInput\";\nimport ChatLog from \"./ChatLog\";\nimport Loading from \"./Loading\";\nimport UserList from \"./UserList\";\nimport \"./Chat.css\"; //const socket = socketIOClient(\"localhost:5000\");\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Chat = ({\n  roomName,\n  userName\n}) => {\n  _s();\n\n  const myInfo = {\n    roomName: roomName ? roomName : localStorage.getItem(\"roomName\"),\n    userName: userName ? userName : localStorage.getItem(\"userName\")\n  };\n  const [currentSocket, setCurrentSocket] = useState(socketIOClient());\n  useEffect(() => {\n    setCurrentSocket(socketIOClient(\"http://localhost:80\"));\n  }, []);\n\n  if (currentSocket) {\n    currentSocket.on(\"connect\", () => {\n      currentSocket.emit(\"join\", myInfo);\n    });\n  }\n\n  function AutoScroll() {\n    var div = document.getElementById(\"scrollDiv\");\n    div.scrollTop = div.scrollHeight;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: currentSocket ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"script\", {\n        children: AutoScroll\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"body\", {\n        className: \"ChatLog-box\",\n        children: [\"chatlog\", /*#__PURE__*/_jsxDEV(ChatLog, {\n          socket: currentSocket\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"aside\", {\n        className: \"UserList-box\",\n        children: [\"userlist\", /*#__PURE__*/_jsxDEV(UserList, {\n          socket: currentSocket\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ChatInput-box\",\n        children: /*#__PURE__*/_jsxDEV(ChatInput, {\n          userName: userName,\n          socket: currentSocket\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Chat, \"Jv6YrxQc5asJeb4ELYynWPwLNDA=\");\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["/Users/jinkim/bye_blackhole/app/react_p/src/Chat/Chat.tsx"],"names":["React","useEffect","useState","socketIOClient","ChatInput","ChatLog","Loading","UserList","Chat","roomName","userName","myInfo","localStorage","getItem","currentSocket","setCurrentSocket","on","emit","AutoScroll","div","document","getElementById","scrollTop","scrollHeight"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAO,YAAP,C,CAEA;;;;;AAOA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KAAqC;AAAA;;AAChD,QAAMC,MAAM,GAAG;AACbF,IAAAA,QAAQ,EAAEA,QAAQ,GAAGA,QAAH,GAAcG,YAAY,CAACC,OAAb,CAAqB,UAArB,CADnB;AAEbH,IAAAA,QAAQ,EAAEA,QAAQ,GAAGA,QAAH,GAAcE,YAAY,CAACC,OAAb,CAAqB,UAArB;AAFnB,GAAf;AAKA,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCb,QAAQ,CAACC,cAAc,EAAf,CAAlD;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,gBAAgB,CAACZ,cAAc,CAAC,qBAAD,CAAf,CAAhB;AACD,GAFQ,EAEN,EAFM,CAAT;;AAIA,MAAIW,aAAJ,EAAmB;AACjBA,IAAAA,aAAa,CAACE,EAAd,CAAiB,SAAjB,EAA4B,MAAM;AAChCF,MAAAA,aAAa,CAACG,IAAd,CAAmB,MAAnB,EAA2BN,MAA3B;AACD,KAFD;AAGD;;AAED,WAASO,UAAT,GAAsB;AACrB,QAAIC,GAAO,GAAGC,QAAQ,CAACC,cAAT,CAAwB,WAAxB,CAAd;AACAF,IAAAA,GAAG,CAACG,SAAJ,GAAgBH,GAAG,CAACI,YAApB;AACA;;AAED,sBACE;AAAA,cACGT,aAAa,gBACZ;AAAA,8BACJ;AAAA,kBACAI;AADA;AAAA;AAAA;AAAA;AAAA,cADI,eAIJ;AAAM,QAAA,SAAS,EAAC,aAAhB;AAAA,2CAEM,QAAC,OAAD;AAAS,UAAA,MAAM,EAAEJ;AAAjB;AAAA;AAAA;AAAA;AAAA,gBAFN;AAAA;AAAA;AAAA;AAAA;AAAA,cAJI,eAQJ;AAAO,QAAA,SAAS,EAAC,cAAjB;AAAA,4CAEA,QAAC,QAAD;AAAU,UAAA,MAAM,EAAEA;AAAlB;AAAA;AAAA;AAAA;AAAA,gBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,cARI,eAYJ;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,+BACM,QAAC,SAAD;AAAW,UAAA,QAAQ,EAAEJ,QAArB;AAA+B,UAAA,MAAM,EAAEI;AAAvC;AAAA;AAAA;AAAA;AAAA;AADN;AAAA;AAAA;AAAA;AAAA,cAZI;AAAA,oBADY,gBAkBZ,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAnBJ;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD,CA/CD;;GAAMN,I;;KAAAA,I;AAiDN,eAAeA,IAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport socketIOClient from \"socket.io-client\";\nimport ChatInput from \"./ChatInput\";\nimport ChatLog from \"./ChatLog\";\nimport Loading from \"./Loading\";\nimport UserList from \"./UserList\";\nimport \"./Chat.css\"\n\n//const socket = socketIOClient(\"localhost:5000\");\n\ninterface chatObj{\n\troomName: any,\n\tuserName: any\n}\n\nconst Chat = ({ roomName, userName }: chatObj) => {\n  const myInfo = {\n    roomName: roomName ? roomName : localStorage.getItem(\"roomName\"),\n    userName: userName ? userName : localStorage.getItem(\"userName\"),\n  };\n\n  const [currentSocket, setCurrentSocket] = useState(socketIOClient());\n\n  useEffect(() => {\n    setCurrentSocket(socketIOClient(\"http://localhost:80\"));\n  }, []);\n\n  if (currentSocket) {\n    currentSocket.on(\"connect\", () => {\n      currentSocket.emit(\"join\", myInfo);\n    });\n  }\n\n  function AutoScroll() {\n\t  var div:any = document.getElementById(\"scrollDiv\");\n\t  div.scrollTop = div.scrollHeight;\n  }\n\n  return (\n    <div>\n      {currentSocket ? (\n        <>\n\t\t  <script>\n\t\t\t{AutoScroll}\n\t\t  </script>\n\t\t  <body className=\"ChatLog-box\">\n\t\t\t  chatlog\n          <ChatLog socket={currentSocket}></ChatLog>\n\t\t  </body>\n\t\t  <aside className=\"UserList-box\">\n\t\t\t  userlist\n\t\t  <UserList socket={currentSocket}></UserList>\n\t\t  </aside>\n\t\t  <div className=\"ChatInput-box\">\n          <ChatInput userName={userName} socket={currentSocket}></ChatInput>\n\t\t  </div>\n        </>\n      ) : (\n        <Loading></Loading>\n      )}\n    </div>\n  );\n};\n\nexport default Chat;\n"]},"metadata":{},"sourceType":"module"}