{"ast":null,"code":"var _jsxFileName = \"/Users/jinkim/bye_blackhole/app/react_p/src/Chat/ChatLog.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useCallback, useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChatLog = ({\n  socket\n}) => {\n  _s();\n\n  const [msgList, setMsgList] = useState([]);\n  let editDone = false;\n  const scrollRef = useRef();\n  const scrollToBottom = useCallback(() => {\n    if (editDone) {\n      scrollRef.current.scrollIntoView({\n        behavior: 'smooth',\n        block: 'end',\n        inline: 'nearest'\n      });\n    }\n  }, [editDone]);\n  useEffect(() => {\n    // messsgeItem : {msg: String, name: String, timeStamp: String}\n    socket.on(\"onReceive\", messageItem => {\n      setMsgList(msgList => [...msgList, messageItem]);\n      editDone = true;\n      console.log(messageItem);\n    });\n    socket.on(\"onConnect\", systemMessage => {\n      setMsgList(msgList => [...msgList, {\n        msg: systemMessage\n      }]);\n    });\n    socket.on(\"onDisconnect\", systemMessage => {\n      setMsgList(msgList => [...msgList, {\n        msg: systemMessage\n      }]);\n    });\n    return () => {\n      socket.disconnect();\n    };\n  }, [socket]);\n  scrollToBottom();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: msgList.map((msg, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: msg.userName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: msg.timeStamp\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: msg.msg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this)]\n    }, idx, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ChatLog, \"w7sGSRXAa4x/xibg6Y80qJ4OB3c=\");\n\n_c = ChatLog;\nexport default ChatLog;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatLog\");","map":{"version":3,"sources":["/Users/jinkim/bye_blackhole/app/react_p/src/Chat/ChatLog.tsx"],"names":["React","useRef","useCallback","useEffect","useState","ChatLog","socket","msgList","setMsgList","editDone","scrollRef","scrollToBottom","current","scrollIntoView","behavior","block","inline","on","messageItem","console","log","systemMessage","msg","disconnect","map","idx","userName","timeStamp"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,WAAxB,EAAqCC,SAArC,EAAgDC,QAAhD,QAAgE,OAAhE;;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAqB;AAAA;;AACnC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,CAAQ,EAAR,CAAtC;AACA,MAAIK,QAAQ,GAAG,KAAf;AACA,QAAMC,SAAa,GAAGT,MAAM,EAA5B;AAEA,QAAMU,cAAc,GAAGT,WAAW,CAAC,MAAM;AACvC,QAAIO,QAAJ,EAAc;AACZC,MAAAA,SAAS,CAACE,OAAV,CAAkBC,cAAlB,CAAiC;AAAEC,QAAAA,QAAQ,EAAE,QAAZ;AAAsBC,QAAAA,KAAK,EAAE,KAA7B;AAAoCC,QAAAA,MAAM,EAAE;AAA5C,OAAjC;AACD;AACF,GAJiC,EAI/B,CAACP,QAAD,CAJ+B,CAAlC;AAMAN,EAAAA,SAAS,CAAC,MAAM;AACjB;AACGG,IAAAA,MAAM,CAACW,EAAP,CAAU,WAAV,EAAwBC,WAAD,IAAwB;AAC7CV,MAAAA,UAAU,CAAED,OAAD,IAAa,CAAC,GAAGA,OAAJ,EAAaW,WAAb,CAAd,CAAV;AACHT,MAAAA,QAAQ,GAAG,IAAX;AACGU,MAAAA,OAAO,CAACC,GAAR,CAAYF,WAAZ;AACD,KAJD;AAKAZ,IAAAA,MAAM,CAACW,EAAP,CAAU,WAAV,EAAwBI,aAAD,IAA2B;AAChDb,MAAAA,UAAU,CAAED,OAAD,IAAa,CAAC,GAAGA,OAAJ,EAAa;AAAEe,QAAAA,GAAG,EAAED;AAAP,OAAb,CAAd,CAAV;AACD,KAFD;AAGAf,IAAAA,MAAM,CAACW,EAAP,CAAU,cAAV,EAA2BI,aAAD,IAAwB;AAChDb,MAAAA,UAAU,CAAED,OAAD,IAAa,CAAC,GAAGA,OAAJ,EAAa;AAAEe,QAAAA,GAAG,EAAED;AAAP,OAAb,CAAd,CAAV;AACD,KAFD;AAGA,WAAO,MAAM;AACXf,MAAAA,MAAM,CAACiB,UAAP;AACD,KAFD;AAGD,GAhBQ,EAgBN,CAACjB,MAAD,CAhBM,CAAT;AAkBAK,EAAAA,cAAc;AAEd,sBACE;AAAA,cACGJ,OAAO,CAACiB,GAAR,CAAY,CAACF,GAAD,EAAMG,GAAN,kBACX;AAAA,8BACE;AAAA,kBAAMH,GAAG,CAACI;AAAV;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kBAAMJ,GAAG,CAACK;AAAV;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA,kBAAML,GAAG,CAACA;AAAV;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA,OAAUG,GAAV;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CA1CD;;GAAMpB,O;;KAAAA,O;AA4CN,eAAeA,OAAf","sourcesContent":["import React, { useRef, useCallback, useEffect, useState } from \"react\";\n\nconst ChatLog = ({ socket }: any) => {\n  const [msgList, setMsgList] = useState<any[]>([]);\n  let editDone = false;\n  const scrollRef:any = useRef();\n\n  const scrollToBottom = useCallback(() => {\n    if (editDone) {\n      scrollRef.current.scrollIntoView({ behavior: 'smooth', block: 'end', inline: 'nearest' });\n    }\n  }, [editDone]);\n\n  useEffect(() => {\n\t// messsgeItem : {msg: String, name: String, timeStamp: String}\n    socket.on(\"onReceive\", (messageItem: never) => {\n      setMsgList((msgList) => [...msgList, messageItem]);\n\t  editDone = true;\n      console.log(messageItem);\n    });\n    socket.on(\"onConnect\", (systemMessage: string) => {\n      setMsgList((msgList) => [...msgList, { msg: systemMessage } as never]);\n    });\n    socket.on(\"onDisconnect\", (systemMessage: any) => {\n      setMsgList((msgList) => [...msgList, { msg: systemMessage } as never]);\n    });\n    return () => {\n      socket.disconnect();\n    };\n  }, [socket]);\n\n  scrollToBottom()\n\n  return (\n    <div>\n      {msgList.map((msg, idx) => (\n        <div key={idx}>\n          <div>{msg.userName}</div>\n          <div>{msg.timeStamp}</div>\n          <div>{msg.msg}</div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default ChatLog;"]},"metadata":{},"sourceType":"module"}