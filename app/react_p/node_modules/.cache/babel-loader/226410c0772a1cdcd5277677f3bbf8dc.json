{"ast":null,"code":"var _jsxFileName = \"/Users/jinkim/bye_blackhole/app/react_p/src/Chat/UserList.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UserList = ({\n  socket\n}) => {\n  _s();\n\n  const [userList, setUserList] = useState([]);\n  useEffect(() => {\n    socket.on(\"UserList\", newUser => {\n      setUserList(userList => [...userList, newUser]);\n      console.log('!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!');\n      console.log(newUser);\n    });\n    return () => {\n      socket.disconnect();\n    };\n  }, [socket]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [userList[0], \"test\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 3\n  }, this);\n};\n\n_s(UserList, \"XZtmH22gSBQm+njpQReo0puLaas=\");\n\n_c = UserList;\nexport default UserList;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserList\");","map":{"version":3,"sources":["/Users/jinkim/bye_blackhole/app/react_p/src/Chat/UserList.tsx"],"names":["React","useEffect","useState","UserList","socket","userList","setUserList","on","newUser","console","log","disconnect"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAqB;AAAA;;AACrC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BJ,QAAQ,CAAQ,EAAR,CAAxC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,MAAM,CAACG,EAAP,CAAU,UAAV,EAAuBC,OAAD,IAAqB;AAC5CF,MAAAA,WAAW,CAAED,QAAD,IAAc,CAAC,GAAGA,QAAJ,EAAcG,OAAd,CAAf,CAAX;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,+CAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACE,KAJD;AAMA,WAAO,MAAM;AACdJ,MAAAA,MAAM,CAACO,UAAP;AACE,KAFD;AAGD,GAVQ,EAUN,CAACP,MAAD,CAVM,CAAT;AAYA,sBACC;AAAA,eACCC,QAAQ,CAAC,CAAD,CADT;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAME,CArBH;;GAAMF,Q;;KAAAA,Q;AAsBJ,eAAeA,QAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nconst UserList = ({ socket }: any) => {\n\tconst [userList, setUserList] = useState<any[]>([]);\n\n\tuseEffect(() => {\n\t  socket.on(\"UserList\", (newUser: string) => {\n\t\tsetUserList((userList) => [...userList, newUser]);\n\t\tconsole.log('!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!')\n\t\tconsole.log(newUser);\n\t  });\n\n\t  return () => {\n\t\tsocket.disconnect();\n\t  };\n\t}, [socket]);\n\n\treturn (\n\t\t<div>\n\t\t{userList[0]}\n\t\ttest\n\t  </div>\n\t);\n  };\n  export default UserList;\n"]},"metadata":{},"sourceType":"module"}