{"ast":null,"code":"var _jsxFileName = \"/Users/jinkim/ts_5/app/react_p/src/codes/components/ActiveUsersList/ActiveUsersList.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef } from 'react';\nimport { ActiveUsersListWrapper, ActiveUsersHeader, ActiveUsersOccupancy } from './ActiveUsersList.styles';\nimport { ActiveUser } from '../ActiveUser/ActiveUser';\nimport { useAppState } from '../../AppStateContext';\nimport { useScrollPosition } from '@n8tb1t/use-scroll-position';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const ActiveUsersList = props => {\n  _s();\n\n  const {\n    state\n  } = useAppState();\n  const [stopOnScroll, setStopOnScroll] = useState(false);\n  const activeUserEndRef = useRef(null); //This is our reference to the instance of this component in the DOM\n\n  const scrollToBottom = () => {\n    var _activeUserEndRef$cur;\n\n    activeUserEndRef === null || activeUserEndRef === void 0 ? void 0 : (_activeUserEndRef$cur = activeUserEndRef.current) === null || _activeUserEndRef$cur === void 0 ? void 0 : _activeUserEndRef$cur.scrollIntoView({\n      block: \"end\",\n      inline: \"nearest\",\n      behavior: \"smooth\"\n    });\n  };\n\n  useScrollPosition(({\n    prevPos,\n    currPos\n  }) => {\n    const isShow = currPos.y > prevPos.y;\n    console.log(`${isShow}`);\n    if (isShow !== stopOnScroll) setStopOnScroll(isShow);\n  }, []);\n  useEffect(scrollToBottom, [state.activeUsers]);\n  const ActiveUsers = Array.from(state.activeUsers).map((activeUserName, i) => {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(ActiveUser, {\n        activeUser: activeUserName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: activeUserEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, i, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ActiveUsersHeader, {\n      children: [\"Active Users\", /*#__PURE__*/_jsxDEV(ActiveUsersOccupancy, {\n        children: state.presenceOccupancy\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 43\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(ActiveUsersListWrapper, {\n      children: ActiveUsers\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 133\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ActiveUsersList, \"Mx4HCTGgVmwvLLwu0Q7AXM82Knw=\", false, function () {\n  return [useAppState, useScrollPosition];\n});\n\n_c = ActiveUsersList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ActiveUsersList\");","map":{"version":3,"sources":["/Users/jinkim/ts_5/app/react_p/src/codes/components/ActiveUsersList/ActiveUsersList.tsx"],"names":["React","useEffect","useState","useRef","ActiveUsersListWrapper","ActiveUsersHeader","ActiveUsersOccupancy","ActiveUser","useAppState","useScrollPosition","ActiveUsersList","props","state","stopOnScroll","setStopOnScroll","activeUserEndRef","scrollToBottom","current","scrollIntoView","block","inline","behavior","prevPos","currPos","isShow","y","console","log","activeUsers","ActiveUsers","Array","from","map","activeUserName","i","presenceOccupancy"],"mappings":";;;AAAA,OAAOA,KAAP,IAA2DC,SAA3D,EAAsEC,QAAtE,EAA4FC,MAA5F,QAAyG,OAAzG;AACA,SAAQC,sBAAR,EAAgCC,iBAAhC,EAAmDC,oBAAnD,QAA8E,0BAA9E;AACA,SAAQC,UAAR,QAAyB,0BAAzB;AACA,SAAQC,WAAR,QAA0B,uBAA1B;AACA,SAAQC,iBAAR,QAAgC,6BAAhC;;;AAMA,OAAO,MAAMC,eAAgD,GAAIC,KAAD,IAAiC;AAAA;;AAC/F,QAAM;AAAEC,IAAAA;AAAF,MAAYJ,WAAW,EAA7B;AACA,QAAM,CAACK,YAAD,EAAeC,eAAf,IAAkCZ,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAMa,gBAAgB,GAAGZ,MAAM,CAAwB,IAAxB,CAA/B,CAH+F,CAGlC;;AAE7D,QAAMa,cAAc,GAAG,MAAM;AAAA;;AAC3BD,IAAAA,gBAAgB,SAAhB,IAAAA,gBAAgB,WAAhB,qCAAAA,gBAAgB,CAAEE,OAAlB,gFAA2BC,cAA3B,CAA0C;AAAEC,MAAAA,KAAK,EAAE,KAAT;AAAgBC,MAAAA,MAAM,EAAE,SAAxB;AAAmCC,MAAAA,QAAQ,EAAE;AAA7C,KAA1C;AACD,GAFD;;AAIAZ,EAAAA,iBAAiB,CAAC,CAAC;AAAEa,IAAAA,OAAF;AAAWC,IAAAA;AAAX,GAAD,KAA0B;AAC1C,UAAMC,MAAM,GAAGD,OAAO,CAACE,CAAR,GAAYH,OAAO,CAACG,CAAnC;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAa,GAAEH,MAAO,EAAtB;AACA,QAAIA,MAAM,KAAKX,YAAf,EAA6BC,eAAe,CAACU,MAAD,CAAf;AAC9B,GAJgB,EAId,EAJc,CAAjB;AAMAvB,EAAAA,SAAS,CAACe,cAAD,EAAiB,CAACJ,KAAK,CAACgB,WAAP,CAAjB,CAAT;AAEA,QAAMC,WAAW,GAAGC,KAAK,CAACC,IAAN,CAAWnB,KAAK,CAACgB,WAAjB,EAA8BI,GAA9B,CAAkC,CAACC,cAAD,EAAyBC,CAAzB,KAAuC;AAC3F,wBACE,QAAC,KAAD,CAAO,QAAP;AAAA,8BACE,QAAC,UAAD;AAAY,QAAA,UAAU,EAAED;AAAxB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,GAAG,EAAElB;AAAV;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA,OAAqBmB,CAArB;AAAA;AAAA;AAAA;AAAA,YADF;AAMD,GAPmB,CAApB;AASA,sBAAO;AAAA,4BAAE,QAAC,iBAAD;AAAA,8CAA+B,QAAC,oBAAD;AAAA,kBAAuBtB,KAAK,CAACuB;AAA7B;AAAA;AAAA;AAAA;AAAA,cAA/B;AAAA;AAAA;AAAA;AAAA;AAAA,YAAF,eAA2H,QAAC,sBAAD;AAAA,gBAAyBN;AAAzB;AAAA;AAAA;AAAA;AAAA,YAA3H;AAAA,kBAAP;AACD,CA3BM;;GAAMnB,e;UACOF,W,EAQlBC,iB;;;KATWC,e","sourcesContent":["import React, {useCallback, FunctionComponent, useReducer, useEffect, useState, useContext, useRef} from 'react'\nimport {ActiveUsersListWrapper, ActiveUsersHeader, ActiveUsersOccupancy} from './ActiveUsersList.styles'\nimport {ActiveUser} from '../ActiveUser/ActiveUser'\nimport {useAppState} from '../../AppStateContext'\nimport {useScrollPosition} from '@n8tb1t/use-scroll-position'\n\ninterface ActiveUsersListProps {\n  activeUser?: Array<any>\n}\n\nexport const ActiveUsersList: React.SFC<ActiveUsersListProps> = (props: ActiveUsersListProps) => {\n  const { state } = useAppState();\n  const [stopOnScroll, setStopOnScroll] = useState(false);\n  const activeUserEndRef = useRef<null | HTMLDivElement>(null) //This is our reference to the instance of this component in the DOM\n\n  const scrollToBottom = () => {\n    activeUserEndRef?.current?.scrollIntoView({ block: \"end\", inline: \"nearest\", behavior: \"smooth\" });\n  }\n\n  useScrollPosition(({ prevPos, currPos }) => {\n    const isShow = currPos.y > prevPos.y\n    console.log(`${isShow}`);\n    if (isShow !== stopOnScroll) setStopOnScroll(isShow)\n  }, [])\n\n  useEffect(scrollToBottom, [state.activeUsers])\n\n  const ActiveUsers = Array.from(state.activeUsers).map((activeUserName: string, i: number) => {\n    return (\n      <React.Fragment key={i}>\n        <ActiveUser activeUser={activeUserName} />\n        <div ref={activeUserEndRef} />\n      </React.Fragment>\n    );\n  });\n\n  return <><ActiveUsersHeader>Active Users<ActiveUsersOccupancy>{state.presenceOccupancy}</ActiveUsersOccupancy></ActiveUsersHeader><ActiveUsersListWrapper>{ActiveUsers}</ActiveUsersListWrapper></>\n}"]},"metadata":{},"sourceType":"module"}