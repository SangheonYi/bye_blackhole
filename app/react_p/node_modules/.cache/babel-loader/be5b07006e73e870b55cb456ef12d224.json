{"ast":null,"code":"var _jsxFileName = \"/Users/jinkim/bye_blackhole/app/react_p/src/Chat/ChatLog.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport AutoScroll from \"./AutoScroll\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChatLog = ({\n  socket\n}) => {\n  _s();\n\n  const [msgList, setMsgList] = useState([]);\n  useEffect(() => {\n    // messsgeItem : {msg: String, name: String, timeStamp: String}\n    socket.on(\"onReceive\", messageItem => {\n      setMsgList(msgList => [...msgList, messageItem]);\n      console.log(messageItem);\n    });\n    socket.on(\"onConnect\", systemMessage => {\n      setMsgList(msgList => [...msgList, {\n        msg: systemMessage\n      }]);\n    });\n    socket.on(\"onDisconnect\", systemMessage => {\n      setMsgList(msgList => [...msgList, {\n        msg: systemMessage\n      }]);\n    });\n    return () => {\n      socket.disconnect();\n    };\n  }, [socket]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(AutoScroll, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 4\n    }, this), msgList.map((msg, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: msg.userName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: msg.timeStamp\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: msg.msg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this)]\n    }, idx, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ChatLog, \"yptu8yjtsBqlAzZaE5mznXeW93w=\");\n\n_c = ChatLog;\nexport default ChatLog;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatLog\");","map":{"version":3,"sources":["/Users/jinkim/bye_blackhole/app/react_p/src/Chat/ChatLog.tsx"],"names":["React","useEffect","useState","AutoScroll","ChatLog","socket","msgList","setMsgList","on","messageItem","console","log","systemMessage","msg","disconnect","map","idx","userName","timeStamp"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,UAAP,MAAuB,cAAvB;;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAqB;AAAA;;AACnC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAQ,EAAR,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACjB;AACGI,IAAAA,MAAM,CAACG,EAAP,CAAU,WAAV,EAAwBC,WAAD,IAAwB;AAC7CF,MAAAA,UAAU,CAAED,OAAD,IAAa,CAAC,GAAGA,OAAJ,EAAaG,WAAb,CAAd,CAAV;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,WAAZ;AACD,KAHD;AAIAJ,IAAAA,MAAM,CAACG,EAAP,CAAU,WAAV,EAAwBI,aAAD,IAA2B;AAChDL,MAAAA,UAAU,CAAED,OAAD,IAAa,CAAC,GAAGA,OAAJ,EAAa;AAAEO,QAAAA,GAAG,EAAED;AAAP,OAAb,CAAd,CAAV;AACD,KAFD;AAGAP,IAAAA,MAAM,CAACG,EAAP,CAAU,cAAV,EAA2BI,aAAD,IAAwB;AAChDL,MAAAA,UAAU,CAAED,OAAD,IAAa,CAAC,GAAGA,OAAJ,EAAa;AAAEO,QAAAA,GAAG,EAAED;AAAP,OAAb,CAAd,CAAV;AACD,KAFD;AAGA,WAAO,MAAM;AACXP,MAAAA,MAAM,CAACS,UAAP;AACD,KAFD;AAGD,GAfQ,EAeN,CAACT,MAAD,CAfM,CAAT;AAkBA,sBACE;AAAA,4BACD,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,YADC,EAEGC,OAAO,CAACS,GAAR,CAAY,CAACF,GAAD,EAAMG,GAAN,kBACX;AAAA,8BACE;AAAA,kBAAMH,GAAG,CAACI;AAAV;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kBAAMJ,GAAG,CAACK;AAAV;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA,kBAAML,GAAG,CAACA;AAAV;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA,OAAUG,GAAV;AAAA;AAAA;AAAA;AAAA,YADD,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAjCD;;GAAMZ,O;;KAAAA,O;AAmCN,eAAeA,OAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport AutoScroll from \"./AutoScroll\"\n\nconst ChatLog = ({ socket }: any) => {\n  const [msgList, setMsgList] = useState<any[]>([]);\n\n  useEffect(() => {\n\t// messsgeItem : {msg: String, name: String, timeStamp: String}\n    socket.on(\"onReceive\", (messageItem: never) => {\n      setMsgList((msgList) => [...msgList, messageItem]);\n      console.log(messageItem);\n    });\n    socket.on(\"onConnect\", (systemMessage: string) => {\n      setMsgList((msgList) => [...msgList, { msg: systemMessage } as never]);\n    });\n    socket.on(\"onDisconnect\", (systemMessage: any) => {\n      setMsgList((msgList) => [...msgList, { msg: systemMessage } as never]);\n    });\n    return () => {\n      socket.disconnect();\n    };\n  }, [socket]);\n\n\n  return (\n    <div>\n\t  <AutoScroll></AutoScroll>\n      {msgList.map((msg, idx) => (\n        <div key={idx}>\n          <div>{msg.userName}</div>\n          <div>{msg.timeStamp}</div>\n          <div>{msg.msg}</div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default ChatLog;"]},"metadata":{},"sourceType":"module"}