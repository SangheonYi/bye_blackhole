{"ast":null,"code":"var _jsxFileName = \"/Users/jinkim/bye_blackhole/app/react_p/src/Chat/ChatLog.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport \"./ChatLog.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChatLog = ({\n  socket\n}) => {\n  _s();\n\n  const [msgList, setMsgList] = useState([]);\n  useEffect(() => {\n    // messsgeItem : {msg: String, name: String, timeStamp: String}\n    socket.on(\"onReceive\", messageItem => {\n      setMsgList(msgList => [...msgList, messageItem]);\n      console.log(messageItem);\n    });\n    socket.on(\"onReceiveMyMsg\", messageItem => {\n      var myMessageItem = {\n        myMsg: messageItem.msg,\n        timeStamp: messageItem.timeStamp\n      };\n      setMsgList(msgList => [...msgList, myMessageItem]);\n      console.log(messageItem);\n    });\n    socket.on(\"onConnect\", systemMessage => {\n      setMsgList(msgList => [...msgList, {\n        sysMsg: systemMessage\n      }]);\n    });\n    socket.on(\"onDisconnect\", systemMessage => {\n      setMsgList(msgList => [...msgList, {\n        sysMsg: systemMessage\n      }]);\n    });\n    return () => {\n      socket.disconnect();\n    };\n  }, [socket]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [msgList.map((msg, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [msg.userName && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"msg-userName\",\n        children: msg.userName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [msg.msg && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"msgLeft\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"msg-msg\",\n            children: msg.msg\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"msg-timeStamp\",\n            children: [\"(\", msg.timeStamp, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 6\n        }, this), msg.myMsg && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"msgRight\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"msg-msg\",\n            children: msg.myMsg\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"msg-timeStamp\",\n            children: [\"(\", msg.timeStamp, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sysMsg\",\n        children: msg.sysMsg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 5\n      }, this)]\n    }, idx, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"msg myMsg\",\n      children: \"testing...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ChatLog, \"yptu8yjtsBqlAzZaE5mznXeW93w=\");\n\n_c = ChatLog;\nexport default ChatLog;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatLog\");","map":{"version":3,"sources":["/Users/jinkim/bye_blackhole/app/react_p/src/Chat/ChatLog.tsx"],"names":["React","useEffect","useState","ChatLog","socket","msgList","setMsgList","on","messageItem","console","log","myMessageItem","myMsg","msg","timeStamp","systemMessage","sysMsg","disconnect","map","idx","userName"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,eAAP;;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAqB;AAAA;;AACnC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,CAAQ,EAAR,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACjB;AACGG,IAAAA,MAAM,CAACG,EAAP,CAAU,WAAV,EAAwBC,WAAD,IAAwB;AAC7CF,MAAAA,UAAU,CAAED,OAAD,IAAa,CAAC,GAAGA,OAAJ,EAAaG,WAAb,CAAd,CAAV;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,WAAZ;AACD,KAHD;AAIHJ,IAAAA,MAAM,CAACG,EAAP,CAAU,gBAAV,EAA6BC,WAAD,IAAkE;AAC7F,UAAIG,aAAa,GAAG;AAACC,QAAAA,KAAK,EAAEJ,WAAW,CAACK,GAApB;AAAyBC,QAAAA,SAAS,EAAEN,WAAW,CAACM;AAAhD,OAApB;AACAR,MAAAA,UAAU,CAAED,OAAD,IAAa,CAAC,GAAGA,OAAJ,EAAaM,aAAb,CAAd,CAAV;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAYF,WAAZ;AACE,KAJH;AAKGJ,IAAAA,MAAM,CAACG,EAAP,CAAU,WAAV,EAAwBQ,aAAD,IAA2B;AAChDT,MAAAA,UAAU,CAAED,OAAD,IAAa,CAAC,GAAGA,OAAJ,EAAa;AAAEW,QAAAA,MAAM,EAAED;AAAV,OAAb,CAAd,CAAV;AACD,KAFD;AAGAX,IAAAA,MAAM,CAACG,EAAP,CAAU,cAAV,EAA2BQ,aAAD,IAAwB;AAChDT,MAAAA,UAAU,CAAED,OAAD,IAAa,CAAC,GAAGA,OAAJ,EAAa;AAAEW,QAAAA,MAAM,EAAED;AAAV,OAAb,CAAd,CAAV;AACD,KAFD;AAGA,WAAO,MAAM;AACXX,MAAAA,MAAM,CAACa,UAAP;AACD,KAFD;AAGD,GApBQ,EAoBN,CAACb,MAAD,CApBM,CAAT;AAsBA,sBACE;AAAA,eACGC,OAAO,CAACa,GAAR,CAAY,CAACL,GAAD,EAAMM,GAAN,kBACX;AAAA,iBACFN,GAAG,CAACO,QAAJ,iBACM;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,kBAA+BP,GAAG,CAACO;AAAnC;AAAA;AAAA;AAAA;AAAA,cAFJ,eAIH;AAAA,mBACAP,GAAG,CAACA,GAAJ,iBACA;AAAK,UAAA,SAAS,EAAC,SAAf;AAAA,kCACS;AAAM,YAAA,SAAS,EAAC,SAAhB;AAAA,sBAA2BA,GAAG,CAACA;AAA/B;AAAA;AAAA;AAAA;AAAA,kBADT,eAEC;AAAM,YAAA,SAAS,EAAC,eAAhB;AAAA,4BAAkCA,GAAG,CAACC,SAAtC;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFD;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFA,EAOAD,GAAG,CAACD,KAAJ,iBACA;AAAK,UAAA,SAAS,EAAC,UAAf;AAAA,kCACS;AAAM,YAAA,SAAS,EAAC,SAAhB;AAAA,sBAA2BC,GAAG,CAACD;AAA/B;AAAA;AAAA;AAAA;AAAA,kBADT,eAEC;AAAM,YAAA,SAAS,EAAC,eAAhB;AAAA,4BAAkCC,GAAG,CAACC,SAAtC;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFD;AAAA;AAAA;AAAA;AAAA;AAAA,gBARA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJG,eAkBJ;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA,kBAA0BD,GAAG,CAACG;AAA9B;AAAA;AAAA;AAAA;AAAA,cAlBI;AAAA,OAAUG,GAAV;AAAA;AAAA;AAAA;AAAA,YADD,CADH,eAuBD;AAAM,MAAA,SAAS,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAvBC;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD,CApDD;;GAAMhB,O;;KAAAA,O;AAsDN,eAAeA,OAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./ChatLog.css\";\n\nconst ChatLog = ({ socket }: any) => {\n  const [msgList, setMsgList] = useState<any[]>([]);\n\n  useEffect(() => {\n\t// messsgeItem : {msg: String, name: String, timeStamp: String}\n    socket.on(\"onReceive\", (messageItem: never) => {\n      setMsgList((msgList) => [...msgList, messageItem]);\n      console.log(messageItem);\n    });\n\tsocket.on(\"onReceiveMyMsg\", (messageItem: {userName:string, msg:string, timeStamp:string}) => {\n\t\tvar myMessageItem = {myMsg: messageItem.msg, timeStamp: messageItem.timeStamp};\n\t\tsetMsgList((msgList) => [...msgList, myMessageItem]);\n\t\tconsole.log(messageItem);\n\t  });\n    socket.on(\"onConnect\", (systemMessage: string) => {\n      setMsgList((msgList) => [...msgList, { sysMsg: systemMessage } as never]);\n    });\n    socket.on(\"onDisconnect\", (systemMessage: any) => {\n      setMsgList((msgList) => [...msgList, { sysMsg: systemMessage } as never]);\n    });\n    return () => {\n      socket.disconnect();\n    };\n  }, [socket]);\n\n  return (\n    <div>\n      {msgList.map((msg, idx) => (\n        <div key={idx}>\n\t\t  \t{msg.userName &&\n          \t\t<div className=\"msg-userName\">{msg.userName}</div>\n\t\t\t}\n\t\t  \t<div>\n\t\t\t\t{msg.msg &&\n\t\t\t\t\t<div className=\"msgLeft\">\n          \t\t\t\t<span className=\"msg-msg\">{msg.msg}</span>\n\t\t\t\t\t\t<span className=\"msg-timeStamp\">({msg.timeStamp})</span>\n\t\t\t\t\t</div>\n\t\t\t\t}\n\t\t\t\t{msg.myMsg &&\n\t\t\t\t\t<div className=\"msgRight\">\n          \t\t\t\t<span className=\"msg-msg\">{msg.myMsg}</span>\n\t\t\t\t\t\t<span className=\"msg-timeStamp\">({msg.timeStamp})</span>\n\t\t\t\t\t</div>\n\t\t\t\t}\n\t\t\t</div>\n\t\t  <div className=\"sysMsg\" >{msg.sysMsg}</div>\n        </div>\n      ))}\n\t  <span className=\"msg myMsg\">testing...</span>\n    </div>\n  );\n};\n\nexport default ChatLog;"]},"metadata":{},"sourceType":"module"}