{"ast":null,"code":"var _jsxFileName = \"/Users/jinkim/ts_5/app/react_p/src/codes/components/MessageList/MessageList.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef } from 'react';\nimport { MessageListWrapper } from './MessageList.styles';\nimport { Message } from '../Message/Message';\nimport { useAppState } from '../../AppStateContext';\nimport { useScrollPosition } from '@n8tb1t/use-scroll-position';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const MessageList = props => {\n  _s();\n\n  const {\n    state\n  } = useAppState();\n  const [stopOnScroll, setStopOnScroll] = useState(false);\n  const messagesEndRef = useRef(null); //This is our reference to the instance of this component in the DOM\n  //const listBottomPos = messagesEndRef.current.getBoundingClientRect().bottom;\n  //console.log(`listBottomPos: ${listBottomPos}`);\n\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n\n    messagesEndRef === null || messagesEndRef === void 0 ? void 0 : (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      block: \"end\",\n      inline: \"nearest\",\n      behavior: \"smooth\"\n    });\n  };\n\n  useScrollPosition(({\n    prevPos,\n    currPos\n  }) => {\n    //const bottom = messagesEndRef.current.scrollHeight - currPos.y;//=== e.target.clientHeight;\n    const isShow = currPos.y > prevPos.y;\n    console.log(`${isShow}`);\n    if (isShow !== stopOnScroll) setStopOnScroll(isShow);\n  }, []);\n  useEffect(scrollToBottom, [state.messages]);\n  const Messages = Array.from(state.messages).map((onemessage, i) => {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Message, {\n        message: onemessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, i, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(MessageListWrapper, {\n    children: Messages\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 10\n  }, this);\n};\n\n_s(MessageList, \"0lC+m/4tABRVs+cAOOgNIVJNu/k=\", false, function () {\n  return [useAppState, useScrollPosition];\n});\n\n_c = MessageList;\n\nvar _c;\n\n$RefreshReg$(_c, \"MessageList\");","map":{"version":3,"sources":["/Users/jinkim/ts_5/app/react_p/src/codes/components/MessageList/MessageList.tsx"],"names":["React","useEffect","useState","useRef","MessageListWrapper","Message","useAppState","useScrollPosition","MessageList","props","state","stopOnScroll","setStopOnScroll","messagesEndRef","scrollToBottom","current","scrollIntoView","block","inline","behavior","prevPos","currPos","isShow","y","console","log","messages","Messages","Array","from","map","onemessage","i"],"mappings":";;;AAAA,OAAOA,KAAP,IAA2DC,SAA3D,EAAsEC,QAAtE,EAA4FC,MAA5F,QAAyG,OAAzG;AACA,SAAQC,kBAAR,QAAiC,sBAAjC;AACA,SAAQC,OAAR,QAAsB,oBAAtB;AACA,SAAQC,WAAR,QAA0B,uBAA1B;AACA,SAAQC,iBAAR,QAAgC,6BAAhC;;AAMA,OAAO,MAAMC,WAAwC,GAAIC,KAAD,IAA6B;AAAA;;AACnF,QAAM;AAAEC,IAAAA;AAAF,MAAYJ,WAAW,EAA7B;AACA,QAAM,CAACK,YAAD,EAAeC,eAAf,IAAkCV,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAMW,cAAc,GAAGV,MAAM,CAAwB,IAAxB,CAA7B,CAHmF,CAGxB;AAC3D;AACA;;AACA,QAAMW,cAAc,GAAG,MAAM;AAAA;;AAC5BD,IAAAA,cAAc,SAAd,IAAAA,cAAc,WAAd,qCAAAA,cAAc,CAAEE,OAAhB,gFAAyBC,cAAzB,CAAwC;AAAEC,MAAAA,KAAK,EAAE,KAAT;AAAgBC,MAAAA,MAAM,EAAE,SAAxB;AAAmCC,MAAAA,QAAQ,EAAE;AAA7C,KAAxC;AACE,GAFH;;AAIAZ,EAAAA,iBAAiB,CAAC,CAAC;AAAEa,IAAAA,OAAF;AAAWC,IAAAA;AAAX,GAAD,KAA0B;AAC1C;AACA,UAAMC,MAAM,GAAGD,OAAO,CAACE,CAAR,GAAYH,OAAO,CAACG,CAAnC;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAa,GAAEH,MAAO,EAAtB;AACA,QAAIA,MAAM,KAAKX,YAAf,EAA6BC,eAAe,CAACU,MAAD,CAAf;AAC9B,GALgB,EAKd,EALc,CAAjB;AAOArB,EAAAA,SAAS,CAACa,cAAD,EAAiB,CAACJ,KAAK,CAACgB,QAAP,CAAjB,CAAT;AAEA,QAAMC,QAAQ,GAAGC,KAAK,CAACC,IAAN,CAAWnB,KAAK,CAACgB,QAAjB,EAA2BI,GAA3B,CAA+B,CAACC,UAAD,EAAqBC,CAArB,KAAmC;AACjF,wBACE,QAAC,KAAD,CAAO,QAAP;AAAA,8BACE,QAAC,OAAD;AAAS,QAAA,OAAO,EAAED;AAAlB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,GAAG,EAAElB;AAAV;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA,OAAqBmB,CAArB;AAAA;AAAA;AAAA;AAAA,YADF;AAMD,GAPgB,CAAjB;AASA,sBAAO,QAAC,kBAAD;AAAA,cAAqBL;AAArB;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CA7BM;;GAAMnB,W;UACOF,W,EASlBC,iB;;;KAVWC,W","sourcesContent":["import React, {useCallback, FunctionComponent, useReducer, useEffect, useState, useContext, useRef} from 'react'\nimport {MessageListWrapper} from './MessageList.styles'\nimport {Message} from '../Message/Message'\nimport {useAppState} from '../../AppStateContext'\nimport {useScrollPosition} from '@n8tb1t/use-scroll-position'\n\ninterface MessageListProps {\n  messages?: Array<any>\n}\n\nexport const MessageList: React.SFC<MessageListProps> = (props: MessageListProps) => {\n  const { state } = useAppState();\n  const [stopOnScroll, setStopOnScroll] = useState(false);\n  const messagesEndRef = useRef<null | HTMLDivElement>(null) //This is our reference to the instance of this component in the DOM\n  //const listBottomPos = messagesEndRef.current.getBoundingClientRect().bottom;\n  //console.log(`listBottomPos: ${listBottomPos}`);\n  const scrollToBottom = () => {\n   messagesEndRef?.current?.scrollIntoView({ block: \"end\", inline: \"nearest\", behavior: \"smooth\" });\n    }\n\n  useScrollPosition(({ prevPos, currPos }) => {\n    //const bottom = messagesEndRef.current.scrollHeight - currPos.y;//=== e.target.clientHeight;\n    const isShow = currPos.y > prevPos.y\n    console.log(`${isShow}`);\n    if (isShow !== stopOnScroll) setStopOnScroll(isShow)\n  }, [])\n\n  useEffect(scrollToBottom, [state.messages])\n\n  const Messages = Array.from(state.messages).map((onemessage: string, i: number) => {\n    return (\n      <React.Fragment key={i}>\n        <Message message={onemessage} />\n        <div ref={messagesEndRef} />\n      </React.Fragment>\n    );\n  });\n\n  return <MessageListWrapper>{Messages}</MessageListWrapper>\n}"]},"metadata":{},"sourceType":"module"}