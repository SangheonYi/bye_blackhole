{"ast":null,"code":"import _toConsumableArray from\"/Users/jinkim/bye_blackhole/app/react_p/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/Users/jinkim/bye_blackhole/app/react_p/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from\"react\";import AutoScroll from\"./AutoScroll\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ChatLog=function ChatLog(_ref){var socket=_ref.socket;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),msgList=_useState2[0],setMsgList=_useState2[1];var editDone=false;useEffect(function(){// messsgeItem : {msg: String, name: String, timeStamp: String}\nsocket.on(\"onReceive\",function(messageItem){setMsgList(function(msgList){return[].concat(_toConsumableArray(msgList),[messageItem]);});editDone=true;console.log(editDone);console.log(messageItem);});socket.on(\"onConnect\",function(systemMessage){setMsgList(function(msgList){return[].concat(_toConsumableArray(msgList),[{msg:systemMessage}]);});});socket.on(\"onDisconnect\",function(systemMessage){setMsgList(function(msgList){return[].concat(_toConsumableArray(msgList),[{msg:systemMessage}]);});});return function(){socket.disconnect();};},[socket]);return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(AutoScroll,{editDone:true}),msgList.map(function(msg,idx){return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{children:msg.userName}),/*#__PURE__*/_jsx(\"div\",{children:msg.timeStamp}),/*#__PURE__*/_jsx(\"div\",{children:msg.msg})]},idx);})]});};export default ChatLog;","map":{"version":3,"sources":["/Users/jinkim/bye_blackhole/app/react_p/src/Chat/ChatLog.tsx"],"names":["React","useEffect","useState","AutoScroll","ChatLog","socket","msgList","setMsgList","editDone","on","messageItem","console","log","systemMessage","msg","disconnect","map","idx","userName","timeStamp"],"mappings":"oUAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,UAAP,KAAuB,cAAvB,C,wFAEA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,MAAqB,IAAlBC,CAAAA,MAAkB,MAAlBA,MAAkB,eACLH,QAAQ,CAAQ,EAAR,CADH,wCAC5BI,OAD4B,eACnBC,UADmB,eAEnC,GAAIC,CAAAA,QAAQ,CAAG,KAAf,CAEAP,SAAS,CAAC,UAAM,CACjB;AACGI,MAAM,CAACI,EAAP,CAAU,WAAV,CAAuB,SAACC,WAAD,CAAwB,CAC7CH,UAAU,CAAC,SAACD,OAAD,qCAAiBA,OAAjB,GAA0BI,WAA1B,IAAD,CAAV,CACHF,QAAQ,CAAG,IAAX,CACAG,OAAO,CAACC,GAAR,CAAYJ,QAAZ,EACGG,OAAO,CAACC,GAAR,CAAYF,WAAZ,EACD,CALD,EAMAL,MAAM,CAACI,EAAP,CAAU,WAAV,CAAuB,SAACI,aAAD,CAA2B,CAChDN,UAAU,CAAC,SAACD,OAAD,qCAAiBA,OAAjB,GAA0B,CAAEQ,GAAG,CAAED,aAAP,CAA1B,IAAD,CAAV,CACD,CAFD,EAGAR,MAAM,CAACI,EAAP,CAAU,cAAV,CAA0B,SAACI,aAAD,CAAwB,CAChDN,UAAU,CAAC,SAACD,OAAD,qCAAiBA,OAAjB,GAA0B,CAAEQ,GAAG,CAAED,aAAP,CAA1B,IAAD,CAAV,CACD,CAFD,EAGA,MAAO,WAAM,CACXR,MAAM,CAACU,UAAP,GACD,CAFD,CAGD,CAjBQ,CAiBN,CAACV,MAAD,CAjBM,CAAT,CAqBA,mBACE,oCACF,KAAC,UAAD,EAAY,QAAQ,KAApB,EADE,CAEGC,OAAO,CAACU,GAAR,CAAY,SAACF,GAAD,CAAMG,GAAN,qBACX,oCACE,qBAAMH,GAAG,CAACI,QAAV,EADF,cAEE,qBAAMJ,GAAG,CAACK,SAAV,EAFF,cAGE,qBAAML,GAAG,CAACA,GAAV,EAHF,GAAUG,GAAV,CADW,EAAZ,CAFH,GADF,CAYD,CArCD,CAuCA,cAAeb,CAAAA,OAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport AutoScroll from \"./AutoScroll\"\n\nconst ChatLog = ({ socket }: any) => {\n  const [msgList, setMsgList] = useState<any[]>([]);\n  let editDone = false;\n\n  useEffect(() => {\n\t// messsgeItem : {msg: String, name: String, timeStamp: String}\n    socket.on(\"onReceive\", (messageItem: never) => {\n      setMsgList((msgList) => [...msgList, messageItem]);\n\t  editDone = true;\n\t  console.log(editDone);\n      console.log(messageItem);\n    });\n    socket.on(\"onConnect\", (systemMessage: string) => {\n      setMsgList((msgList) => [...msgList, { msg: systemMessage } as never]);\n    });\n    socket.on(\"onDisconnect\", (systemMessage: any) => {\n      setMsgList((msgList) => [...msgList, { msg: systemMessage } as never]);\n    });\n    return () => {\n      socket.disconnect();\n    };\n  }, [socket]);\n\n\n\n  return (\n    <div>\n\t\t<AutoScroll editDone></AutoScroll>\n      {msgList.map((msg, idx) => (\n        <div key={idx}>\n          <div>{msg.userName}</div>\n          <div>{msg.timeStamp}</div>\n          <div>{msg.msg}</div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default ChatLog;"]},"metadata":{},"sourceType":"module"}