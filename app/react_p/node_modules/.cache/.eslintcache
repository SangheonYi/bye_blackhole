[{"/goinfre/jinkim/bye_blackhole/app/react_p/src/index.tsx":"1","/goinfre/jinkim/bye_blackhole/app/react_p/src/reportWebVitals.js":"2","/goinfre/jinkim/bye_blackhole/app/react_p/src/App.tsx":"3","/goinfre/jinkim/bye_blackhole/app/react_p/src/Chat/Chat.tsx":"4","/goinfre/jinkim/bye_blackhole/app/react_p/src/Chat/RoomList.tsx":"5","/goinfre/jinkim/bye_blackhole/app/react_p/src/Chat/Home.tsx":"6","/goinfre/jinkim/bye_blackhole/app/react_p/src/Chat/ChatLog.tsx":"7","/goinfre/jinkim/bye_blackhole/app/react_p/src/Chat/ChatInput.tsx":"8","/goinfre/jinkim/bye_blackhole/app/react_p/src/Chat/UserList.tsx":"9","/goinfre/jinkim/bye_blackhole/app/react_p/src/Chat/Loading.tsx":"10","/goinfre/jinkim/bye_blackhole/app/react_p/src/Chat/Modal.tsx":"11","/goinfre/jinkim/bye_blackhole/app/react_p/src/Chat/Images.tsx":"12"},{"size":567,"mtime":1623728486728,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":1623728486729,"results":"15","hashOfConfig":"14"},{"size":1924,"mtime":1623731671730,"results":"16","hashOfConfig":"14"},{"size":1501,"mtime":1623728486726,"results":"17","hashOfConfig":"14"},{"size":1469,"mtime":1623731288967,"results":"18","hashOfConfig":"14"},{"size":1137,"mtime":1623728486726,"results":"19","hashOfConfig":"14"},{"size":1726,"mtime":1623729730200,"results":"20","hashOfConfig":"14"},{"size":1101,"mtime":1623728486726,"results":"21","hashOfConfig":"14"},{"size":816,"mtime":1623728486727,"results":"22","hashOfConfig":"14"},{"size":134,"mtime":1623728486726,"results":"23","hashOfConfig":"14"},{"size":934,"mtime":1623730990293,"results":"24","hashOfConfig":"14"},{"size":621,"mtime":1623728486726,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1nw9xvd",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"/goinfre/jinkim/bye_blackhole/app/react_p/src/index.tsx",[],["57","58"],"/goinfre/jinkim/bye_blackhole/app/react_p/src/reportWebVitals.js",[],["59","60"],"/goinfre/jinkim/bye_blackhole/app/react_p/src/App.tsx",[],"/goinfre/jinkim/bye_blackhole/app/react_p/src/Chat/Chat.tsx",[],"/goinfre/jinkim/bye_blackhole/app/react_p/src/Chat/RoomList.tsx",["61"],"import React, {useState} from \"react\";\nimport \"./styles/RoomList.css\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Modal from './Modal';\nimport axios from 'axios';\n\ninterface HomeObj{\n\tuserName:any,\n\troomName:any,\n\tsetRoomName:(value:any)=>void,\n}\n\nconst RoomList = ({ userName, roomName, setRoomName}: HomeObj) => {\n  const handleRoomNameChange = (e:any) => {\n    setRoomName(e.target.value);\n  };\n\n  const [modalOpen, setModalOpen] = useState(false);\n  const openModal = () => {\n\tsetModalOpen(true);\n  }\n  const closeModal = () => {\n\tsetModalOpen(false);\n  }\n\n  sessionStorage.setItem(\"roomName\", roomName);\n\n  async function makeRoom(){\n\t  userName = userName ? userName : sessionStorage.getItem(\"userName\")\n\t  const roomInfo = {id:roomName, password:\"\", owner_id:userName}\n\t  console.log(\"insert!!!!!!!!!\")\n\t  await axios.post('/RoomList/insert', {roomInfo});\n  }\n\n  return (\n    <div className=\"RoomList-container\">\n\t\t<div className=\"makeRoom-box\">\n\t\t\t<a className=\"btn btn-primary btn-sm makeRoom\" onClick={openModal}><b>방 만들기</b></a>\n\t\t\t<Modal open={modalOpen} close={closeModal} header=\"방 만들기\" makeRoom={makeRoom}>\n\t\t\t\t<label ><b>방 제목</b></label>\n\t\t\t\t<input onChange={handleRoomNameChange}></input>\n\t\t\t</Modal>\n\t\t</div>\n\n\t\t<div className=\"RoomList\">\n\t\t\t방 목록...\n\t\t</div>\n\t\t<div className=\"Join-button\">\n\t\t\t<a className=\"btn btn-dark\" href=\"/Chat\"><b>입장하기</b></a>\n\t\t</div>\n    </div>\n  );\n};\n\nexport default RoomList;","/goinfre/jinkim/bye_blackhole/app/react_p/src/Chat/Home.tsx",["62"],"import React from \"react\";\nimport \"./styles/Home.css\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport images from './Images';\n\ninterface HomeObj{\n\tuserName:any,\n\tsetUserName:(value:any)=>void,\n\ticon:any,\n\tsetIcon:(value:any)=>void\n}\n\nconst Home = ({ userName, setUserName, icon, setIcon }: HomeObj) => {\n  const handleUserNameChange = (e:any) => {\n    setUserName(e.target.value);\n  };\n  const handleIconChange = (e:any) => {\n    setIcon(e.target.value);\n  };\n\n  sessionStorage.setItem(\"userName\", userName);\n  sessionStorage.setItem(\"icon\", icon);\n\n  return (\n    <div className=\"Home-container\">\n      <label><b>ID</b></label>\n      <input onChange={handleUserNameChange}></input>\n\n\t  <div className=\"icon-container\">\n\t\t{images.map(({value, src}) =>\n\t\t\t<span className=\"icon\">\n\t\t\t<input type=\"radio\" name=\"icon\" value={value} onChange={handleIconChange} className=\"icon-input\"/>\n\t\t\t<img src={src} width=\"50\" height=\"50\" className=\"icon-img\"></img>\n\t\t\t</span>\n\t\t)}\n\t  </div>\n\n\t  <div className=\"Join-button\">\n\t  \t<a className=\"btn btn-dark\" href=\"/RoomList\"><b>로그인</b></a>\n\t  </div>\n    </div>\n  );\n};\n\nexport default Home;","/goinfre/jinkim/bye_blackhole/app/react_p/src/Chat/ChatLog.tsx",["63"],"import React, { useEffect, useState } from \"react\";\nimport \"./styles/ChatLog.css\";\n\n\nconst ChatLog = ({ userName, socket }: any) => {\n  const [msgList, setMsgList] = useState<any[]>([]);\n\n  useEffect(() => {\n\t// messsgeItem : {msg: String, name: String, timeStamp: String}\n    socket.on(\"onReceive\", (messageItem: {userName:string, msg:string, timeStamp:string}) => {\n\t\tuserName = userName ? userName : sessionStorage.getItem(\"userName\")\n\t  if (userName === messageItem.userName)\n\t\tsetMsgList((msgList) => [...msgList, {myMsg: messageItem.msg, timeStamp: messageItem.timeStamp} as never]);\n\t  else\n\t\tsetMsgList((msgList) => [...msgList, messageItem]);\n      console.log(messageItem);\n\t  console.log(userName)\n    });\n    socket.on(\"onConnect\", (systemMessage: string) => {\n      setMsgList((msgList) => [...msgList, { sysMsg: systemMessage } as never]);\n    });\n    socket.on(\"onDisconnect\", (systemMessage: any) => {\n      setMsgList((msgList) => [...msgList, { sysMsg: systemMessage } as never]);\n    });\n    return () => {\n      socket.disconnect();\n    };\n  }, [socket]);\n\n  return (\n    <div>\n      {msgList.map((msg, idx) => (\n        <div key={idx}>\n\t\t  \t{msg.userName &&\n          \t\t<div className=\"msg-userName\">{msg.userName}</div>\n\t\t\t}\n\t\t\t{msg.msg &&\n\t\t\t\t<div className=\"msgLeft\">\n          \t\t\t<span className=\"msg-msg\">{msg.msg}</span>\n\t\t\t\t\t<span className=\"msg-timeStamp\">({msg.timeStamp})</span>\n\t\t\t\t</div>\n\t\t\t}\n\t\t\t{msg.myMsg &&\n\t\t\t\t<div className=\"msgRight\">\n\t\t\t\t\t<span className=\"msg-timeStamp\">({msg.timeStamp})</span>\n          \t\t\t<span className=\"msg-msg\">{msg.myMsg}</span>\n\t\t\t\t</div>\n\t\t\t}\n\t\t  <div className=\"sysMsg\" >{msg.sysMsg}</div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default ChatLog;","/goinfre/jinkim/bye_blackhole/app/react_p/src/Chat/ChatInput.tsx",["64","65"],"import React, { useRef, useState } from \"react\";\nimport socketIOClient from \"socket.io-client\";\nimport \"./styles/ChatInput.css\";\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport {Button} from \"react-bootstrap\";\n\nconst ChatInput = ({ userName, socket }: any) => {\n  const [chatMessage, setChatMessage] = useState(\"\");\n\n  const handleSubmit = (e:any) => {\n    e.preventDefault();\n    socket.emit(\"onSend\", {\n      userName: userName ? userName : sessionStorage.getItem(\"userName\"),\n      msg: chatMessage,\n      timeStamp: new Date().toLocaleTimeString(),\n    });\n    setChatMessage(\"\");\n  };\n\n  const onChatMessageChange = (e:any) => {\n    setChatMessage(e.target.value);\n  };\n\n  return (\n    <div>\n      <form className=\"ChatInput-form\" onSubmit={handleSubmit}>\n        <input type=\"text\" className=\"form-control\"\n          placeholder=\"메시지를 입력하세요.\"\n          value={chatMessage}\n          onChange={onChatMessageChange}\n        ></input>\n        <Button type=\"button\" className=\"btn btn-warning btn-sm\">전송</Button>\n      </form>\n    </div>\n  );\n};\n\nexport default ChatInput;","/goinfre/jinkim/bye_blackhole/app/react_p/src/Chat/UserList.tsx",["66"],"import React, { useEffect, useState } from \"react\";\nimport \"./styles/UserList.css\"\n\nconst UserList = ({ socket }: any) => {\n\tconst [userList, setUserList] = useState<{id: string, room: string, icon:any}[]>();\n\n\tuseEffect(() => {\n\t  socket.on(\"UserList\", (newUser:{id: string, room: string, icon:any}[]) => {\n\n\t\tsetUserList(newUser);\n\t  });\n\n\t  return () => {\n\t\tsocket.disconnect();\n\t  };\n\t}, [socket]);\n\n\treturn (\n\t\t<div>\n\t\t\t{userList?.map(user=>\n\t\t\t\t<div id=\"userList\">\n\t\t\t\t<span className=\"userIcon\">\n\t\t\t\t\t<img src={`data:image/jpeg;base64,${(user.icon).toString()}`} height=\"50\" width=\"50\" className=\"icon\"/>\n\t\t\t\t</span>\n\t\t\t\t<span className=\"userInfo\">\n\t\t\t\t\t<div className=\"id\">{user.id}</div>\n\t\t\t\t\t<div className=\"room\">{user.room}</div>\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\n\t);\n  };\n  export default UserList;\n","/goinfre/jinkim/bye_blackhole/app/react_p/src/Chat/Loading.tsx",[],"/goinfre/jinkim/bye_blackhole/app/react_p/src/Chat/Modal.tsx",[],"/goinfre/jinkim/bye_blackhole/app/react_p/src/Chat/Images.tsx",[],{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","replacedBy":"70"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","severity":1,"message":"72","line":38,"column":4,"nodeType":"73","endLine":38,"endColumn":71},{"ruleId":"74","severity":1,"message":"75","line":33,"column":4,"nodeType":"73","endLine":33,"endColumn":63},{"ruleId":"76","severity":1,"message":"77","line":11,"column":14,"nodeType":"78","endLine":11,"endColumn":70},{"ruleId":"79","severity":1,"message":"80","line":1,"column":17,"nodeType":"81","messageId":"82","endLine":1,"endColumn":23},{"ruleId":"79","severity":1,"message":"83","line":2,"column":8,"nodeType":"81","messageId":"82","endLine":2,"endColumn":22},{"ruleId":"74","severity":1,"message":"75","line":23,"column":6,"nodeType":"73","endLine":23,"endColumn":109},"no-native-reassign",["84"],"no-negated-in-lhs",["85"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","react-hooks/exhaustive-deps","Assignments to the 'userName' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","ConditionalExpression","@typescript-eslint/no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","'socketIOClient' is defined but never used.","no-global-assign","no-unsafe-negation"]