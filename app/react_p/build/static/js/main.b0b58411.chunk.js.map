{"version":3,"sources":["Chat/ChatInput.tsx","Chat/ChatLog.tsx","Chat/Loading.tsx","Chat/UserList.tsx","Chat/Chat.tsx","images/gamer_boy.png","images/gamer_girl.png","Chat/Images.tsx","images/gamer_keyboard.png","images/gamer_woman.png","images/man_icon.png","images/woman_icon.png","Chat/Home.tsx","Chat/Modal.tsx","Chat/RoomList.tsx","App.tsx","reportWebVitals.js","index.tsx"],"names":["ChatInput","userName","socket","useState","chatMessage","setChatMessage","className","onSubmit","e","preventDefault","emit","sessionStorage","getItem","msg","timeStamp","Date","toLocaleTimeString","type","placeholder","value","onChange","target","Button","ChatLog","msgList","setMsgList","useEffect","on","messageItem","myMsg","console","log","systemMessage","sysMsg","disconnect","map","idx","Loading","UserList","userList","setUserList","newUser","user","id","src","icon","toString","height","width","room","Chat","roomName","myInfo","socketIOClient","currentSocket","setCurrentSocket","images","gamer_boy","gamer_girl","Home","setUserName","setIcon","handleIconChange","setItem","name","href","Modal","props","open","close","header","onClick","children","RoomList","setRoomName","modalOpen","setModalOpen","a","roomInfo","password","owner_id","axios","post","App","path","exact","render","location","pathname","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.b0b58411.chunk.js","sourcesContent":["import React, { useRef, useState } from \"react\";\nimport socketIOClient from \"socket.io-client\";\nimport \"./styles/ChatInput.css\";\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport {Button} from \"react-bootstrap\";\n\nconst ChatInput = ({ userName, socket }: any) => {\n  const [chatMessage, setChatMessage] = useState(\"\");\n\n  const handleSubmit = (e:any) => {\n    e.preventDefault();\n    socket.emit(\"onSend\", {\n      userName: userName ? userName : sessionStorage.getItem(\"userName\"),\n      msg: chatMessage,\n      timeStamp: new Date().toLocaleTimeString(),\n    });\n    setChatMessage(\"\");\n  };\n\n  const onChatMessageChange = (e:any) => {\n    setChatMessage(e.target.value);\n  };\n\n  return (\n    <div>\n      <form className=\"ChatInput-form\" onSubmit={handleSubmit}>\n        <input type=\"text\" className=\"form-control\"\n          placeholder=\"메시지를 입력하세요.\"\n          value={chatMessage}\n          onChange={onChatMessageChange}\n        ></input>\n        <Button type=\"button\" className=\"btn btn-warning btn-sm\">전송</Button>\n      </form>\n    </div>\n  );\n};\n\nexport default ChatInput;","import React, { useEffect, useState } from \"react\";\nimport \"./styles/ChatLog.css\";\n\n\nconst ChatLog = ({ userName, socket }: any) => {\n  const [msgList, setMsgList] = useState<any[]>([]);\n\n  useEffect(() => {\n\t// messsgeItem : {msg: String, name: String, timeStamp: String}\n    socket.on(\"onReceive\", (messageItem: {userName:string, msg:string, timeStamp:string}) => {\n\t\tuserName = userName ? userName : sessionStorage.getItem(\"userName\")\n\t  if (userName === messageItem.userName)\n\t\tsetMsgList((msgList) => [...msgList, {myMsg: messageItem.msg, timeStamp: messageItem.timeStamp} as never]);\n\t  else\n\t\tsetMsgList((msgList) => [...msgList, messageItem]);\n      console.log(messageItem);\n\t  console.log(userName)\n    });\n    socket.on(\"onConnect\", (systemMessage: string) => {\n      setMsgList((msgList) => [...msgList, { sysMsg: systemMessage } as never]);\n    });\n    socket.on(\"onDisconnect\", (systemMessage: any) => {\n      setMsgList((msgList) => [...msgList, { sysMsg: systemMessage } as never]);\n    });\n    return () => {\n      socket.disconnect();\n    };\n  }, [socket]);\n\n  return (\n    <div>\n      {msgList.map((msg, idx) => (\n        <div key={idx}>\n\t\t  \t{msg.userName &&\n          \t\t<div className=\"msg-userName\">{msg.userName}</div>\n\t\t\t}\n\t\t\t{msg.msg &&\n\t\t\t\t<div className=\"msgLeft\">\n          \t\t\t<span className=\"msg-msg\">{msg.msg}</span>\n\t\t\t\t\t<span className=\"msg-timeStamp\">({msg.timeStamp})</span>\n\t\t\t\t</div>\n\t\t\t}\n\t\t\t{msg.myMsg &&\n\t\t\t\t<div className=\"msgRight\">\n\t\t\t\t\t<span className=\"msg-timeStamp\">({msg.timeStamp})</span>\n          \t\t\t<span className=\"msg-msg\">{msg.myMsg}</span>\n\t\t\t\t</div>\n\t\t\t}\n\t\t  <div className=\"sysMsg\" >{msg.sysMsg}</div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default ChatLog;","import React from \"react\";\n\nconst Loading = () => {\n  console.log(\"loading\");\n  return <div>Loading</div>;\n};\n\nexport default Loading;","import React, { useEffect, useState } from \"react\";\nimport \"./styles/UserList.css\"\n\nconst UserList = ({ socket }: any) => {\n\tconst [userList, setUserList] = useState<{id: string, room: string, icon:any}[]>();\n\n\tuseEffect(() => {\n\t  socket.on(\"UserList\", (newUser:{id: string, room: string, icon:any}[]) => {\n\n\t\tsetUserList(newUser);\n\t  });\n\n\t  return () => {\n\t\tsocket.disconnect();\n\t  };\n\t}, [socket]);\n\n\treturn (\n\t\t<div>\n\t\t\t{userList?.map(user=>\n\t\t\t\t<div id=\"userList\">\n\t\t\t\t<span className=\"userIcon\">\n\t\t\t\t\t<img src={`data:image/jpeg;base64,${(user.icon).toString()}`} height=\"50\" width=\"50\" className=\"icon\"/>\n\t\t\t\t</span>\n\t\t\t\t<span className=\"userInfo\">\n\t\t\t\t\t<div className=\"id\">{user.id}</div>\n\t\t\t\t\t<div className=\"room\">{user.room}</div>\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\n\t);\n  };\n  export default UserList;\n","import React, { useEffect, useState } from \"react\";\nimport socketIOClient from \"socket.io-client\";\nimport ChatInput from \"./ChatInput\";\nimport ChatLog from \"./ChatLog\";\nimport Loading from \"./Loading\";\nimport UserList from \"./UserList\";\nimport \"./styles/Chat.css\"\n\ninterface chatObj{\n\troomName: any,\n\tuserName: any,\n\ticon: any\n}\n\nconst Chat = ({ roomName, userName, icon }: chatObj) => {\n  const myInfo = {\n    roomName: roomName ? roomName : sessionStorage.getItem(\"roomName\"),\n    userName: userName ? userName : sessionStorage.getItem(\"userName\"),\n\ticon: icon ? icon : sessionStorage.getItem(\"icon\"),\n  };\n\n  const [currentSocket, setCurrentSocket] = useState(socketIOClient());\n\n  useEffect(() => {\n    setCurrentSocket(socketIOClient(\"http://localhost:80\"));\n  }, []);\n\n  if (currentSocket) {\n    currentSocket.on(\"connect\", () => {\n      currentSocket.emit(\"join\", myInfo);\n    });\n  }\n\n\n  return (\n    <div>\n      {currentSocket ? (\n        <>\n\t\t  <div id=\"Chat-container\">\n\t\t  \t<span className=\"Chat-box ChatLog\">\n          \t\t<div className=\"ChatLog-top\">\n\t\t\t\t\t<ChatLog userName={userName} socket={currentSocket}></ChatLog>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"ChatInput\">\n          \t\t\t<ChatInput userName={userName} socket={currentSocket}></ChatInput>\n\t\t  \t\t</div>\n\t\t  \t</span>\n\t\t  \t<span className=\"Chat-box UserList\">\n\t\t  \t\t<UserList socket={currentSocket}></UserList>\n\t\t  \t</span>\n\t\t  </div>\n\n        </>\n      ) : (\n        <Loading></Loading>\n      )}\n    </div>\n  );\n};\n\nexport default Chat;\n","export default __webpack_public_path__ + \"static/media/gamer_boy.d258cc40.png\";","export default __webpack_public_path__ + \"static/media/gamer_girl.53c77887.png\";","import gamer_boy from '../images/gamer_boy.png'\nimport gamer_girl from '../images/gamer_girl.png'\nimport gamer_keyboard from '../images/gamer_keyboard.png'\nimport gamer_woman from '../images/gamer_woman.png'\nimport man_icon from '../images/man_icon.png'\nimport woman_icon from '../images/woman_icon.png'\n\n\nconst images = [\n\t{value: 'gamer_keyboard.png', src: gamer_keyboard},\n\t{value: 'gamer_woman.png', src: gamer_woman},\n\t{value: 'gamer_boy.png', src: gamer_boy},\n\t{value: 'gamer_girl.png', src: gamer_girl},\n\t{value: 'man_icon.png', src: man_icon},\n\t{value: 'woman_icon.png', src: woman_icon},\n]\nexport default images;","export default __webpack_public_path__ + \"static/media/gamer_keyboard.14fd4540.png\";","export default __webpack_public_path__ + \"static/media/gamer_woman.22383467.png\";","export default __webpack_public_path__ + \"static/media/man_icon.5dbc57fb.png\";","export default __webpack_public_path__ + \"static/media/woman_icon.d33e7b33.png\";","import React from \"react\";\nimport \"./styles/Home.css\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport images from './Images';\n\ninterface HomeObj{\n\tuserName:any,\n\tsetUserName:(value:any)=>void,\n\ticon:any,\n\tsetIcon:(value:any)=>void\n}\n\nconst Home = ({ userName, setUserName, icon, setIcon }: HomeObj) => {\n  const handleUserNameChange = (e:any) => {\n    setUserName(e.target.value);\n  };\n  const handleIconChange = (e:any) => {\n    setIcon(e.target.value);\n  };\n\n  sessionStorage.setItem(\"userName\", userName);\n  sessionStorage.setItem(\"icon\", icon);\n\n  return (\n    <div className=\"Home-container\">\n      <label><b>ID</b></label>\n      <input onChange={handleUserNameChange}></input>\n\n\t  <div className=\"icon-container\">\n\t\t{images.map(({value, src}) =>\n\t\t\t<span className=\"icon\">\n\t\t\t<input type=\"radio\" name=\"icon\" value={value} onChange={handleIconChange} className=\"icon-input\"/>\n\t\t\t<img src={src} width=\"50\" height=\"50\" className=\"icon-img\"></img>\n\t\t\t</span>\n\t\t)}\n\t  </div>\n\n\t  <div className=\"Join-button\">\n\t  \t<a className=\"btn btn-dark\" href=\"/RoomList\"><b>로그인</b></a>\n\t  </div>\n    </div>\n  );\n};\n\nexport default Home;","import React from 'react';\nimport \"./styles/Modal.css\";\n\nconst Modal = ( props: any ) => {\n    // 열기, 닫기, 모달 헤더 텍스트를 부모로부터 받아옴\n    const { open, close, header } = props;\n\n    return (\n        // 모달이 열릴때 openModal 클래스가 생성된다.\n        <div className={ open ? 'openModal modal' : 'modal' }>\n            { open ? (\n                <section>\n                    <header>\n                        {header}\n                        <button className=\"close\" onClick={close}> &times; </button>\n                    </header>\n                    <main>\n                        {props.children}\n                    </main>\n                    <footer>\n\t\t\t\t\t\t<a className=\"btn btn-primary\" href=\"/Chat\"><b>방 만들기</b></a>\n                    </footer>\n                </section>\n            ) : null }\n        </div>\n    )\n}\n\nexport default Modal","import React, {useState} from \"react\";\nimport \"./styles/RoomList.css\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Modal from './Modal';\nimport axios from 'axios';\n\ninterface HomeObj{\n\tuserName:any,\n\troomName:any,\n\tsetRoomName:(value:any)=>void,\n}\n\nconst RoomList = ({ userName, roomName, setRoomName}: HomeObj) => {\n  const handleRoomNameChange = (e:any) => {\n    setRoomName(e.target.value);\n  };\n\n  const [modalOpen, setModalOpen] = useState(false);\n  const openModal = () => {\n\tsetModalOpen(true);\n  }\n  const closeModal = () => {\n\tsetModalOpen(false);\n  }\n\n  sessionStorage.setItem(\"roomName\", roomName);\n\n  //const [roomInfo, setRoomInfo] = useState<{id:string, password:string, owner_id:string}>();\n\n  async function makeRoom(){\n\t  userName = userName ? userName : sessionStorage.getItem(\"userName\")\n\t  const roomInfo = {id:roomName, password:\"\", owner_id:userName}\n\n\t  const res = await axios.post('/RoomList/insert', {roomInfo});\n\t  //setRoomInfo(res.data.roomInfo)\n  }\n\n  return (\n    <div className=\"RoomList-container\">\n\t\t<div className=\"makeRoom-box\">\n\t\t\t<a className=\"btn btn-primary btn-sm makeRoom\" onClick={openModal}><b>방 만들기</b></a>\n\t\t\t<Modal open={modalOpen} close={closeModal} header=\"방 만들기\">\n\t\t\t\t<label ><b>방 제목</b></label>\n\t\t\t\t<input onChange={handleRoomNameChange}></input>\n\t\t\t\t{makeRoom}\n\t\t\t</Modal>\n\t\t</div>\n\n\t\t<div className=\"RoomList\">\n\t\t\t방 목록...\n\t\t</div>\n\t\t<div className=\"Join-button\">\n\t\t\t<a className=\"btn btn-dark\" href=\"/Chat\"><b>입장하기</b></a>\n\t\t</div>\n    </div>\n  );\n};\n\nexport default RoomList;","//import logo from './logo.svg';\nimport React, {useState} from \"react\";\n//import './App.css';\n//import Hello, {Wrapper, Counter, InputSample} from './Hello';\nimport Chat from \"./Chat/Chat\";\nimport Home from \"./Chat/Home\";\nimport RoomList from \"./Chat/RoomList\"\nimport \"./Chat/styles/global.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\n\n/*\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n*/\n\n/*\nfunction App()\n{\n\treturn (\n\t\t<Wrapper>\n\t\t\t<Hello color=\"red\" name=\"react\" isSpecial/>\n\t\t\t<Hello color=\"orange\"/>\n\t\t\t<Counter />\n\t\t\t<InputSample />\n\t\t</Wrapper>\n\t)\n}\n*/\n\n\nfunction App() {\n\tconst [userName, setUserName] = useState();\n\tconst [roomName, setRoomName] = useState();\n\tconst [icon, setIcon] = useState();\n\n\treturn (\n\t  <div className=\"App\">\n\t\t<Router>\n\t\t  <Switch>\n\t\t\t<Route path=\"/\" exact>\n\t\t\t  <Home\n\t\t\t\tuserName={userName}\n\t\t\t\tsetUserName={setUserName}\n\t\t\t\ticon={icon}\n\t\t\t\tsetIcon={setIcon}\n\t\t\t\t/>\n\t\t\t</Route>\n\t\t\t<Route path=\"/RoomList\" exact>\n\t\t\t  <RoomList\n\t\t\t\tuserName={userName}\n\t\t\t\troomName={roomName}\n\t\t\t\tsetRoomName={setRoomName}\n\t\t\t  />\n\t\t\t</Route>\n\t\t\t<Route\n\t\t\t  path=\"/Chat\"\n\t\t\t  exact\n\t\t\t  render={() => <Chat userName={userName} roomName={roomName} icon={icon}/>}\n\t\t\t></Route>\n\t\t\t<Route\n          \t\trender={({location}) => (\n            \t\t<div>\n              \t\t\tNot Found {location.pathname}\n            \t\t</div>\n          \t\t)}\n        \t/>\n\t\t  </Switch>\n\t\t</Router>\n\t  </div>\n\t);\n  }\n\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  //<React.StrictMode>\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}